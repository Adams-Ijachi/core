{"version":3,"sources":["webpack://@flarum/core/./src/forum/utils/History.js","webpack://@flarum/core/./src/forum/utils/Pane.js","webpack://@flarum/core/./src/forum/components/HeaderPrimary.js","webpack://@flarum/core/./src/forum/components/SessionDropdown.js","webpack://@flarum/core/./src/forum/components/NotificationsDropdown.js","webpack://@flarum/core/./src/forum/utils/KeyboardNavigatable.js","webpack://@flarum/core/./src/forum/components/DiscussionsSearchSource.js","webpack://@flarum/core/./src/forum/components/UsersSearchSource.js","webpack://@flarum/core/./src/forum/components/Search.js","webpack://@flarum/core/./src/forum/components/HeaderSecondary.js","webpack://@flarum/core/./src/forum/components/ComposerButton.js","webpack://@flarum/core/./src/forum/states/ComposerState.js","webpack://@flarum/core/./src/forum/components/Composer.js","webpack://@flarum/core/./src/forum/resolvers/DiscussionPageResolver.ts","webpack://@flarum/core/./src/forum/components/NotificationsPage.js","webpack://@flarum/core/./src/forum/routes.js","webpack://@flarum/core/./src/forum/utils/alertEmailConfirmation.js","webpack://@flarum/core/./src/forum/states/NotificationListState.js","webpack://@flarum/core/./src/forum/states/SearchState.js","webpack://@flarum/core/./src/forum/states/GlobalSearchState.js","webpack://@flarum/core/./src/forum/ForumApplication.js","webpack://@flarum/core/./src/forum/utils/isSafariMobile.ts","webpack://@flarum/core/./src/forum/app.ts","webpack://@flarum/core/./src/forum/components/LogInButton.js","webpack://@flarum/core/./src/forum/components/PostPreview.js","webpack://@flarum/core/./src/forum/components/SearchSource.js","webpack://@flarum/core/./src/forum/compat.js","webpack://@flarum/core/./src/forum/index.js","webpack://@flarum/core/./src/common/utils/string.ts","webpack://@flarum/core/./src/forum/components/AffixedSidebar.js","webpack://@flarum/core/./src/forum/components/AvatarEditor.js","webpack://@flarum/core/./src/forum/components/ChangeEmailModal.js","webpack://@flarum/core/./src/forum/components/ChangePasswordModal.js","webpack://@flarum/core/./src/common/components/ConfirmDocumentUnload.js","webpack://@flarum/core/./src/forum/components/ComposerBody.js","webpack://@flarum/core/./src/forum/components/ComposerPostPreview.js","webpack://@flarum/core/./src/forum/components/DiscussionHero.js","webpack://@flarum/core/./node_modules/lodash-es/_baseToString.js","webpack://@flarum/core/./node_modules/lodash-es/_arrayMap.js","webpack://@flarum/core/./node_modules/lodash-es/escapeRegExp.js","webpack://@flarum/core/./node_modules/lodash-es/toString.js","webpack://@flarum/core/./src/forum/components/DiscussionListItem.js","webpack://@flarum/core/./src/forum/components/DiscussionList.js","webpack://@flarum/core/./src/forum/components/DiscussionListPane.js","webpack://@flarum/core/./src/forum/components/PostStreamScrubber.js","webpack://@flarum/core/./src/forum/components/DiscussionPage.js","webpack://@flarum/core/./src/forum/components/EditPostComposer.js","webpack://@flarum/core/./src/forum/components/EventPost.js","webpack://@flarum/core/./src/forum/components/LoadingPost.js","webpack://@flarum/core/./src/forum/components/LogInButtons.js","webpack://@flarum/core/./src/forum/components/Post.js","webpack://@flarum/core/./src/forum/components/PostEdited.js","webpack://@flarum/core/./src/forum/components/PostMeta.js","webpack://@flarum/core/./src/forum/components/PostUser.js","webpack://@flarum/core/./src/forum/components/RenameDiscussionModal.js","webpack://@flarum/core/./src/forum/components/ReplyComposer.js","webpack://@flarum/core/./src/forum/components/TerminalPost.js","webpack://@flarum/core/./src/forum/components/UserCard.js","webpack://@flarum/core/./src/forum/components/UserPage.js","webpack://@flarum/core/./src/forum/components/WelcomeHero.js","webpack://@flarum/core/./src/forum/states/DiscussionListState.js","webpack://@flarum/core/./node_modules/lodash-es/isObject.js","webpack://@flarum/core/./node_modules/lodash-es/now.js","webpack://@flarum/core/./node_modules/lodash-es/_trimmedEndIndex.js","webpack://@flarum/core/./node_modules/lodash-es/_baseTrim.js","webpack://@flarum/core/./node_modules/lodash-es/toNumber.js","webpack://@flarum/core/./node_modules/lodash-es/debounce.js","webpack://@flarum/core/./node_modules/lodash-es/throttle.js","webpack://@flarum/core/./src/forum/states/PostStreamState.js","webpack://@flarum/core/./src/forum/utils/DiscussionControls.js","webpack://@flarum/core/./src/forum/utils/PostControls.js","webpack://@flarum/core/./src/forum/utils/UserControls.js","webpack://@flarum/core/./src/forum/utils/slidable.js","webpack://@flarum/core/./node_modules/color-thief-browser/dist/color-thief.min.js","webpack://@flarum/core/./node_modules/color-thief-browser/dist/color-thief.min-exposed.js","webpack://@flarum/core/./node_modules/punycode/punycode.es6-exposed.js","webpack://@flarum/core/./node_modules/lodash-es/isSymbol.js","webpack://@flarum/core/./node_modules/punycode/punycode.es6.js"],"names":["History","defaultRoute","this","stack","getCurrent","length","getPrevious","push","name","title","url","m","route","get","secondTop","pop","top","canGoBack","back","home","set","backUrl","splice","setRouteWithForcedRefresh","Pane","element","pinnedKey","$element","$","pinned","localStorage","getItem","active","showing","render","enable","disable","show","clearTimeout","hideTimeout","hide","onmouseleave","setTimeout","bind","togglePinned","setItem","toggleClass","HeaderPrimary","view","className","listItems","items","toArray","ItemList","Component","SessionDropdown","initAttrs","attrs","buttonClassName","menuClassName","accessibleToggleLabel","app","translator","trans","vnode","children","getButtonContent","user","session","avatar","username","add","LinkButton","icon","href","forum","attribute","target","Separator","Button","onclick","logout","Dropdown","NotificationsDropdown","label","getButton","newNotifications","getNewCount","vdom","unread","getUnreadCount","getMenu","NotificationList","menuClick","state","then","redraw","drawer","isOpen","goToRoute","load","unreadNotificationCount","newNotificationCount","e","shiftKey","metaKey","ctrlKey","which","stopPropagation","KeyboardNavigatable","callbacks","whenCallback","event","onUp","callback","preventDefault","onDown","onSelect","onCancel","onRemove","selectionStart","selectionEnd","when","bindTo","on","navigate","keyCallback","DiscussionsSearchSource","results","search","query","toLowerCase","params","filter","q","page","limit","include","store","find","map","discussion","mostRelevantPost","data-index","id","Link","number","highlight","contentPlain","UsersSearchResults","concat","all","displayName","some","value","substr","i","arr","lastIndexOf","sort","a","b","localeCompare","text","undefined","Search","oninit","hasFocus","sources","loadingSources","index","currentSearch","getInitialSearch","sourceItems","searchLabel","extractText","role","classList","open","getValue","focused","loading","aria-label","type","placeholder","oninput","setValue","onfocus","onblur","LoadingIndicator","size","clear","source","onupdate","setIndex","getCurrentNumericIndex","maxHeight","window","innerHeight","querySelector","getBoundingClientRect","bottom","style","oncreate","blur","selectableItems","$input","navigator","selectResult","searchTimeout","isCached","MIN_SEARCH_LEN","Math","max","cache","one","select","attr","UsersSearchSource","$items","$item","eq","scrollToItem","$dropdown","parent","fixedIndex","removeClass","addClass","scrollTop","dropdownScroll","dropdownTop","offset","dropdownBottom","outerHeight","itemTop","itemBottom","parseInt","css","stop","animate","HeaderSecondary","LogInModal","SignUpModal","component","Object","keys","data","locales","locale","savePreferences","location","reload","document","cookie","SelectDropdown","notifications","modal","ComposerButton","ComposerState","position","Position","HIDDEN","height","body","editor","componentClass","componentResolver","preventExit","isVisible","sync","onExit","fields","content","Stream","destroy","NORMAL","FULLSCREEN","close","minimize","MINIMIZED","fullScreen","exitFullScreen","bodyMatches","subclassOf","every","key","isFullScreen","screen","composingReplyTo","ReplyComposer","confirm","message","preventClosingWhen","minimumHeight","maximumHeight","computedHeight","min","Composer","prevPosition","classes","normal","minimized","visible","showIfMinimized","configHandle","controlItems","composer","disabled","updateHeight","animatePositionChange","initializeHeight","handlers","onresize","resize","onmousemove","onmouseup","onremove","off","dom","mousedown","mouseStart","clientY","heightStart","handle","deltaPixels","changeHeight","anchorToBottom","updateBodyPadding","focus","first","$flexible","headerHeight","paddingBottom","footerHeight","animateHeightChange","$composer","oldHeight","newHeight","animation","promise","showBackdrop","$backdrop","appendTo","hideBackdrop","remove","scrollElement","documentElement","topOfViewport","scrollHeight","clientHeight","is","itemClassName","defaultHeight","DiscussionPageResolver","canonicalizeDiscussionSlug","slug","split","makeKey","param","near","routeName","replace","JSON","stringify","onmatch","args","requestedPath","current","matches","DiscussionPage","scrollToPostNumber","goToNumber","DefaultResolver","NotificationsPage","history","bodyClass","Page","PostsUserPage","routes","path","resolverClass","settings","post","alertEmailConfirmation","isEmailConfirmed","ResendButton","sent","class","request","method","ContainedAlert","Alert","mount","insertBefore","dismissible","controls","email","NotificationListState","notificationPages","moreResults","getNotificationPages","isLoading","hasMoreResults","pushAttributes","loadMore","parseResults","payload","links","next","markAllAsRead","forEach","notification","isRead","SearchState","cachedSearches","indexOf","GlobalSearchState","clearInitialSearch","stickyParams","changeSort","discussions","sortMap","providesInitialSearch","ForumApplication","DiscussionListState","defaultAction","pane","getElementById","prefix","Navigation","click","vendor","includes","userAgent","viewingDiscussion","authenticationComplete","loggedIn","Application","Forum","LogInButton","$window","width","PostPreview","excerpt","SearchSource","compat","PostControls","slidable","DiscussionControls","UserControls","BasicEditorDriver","PostStreamState","AffixedSidebar","DiscussionListPane","PostEdited","ChangePasswordModal","DiscussionList","AvatarEditor","Post","TerminalPost","ChangeEmailModal","PostUser","UserCard","EventPost","DiscussionHero","PostMeta","LogInButtons","WelcomeHero","ComposerPostPreview","RenameDiscussionModal","LoadingPost","compatObj","proxifyCompat","truncate","string","start","substring","getPlainContent","html","removeSelectors","join","trim","ucfirst","toUpperCase","boundOnresize","$sidebar","$header","$footer","$affixElement","removeData","affix","isDraggedOver","avatarUrl","data-toggle","quickUpload","ondragover","enableDragover","ondragenter","ondragleave","disableDragover","ondragend","ondrop","dropUpload","openPicker","upload","dataTransfer","files","file","FormData","append","serialize","raw","success","failure","response","pushPayload","avatarColor","password","bidi","onsubmit","alertAttrs","save","errorHandler","onerror","meta","loaded","error","status","alert","Modal","ConfirmDocumentUnload","handler","boundHandler","ComposerBody","TextEditor","confirmExit","hasChanges","originalContent","headerItems","submitLabel","preview","jumpToPreview","onchange","surround","updatePreview","s9e","TextFormatter","updateInterval","setInterval","clearInterval","badges","symbolProto","symbolToString","toString","baseToString","isArray","array","iteratee","result","Array","isSymbol","call","reRegExpChar","reHasRegExpChar","RegExp","test","DiscussionListItem","subtree","SubtreeRetainer","freshness","time","markedAllAsReadAt","getTime","elementAttrs","isHidden","isUnread","showUnread","showRepliesCount","jumpTo","phrase","escapeRegExp","highlightRegExp","lastPostNumber","lastReadPostNumber","markAsRead","ago","humanTime","createdAt","tooltip","placement","infoItems","tabindex","abbreviateNumber","slidableInstance","reset","onbeforeupdate","old","needsRebuild","showFirstPost","firstPost","contentType","lastPost","getParams","empty","Placeholder","isSearchResults","data-id","hotEdge","pageX","hasDiscussions","enoughSpace","$list","hover","previous","discussionListPaneScrollTop","$discussion","listTop","listBottom","discussionTop","discussionBottom","PostStreamScrubber","stream","scrollListener","ScrollListener","updateScrubberValues","fromScroll","forceHeightChange","count","viewing","transChoice","formatNumber","unreadCount","unreadPercent","styleUnread","newStyle","oldStyle","classNames","goToFirst","goToLast","forceUpdateScrubber","loadPromise","dragging","indexStart","onmousedown","options","percentPerPost","$scrubber","sanitizeIndex","description","heights","before","after","paused","adjustingHeight","func","animationPromises","part","$part","Promise","scrubber","scrollbar","originalEvent","touches","deltaIndex","newIndex","intIndex","floor","goToIndex","$scrollbar","offsetPercent","pageY","offsetIndex","parseFloat","minPercentVisible","percentPerVisiblePost","useBrowserScrollRestoration","PostStream","sidebarItems","onPositionChange","positionChanged","preloadedDiscussion","preloadedApiDocument","requestParams","bySlug","setTitle","setTitleCount","includedPosts","included","discussionId","record","relationships","getById","slice","SplitDropdown","startNumber","endNumber","replaceState","minimizeComposerIfFullScreen","EditPostComposer","editedContent","viewButton","alerts","dismiss","usernameHelper","descriptionData","descriptionKey","controlsOpen","actionItems","onshow","onhide","footerItems","$actions","$controls","hasClass","existing","shouldUpdateTooltip","oldEditedInfo","editedUser","editedInfo","editedAt","rebuildTooltip","permalink","getPermalink","touch","fullTime","attributes","ipAddress","origin","card","cardVisible","controlsButtonClassName","userOnline","timeout","showCard","hideCard","oncardshow","oncardhide","currentTitle","newTitle","update","createRecord","replyCount","color","backgroundColor","editable","lastSeenAt","online","isOnline","joinTime","UserPage","canEdit","loadUser","lowercaseUsername","navItems","commentCount","discussionCount","hidden","slideUp","trust","relevance","latest","newest","oldest","refreshParams","newParams","refresh","deferClear","loadResults","preloadedDiscussions","resolve","removeDiscussion","addDiscussion","unshift","reWhitespace","reTrimStart","charAt","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","other","valueOf","isBinary","nativeMax","nativeMin","wait","leading","trailing","TypeError","lastArgs","lastThis","maxWait","timerId","lastCallTime","lastInvokeTime","maxing","invokeFunc","thisArg","apply","leadingEdge","timerExpired","shouldInvoke","timeSinceLastCall","trailingEdge","timeWaiting","remainingWait","debounced","isInvoking","arguments","cancel","flush","loadPageTimeouts","pagesLoading","loadNext","throttle","_loadNext","loadPrevious","_loadPrevious","viewingEnd","visibleEnd","loadRange","visibleStart","noAnimation","resultPromise","targetPost","reply","loadNearNumber","needsScroll","animateScroll","loadNearIndex","posts","Number","constructor","loadCount","end","twoPagesAway","loadPage","backwards","anchorIndex","anchorScroll","loadIds","postIds","newPosts","abs","context","section","item","itemName","userControls","canReply","replyAction","moderationControls","canRename","renameAction","destructiveControls","canHide","restoreAction","canDelete","deleteAction","hideAction","forceRefresh","reject","console","log","hiddenAt","Date","hiddenUser","editAction","removePost","canEditCredentials","canEditGroups","showDeletionAlert","$underneathLeft","$underneathRight","startX","startY","couldBeSliding","isSliding","pos","animatePos","newPos","duration","step","x","complete","targetTouches","clientX","newX","newY","toggle","$underneath","side","scale","activate","CanvasImage","canvas","createElement","getContext","appendChild","drawImage","prototype","clearRect","putImageData","getPixelCount","getImageData","removeCanvas","parentNode","removeChild","ColorThief","getColor","getPalette","c","d","f","g","k","l","n","o","MMCQ","quantize","p","palette","pv","naturalOrder","sum","reduce","peek","debug","h","r1","r2","g1","g2","b1","b2","histo","vboxes","vbox","volume","j","copy","_volume","_count_set","_count","avg","_avg","contains","gval","bval","nearest","sqrt","pow","forcebw","module","exports","___EXPOSE_LOADER_IMPORT___","___EXPOSE_LOADER_GLOBAL_THIS___","maxInt","base","regexPunycode","regexNonASCII","regexSeparators","errors","stringFromCharCode","String","fromCharCode","RangeError","mapDomain","fn","parts","encoded","ucs2decode","output","counter","charCodeAt","extra","ucs2encode","fromCodePoint","digitToBasic","digit","flag","adapt","delta","numPoints","firstTime","baseMinusTMin","decode","input","inputLength","bias","basic","oldi","w","codePoint","t","baseMinusT","out","encode","currentValue","basicLength","handledCPCount","handledCPCountPlusOne","qMinusT","toUnicode","toASCII"],"mappings":"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","file":"/forum/flarum-core.js","sourcesContent":["import setRouteWithForcedRefresh from '../../common/utils/setRouteWithForcedRefresh';\n\n/**\n * The `History` class keeps track and manages a stack of routes that the user\n * has navigated to in their session.\n *\n * An item can be pushed to the top of the stack using the `push` method. An\n * item in the stack has a name and a URL. The name need not be unique; if it is\n * the same as the item before it, that will be overwritten with the new URL. In\n * this way, if a user visits a discussion, and then visits another discussion,\n * popping the history stack will still take them back to the discussion list\n * rather than the previous discussion.\n */\nexport default class History {\n  constructor(defaultRoute) {\n    /**\n     * The stack of routes that have been navigated to.\n     *\n     * @type {Array}\n     * @protected\n     */\n    this.stack = [];\n  }\n\n  /**\n   * Get the item on the top of the stack.\n   *\n   * @return {Object}\n   * @public\n   */\n  getCurrent() {\n    return this.stack[this.stack.length - 1];\n  }\n\n  /**\n   * Get the previous item on the stack.\n   *\n   * @return {Object}\n   * @public\n   */\n  getPrevious() {\n    return this.stack[this.stack.length - 2];\n  }\n\n  /**\n   * Push an item to the top of the stack.\n   *\n   * @param {String} name The name of the route.\n   * @param {String} title The title of the route.\n   * @param {String} [url] The URL of the route. The current URL will be used if\n   *     not provided.\n   * @public\n   */\n  push(name, title, url = m.route.get()) {\n    // If we're pushing an item with the same name as second-to-top item in the\n    // stack, we will assume that the user has clicked the 'back' button in\n    // their browser. In this case, we don't want to push a new item, so we will\n    // pop off the top item, and then the second-to-top item will be overwritten\n    // below.\n    const secondTop = this.stack[this.stack.length - 2];\n    if (secondTop && secondTop.name === name) {\n      this.stack.pop();\n    }\n\n    // If we're pushing an item with the same name as the top item in the stack,\n    // then we'll overwrite it with the new URL.\n    const top = this.getCurrent();\n    if (top && top.name === name) {\n      Object.assign(top, { url, title });\n    } else {\n      this.stack.push({ name, url, title });\n    }\n  }\n\n  /**\n   * Check whether or not the history stack is able to be popped.\n   *\n   * @return {Boolean}\n   * @public\n   */\n  canGoBack() {\n    return this.stack.length > 1;\n  }\n\n  /**\n   * Go back to the previous route in the history stack.\n   *\n   * @public\n   */\n  back() {\n    if (!this.canGoBack()) {\n      return this.home();\n    }\n\n    this.stack.pop();\n\n    m.route.set(this.getCurrent().url);\n  }\n\n  /**\n   * Get the URL of the previous page.\n   *\n   * @public\n   */\n  backUrl() {\n    const secondTop = this.stack[this.stack.length - 2];\n\n    return secondTop.url;\n  }\n\n  /**\n   * Go to the first route in the history stack.\n   *\n   * @public\n   */\n  home() {\n    this.stack.splice(0);\n\n    setRouteWithForcedRefresh('/');\n  }\n}\n","/**\n * The `Pane` class manages the page's discussion list sidepane. The pane is a\n * part of the content view (DiscussionPage component), but its visibility is\n * determined by CSS classes applied to the outer page element. This class\n * manages the application of those CSS classes.\n */\nexport default class Pane {\n  constructor(element) {\n    /**\n     * The localStorage key to store the pane's pinned state with.\n     *\n     * @type {String}\n     * @protected\n     */\n    this.pinnedKey = 'panePinned';\n\n    /**\n     * The page element.\n     *\n     * @type {jQuery}\n     * @protected\n     */\n    this.$element = $(element);\n\n    /**\n     * Whether or not the pane is currently pinned.\n     *\n     * @type {Boolean}\n     * @protected\n     */\n    this.pinned = localStorage.getItem(this.pinnedKey) === 'true';\n\n    /**\n     * Whether or not the pane is currently exists.\n     *\n     * @type {Boolean}\n     * @protected\n     */\n    this.active = false;\n\n    /**\n     * Whether or not the pane is currently showing, or is hidden off the edge\n     * of the screen.\n     *\n     * @type {Boolean}\n     * @protected\n     */\n    this.showing = false;\n\n    this.render();\n  }\n\n  /**\n   * Enable the pane.\n   *\n   * @public\n   */\n  enable() {\n    this.active = true;\n    this.render();\n  }\n\n  /**\n   * Disable the pane.\n   *\n   * @public\n   */\n  disable() {\n    this.active = false;\n    this.showing = false;\n    this.render();\n  }\n\n  /**\n   * Show the pane.\n   *\n   * @public\n   */\n  show() {\n    clearTimeout(this.hideTimeout);\n    this.showing = true;\n    this.render();\n  }\n\n  /**\n   * Hide the pane.\n   *\n   * @public\n   */\n  hide() {\n    this.showing = false;\n    this.render();\n  }\n\n  /**\n   * Begin a timeout to hide the pane, which can be cancelled by showing the\n   * pane.\n   *\n   * @public\n   */\n  onmouseleave() {\n    this.hideTimeout = setTimeout(this.hide.bind(this), 250);\n  }\n\n  /**\n   * Toggle whether or not the pane is pinned.\n   *\n   * @public\n   */\n  togglePinned() {\n    this.pinned = !this.pinned;\n\n    localStorage.setItem(this.pinnedKey, this.pinned ? 'true' : 'false');\n\n    this.render();\n  }\n\n  /**\n   * Apply the appropriate CSS classes to the page element.\n   *\n   * @protected\n   */\n  render() {\n    this.$element.toggleClass('panePinned', this.pinned).toggleClass('hasPane', this.active).toggleClass('paneShowing', this.showing);\n  }\n}\n","import Component from '../../common/Component';\nimport ItemList from '../../common/utils/ItemList';\nimport listItems from '../../common/helpers/listItems';\n\n/**\n * The `HeaderPrimary` component displays primary header controls. On the\n * default skin, these are shown just to the right of the forum title.\n */\nexport default class HeaderPrimary extends Component {\n  view() {\n    return <ul className=\"Header-controls\">{listItems(this.items().toArray())}</ul>;\n  }\n\n  /**\n   * Build an item list for the controls.\n   *\n   * @return {ItemList}\n   */\n  items() {\n    return new ItemList();\n  }\n}\n","import avatar from '../../common/helpers/avatar';\nimport username from '../../common/helpers/username';\nimport Dropdown from '../../common/components/Dropdown';\nimport LinkButton from '../../common/components/LinkButton';\nimport Button from '../../common/components/Button';\nimport ItemList from '../../common/utils/ItemList';\nimport Separator from '../../common/components/Separator';\n\n/**\n * The `SessionDropdown` component shows a button with the current user's\n * avatar/name, with a dropdown of session controls.\n */\nexport default class SessionDropdown extends Dropdown {\n  static initAttrs(attrs) {\n    super.initAttrs(attrs);\n\n    attrs.className = 'SessionDropdown';\n    attrs.buttonClassName = 'Button Button--user Button--flat';\n    attrs.menuClassName = 'Dropdown-menu--right';\n\n    attrs.accessibleToggleLabel = app.translator.trans('core.forum.header.session_dropdown_accessible_label');\n  }\n\n  view(vnode) {\n    return super.view({ ...vnode, children: this.items().toArray() });\n  }\n\n  getButtonContent() {\n    const user = app.session.user;\n\n    return [avatar(user), ' ', <span className=\"Button-label\">{username(user)}</span>];\n  }\n\n  /**\n   * Build an item list for the contents of the dropdown menu.\n   *\n   * @return {ItemList}\n   */\n  items() {\n    const items = new ItemList();\n    const user = app.session.user;\n\n    items.add(\n      'profile',\n      LinkButton.component(\n        {\n          icon: 'fas fa-user',\n          href: app.route.user(user),\n        },\n        app.translator.trans('core.forum.header.profile_button')\n      ),\n      100\n    );\n\n    items.add(\n      'settings',\n      LinkButton.component(\n        {\n          icon: 'fas fa-cog',\n          href: app.route('settings'),\n        },\n        app.translator.trans('core.forum.header.settings_button')\n      ),\n      50\n    );\n\n    if (app.forum.attribute('adminUrl')) {\n      items.add(\n        'administration',\n        LinkButton.component(\n          {\n            icon: 'fas fa-wrench',\n            href: app.forum.attribute('adminUrl'),\n            target: '_blank',\n          },\n          app.translator.trans('core.forum.header.admin_button')\n        ),\n        0\n      );\n    }\n\n    items.add('separator', Separator.component(), -90);\n\n    items.add(\n      'logOut',\n      Button.component(\n        {\n          icon: 'fas fa-sign-out-alt',\n          onclick: app.session.logout.bind(app.session),\n        },\n        app.translator.trans('core.forum.header.log_out_button')\n      ),\n      -100\n    );\n\n    return items;\n  }\n}\n","import Dropdown from '../../common/components/Dropdown';\nimport icon from '../../common/helpers/icon';\n\nexport default class NotificationsDropdown extends Dropdown {\n  static initAttrs(attrs) {\n    attrs.className = attrs.className || 'NotificationsDropdown';\n    attrs.buttonClassName = attrs.buttonClassName || 'Button Button--flat';\n    attrs.menuClassName = attrs.menuClassName || 'Dropdown-menu--right';\n    attrs.label = attrs.label || app.translator.trans('core.forum.notifications.tooltip');\n    attrs.icon = attrs.icon || 'fas fa-bell';\n    // For best a11y support, both `title` and `aria-label` should be used\n    attrs.accessibleToggleLabel = attrs.accessibleToggleLabel || app.translator.trans('core.forum.notifications.toggle_dropdown_accessible_label');\n\n    super.initAttrs(attrs);\n  }\n\n  getButton() {\n    const newNotifications = this.getNewCount();\n    const vdom = super.getButton();\n\n    vdom.attrs.title = this.attrs.label;\n\n    vdom.attrs.className += newNotifications ? ' new' : '';\n    vdom.attrs.onclick = this.onclick.bind(this);\n\n    return vdom;\n  }\n\n  getButtonContent() {\n    const unread = this.getUnreadCount();\n\n    return [\n      icon(this.attrs.icon, { className: 'Button-icon' }),\n      unread ? <span className=\"NotificationsDropdown-unread\">{unread}</span> : '',\n      <span className=\"Button-label\">{this.attrs.label}</span>,\n    ];\n  }\n\n  getMenu() {\n    const NotificationList = this.NotificationList;\n\n    return (\n      <div className={'Dropdown-menu ' + this.attrs.menuClassName} onclick={this.menuClick.bind(this)}>\n        {this.showing && NotificationList ? <NotificationList state={this.attrs.state} /> : ''}\n      </div>\n    );\n  }\n\n  onclick() {\n    import(/* webpackChunkName: \"forum/components/NotificationList\" */ './NotificationList').then((NotificationList) => {\n      this.NotificationList = NotificationList.default;\n      m.redraw();\n    });\n\n    if (app.drawer.isOpen()) {\n      this.goToRoute();\n    } else {\n      this.attrs.state.load();\n    }\n  }\n\n  goToRoute() {\n    m.route.set(app.route('notifications'));\n  }\n\n  getUnreadCount() {\n    return app.session.user.unreadNotificationCount();\n  }\n\n  getNewCount() {\n    return app.session.user.newNotificationCount();\n  }\n\n  menuClick(e) {\n    // Don't close the notifications dropdown if the user is opening a link in a\n    // new tab or window.\n    if (e.shiftKey || e.metaKey || e.ctrlKey || e.which === 2) e.stopPropagation();\n  }\n}\n","/**\n * The `KeyboardNavigatable` class manages lists that can be navigated with the\n * keyboard, calling callbacks for each actions.\n *\n * This helper encapsulates the key binding logic, providing a simple fluent\n * API for use.\n */\nexport default class KeyboardNavigatable {\n  constructor() {\n    /**\n     * Callback to be executed for a specified input.\n     *\n     * @callback KeyboardNavigatable~keyCallback\n     * @param {KeyboardEvent} event\n     * @returns {boolean}\n     */\n    this.callbacks = {};\n\n    /**\n     * Callback that determines whether keyboard input should be handled.\n     * By default, always handle keyboard navigation.\n     *\n     * @callback whenCallback\n     * @param {KeyboardEvent} event\n     * @returns {boolean}\n     */\n    this.whenCallback = (event) => true;\n  }\n\n  /**\n   * Provide a callback to be executed when navigating upwards.\n   *\n   * This will be triggered by the Up key.\n   *\n   * @public\n   * @param {KeyboardNavigatable~keyCallback} callback\n   * @return {KeyboardNavigatable}\n   */\n  onUp(callback) {\n    this.callbacks[38] = (e) => {\n      e.preventDefault();\n      callback(e);\n    };\n\n    return this;\n  }\n\n  /**\n   * Provide a callback to be executed when navigating downwards.\n   *\n   * This will be triggered by the Down key.\n   *\n   * @public\n   * @param {KeyboardNavigatable~keyCallback} callback\n   * @return {KeyboardNavigatable}\n   */\n  onDown(callback) {\n    this.callbacks[40] = (e) => {\n      e.preventDefault();\n      callback(e);\n    };\n\n    return this;\n  }\n\n  /**\n   * Provide a callback to be executed when the current item is selected..\n   *\n   * This will be triggered by the Return and Tab keys..\n   *\n   * @public\n   * @param {KeyboardNavigatable~keyCallback} callback\n   * @return {KeyboardNavigatable}\n   */\n  onSelect(callback) {\n    this.callbacks[9] = this.callbacks[13] = (e) => {\n      e.preventDefault();\n      callback(e);\n    };\n\n    return this;\n  }\n\n  /**\n   * Provide a callback to be executed when the navigation is canceled.\n   *\n   * This will be triggered by the Escape key.\n   *\n   * @public\n   * @param {KeyboardNavigatable~keyCallback} callback\n   * @return {KeyboardNavigatable}\n   */\n  onCancel(callback) {\n    this.callbacks[27] = (e) => {\n      e.stopPropagation();\n      e.preventDefault();\n      callback(e);\n    };\n\n    return this;\n  }\n\n  /**\n   * Provide a callback to be executed when previous input is removed.\n   *\n   * This will be triggered by the Backspace key.\n   *\n   * @public\n   * @param {KeyboardNavigatable~keyCallback} callback\n   * @return {KeyboardNavigatable}\n   */\n  onRemove(callback) {\n    this.callbacks[8] = (e) => {\n      if (e.target.selectionStart === 0 && e.target.selectionEnd === 0) {\n        callback(e);\n        e.preventDefault();\n      }\n    };\n\n    return this;\n  }\n\n  /**\n   * Provide a callback that determines whether keyboard input should be handled.\n   *\n   * @public\n   * @param {KeyboardNavigatable~whenCallback} callback\n   * @return {KeyboardNavigatable}\n   */\n  when(callback) {\n    this.whenCallback = callback;\n\n    return this;\n  }\n\n  /**\n   * Set up the navigation key bindings on the given jQuery element.\n   *\n   * @public\n   * @param {jQuery} $element\n   */\n  bindTo($element) {\n    // Handle navigation key events on the navigatable element.\n    $element.on('keydown', this.navigate.bind(this));\n  }\n\n  /**\n   * Interpret the given keyboard event as navigation commands.\n   *\n   * @public\n   * @param {KeyboardEvent} event\n   */\n  navigate(event) {\n    // This callback determines whether keyboard should be handled or ignored.\n    if (!this.whenCallback(event)) return;\n\n    const keyCallback = this.callbacks[event.which];\n    if (keyCallback) {\n      keyCallback(event);\n    }\n  }\n}\n","import highlight from '../../common/helpers/highlight';\nimport LinkButton from '../../common/components/LinkButton';\nimport Link from '../../common/components/Link';\n\n/**\n * The `DiscussionsSearchSource` finds and displays discussion search results in\n * the search dropdown.\n *\n * @implements SearchSource\n */\nexport default class DiscussionsSearchSource {\n  constructor() {\n    this.results = {};\n  }\n\n  search(query) {\n    query = query.toLowerCase();\n\n    this.results[query] = [];\n\n    const params = {\n      filter: { q: query },\n      page: { limit: 3 },\n      include: 'mostRelevantPost',\n    };\n\n    return app.store.find('discussions', params).then((results) => (this.results[query] = results));\n  }\n\n  view(query) {\n    query = query.toLowerCase();\n\n    const results = this.results[query] || [];\n\n    return [\n      <li className=\"Dropdown-header\">{app.translator.trans('core.forum.search.discussions_heading')}</li>,\n      <li>\n        {LinkButton.component(\n          {\n            icon: 'fas fa-search',\n            href: app.route('index', { q: query }),\n          },\n          app.translator.trans('core.forum.search.all_discussions_button', { query })\n        )}\n      </li>,\n      results.map((discussion) => {\n        const mostRelevantPost = discussion.mostRelevantPost();\n\n        return (\n          <li className=\"DiscussionSearchResult\" data-index={'discussions' + discussion.id()}>\n            <Link href={app.route.discussion(discussion, mostRelevantPost && mostRelevantPost.number())}>\n              <div className=\"DiscussionSearchResult-title\">{highlight(discussion.title(), query)}</div>\n              {mostRelevantPost ? <div className=\"DiscussionSearchResult-excerpt\">{highlight(mostRelevantPost.contentPlain(), query, 100)}</div> : ''}\n            </Link>\n          </li>\n        );\n      }),\n    ];\n  }\n}\n","import highlight from '../../common/helpers/highlight';\nimport avatar from '../../common/helpers/avatar';\nimport username from '../../common/helpers/username';\nimport Link from '../../common/components/Link';\n\n/**\n * The `UsersSearchSource` finds and displays user search results in the search\n * dropdown.\n *\n * @implements SearchSource\n */\nexport default class UsersSearchResults {\n  constructor() {\n    this.results = {};\n  }\n\n  search(query) {\n    return app.store\n      .find('users', {\n        filter: { q: query },\n        page: { limit: 5 },\n      })\n      .then((results) => {\n        this.results[query] = results;\n        m.redraw();\n      });\n  }\n\n  view(query) {\n    query = query.toLowerCase();\n\n    const results = (this.results[query] || [])\n      .concat(\n        app.store\n          .all('users')\n          .filter((user) => [user.username(), user.displayName()].some((value) => value.toLowerCase().substr(0, query.length) === query))\n      )\n      .filter((e, i, arr) => arr.lastIndexOf(e) === i)\n      .sort((a, b) => a.displayName().localeCompare(b.displayName()));\n\n    if (!results.length) return '';\n\n    return [\n      <li className=\"Dropdown-header\">{app.translator.trans('core.forum.search.users_heading')}</li>,\n      results.map((user) => {\n        const name = username(user);\n\n        const children = [highlight(name.text, query)];\n\n        return (\n          <li className=\"UserSearchResult\" data-index={'users' + user.id()}>\n            <Link href={app.route.user(user)}>\n              {avatar(user)}\n              {{ ...name, text: undefined, children }}\n            </Link>\n          </li>\n        );\n      }),\n    ];\n  }\n}\n","import Component from '../../common/Component';\nimport LoadingIndicator from '../../common/components/LoadingIndicator';\nimport ItemList from '../../common/utils/ItemList';\nimport classList from '../../common/utils/classList';\nimport extractText from '../../common/utils/extractText';\nimport KeyboardNavigatable from '../utils/KeyboardNavigatable';\nimport icon from '../../common/helpers/icon';\nimport DiscussionsSearchSource from './DiscussionsSearchSource';\nimport UsersSearchSource from './UsersSearchSource';\n\n/**\n * The `Search` component displays a menu of as-you-type results from a variety\n * of sources.\n *\n * The search box will be 'activated' if the app's search state's\n * getInitialSearch() value is a truthy value. If this is the case, an 'x'\n * button will be shown next to the search field, and clicking it will clear the search.\n *\n * ATTRS:\n *\n * - state: SearchState instance.\n */\nexport default class Search extends Component {\n  static MIN_SEARCH_LEN = 3;\n\n  oninit(vnode) {\n    super.oninit(vnode);\n    this.state = this.attrs.state;\n\n    /**\n     * Whether or not the search input has focus.\n     *\n     * @type {Boolean}\n     */\n    this.hasFocus = false;\n\n    /**\n     * An array of SearchSources.\n     *\n     * @type {SearchSource[]}\n     */\n    this.sources = null;\n\n    /**\n     * The number of sources that are still loading results.\n     *\n     * @type {Integer}\n     */\n    this.loadingSources = 0;\n\n    /**\n     * The index of the currently-selected <li> in the results list. This can be\n     * a unique string (to account for the fact that an item's position may jump\n     * around as new results load), but otherwise it will be numeric (the\n     * sequential position within the list).\n     *\n     * @type {String|Integer}\n     */\n    this.index = 0;\n  }\n\n  view() {\n    const currentSearch = this.state.getInitialSearch();\n\n    // Initialize search sources in the view rather than the constructor so\n    // that we have access to app.forum.\n    if (!this.sources) {\n      this.sources = this.sourceItems().toArray();\n    }\n\n    // Hide the search view if no sources were loaded\n    if (!this.sources.length) return <div></div>;\n\n    const searchLabel = extractText(app.translator.trans('core.forum.header.search_placeholder'));\n\n    return (\n      <div\n        role=\"search\"\n        className={\n          'Search ' +\n          classList({\n            open: this.state.getValue() && this.hasFocus,\n            focused: this.hasFocus,\n            active: !!currentSearch,\n            loading: !!this.loadingSources,\n          })\n        }\n      >\n        <div className=\"Search-input\">\n          <input\n            aria-label={searchLabel}\n            className=\"FormControl\"\n            type=\"search\"\n            placeholder={searchLabel}\n            value={this.state.getValue()}\n            oninput={(e) => this.state.setValue(e.target.value)}\n            onfocus={() => (this.hasFocus = true)}\n            onblur={() => (this.hasFocus = false)}\n          />\n          {this.loadingSources ? (\n            LoadingIndicator.component({ size: 'tiny', className: 'Button Button--icon Button--link' })\n          ) : currentSearch ? (\n            <button className=\"Search-clear Button Button--icon Button--link\" onclick={this.clear.bind(this)}>\n              {icon('fas fa-times-circle')}\n            </button>\n          ) : (\n            ''\n          )}\n        </div>\n        <ul className=\"Dropdown-menu Search-results\">\n          {this.state.getValue() && this.hasFocus ? this.sources.map((source) => source.view(this.state.getValue())) : ''}\n        </ul>\n      </div>\n    );\n  }\n\n  onupdate() {\n    // Highlight the item that is currently selected.\n    this.setIndex(this.getCurrentNumericIndex());\n\n    // If there are no sources, the search view is not shown.\n    if (!this.sources.length) return;\n\n    // Since extensions might add elements above the search box on mobile,\n    // we need to calculate and set the max height dynamically.\n    const resultsElementMargin = 14;\n    const maxHeight =\n      window.innerHeight - this.element.querySelector('.Search-input>.FormControl').getBoundingClientRect().bottom - resultsElementMargin;\n    this.element.querySelector('.Search-results').style['max-height'] = `${maxHeight}px`;\n  }\n\n  oncreate(vnode) {\n    super.oncreate(vnode);\n\n    const search = this;\n    const state = this.state;\n\n    // Highlight the item that is currently selected.\n    this.setIndex(this.getCurrentNumericIndex());\n\n    this.$('.Search-results')\n      .on('mousedown', (e) => e.preventDefault())\n      .on('click', () => this.$('input').blur())\n\n      // Whenever the mouse is hovered over a search result, highlight it.\n      .on('mouseenter', '> li:not(.Dropdown-header)', function () {\n        search.setIndex(search.selectableItems().index(this));\n      });\n\n    const $input = this.$('input');\n\n    this.navigator = new KeyboardNavigatable();\n    this.navigator\n      .onUp(() => this.setIndex(this.getCurrentNumericIndex() - 1, true))\n      .onDown(() => this.setIndex(this.getCurrentNumericIndex() + 1, true))\n      .onSelect(this.selectResult.bind(this))\n      .onCancel(this.clear.bind(this))\n      .bindTo($input);\n\n    // Handle input key events on the search input, triggering results to load.\n    $input\n      .on('input focus', function () {\n        const query = this.value.toLowerCase();\n\n        if (!query) return;\n\n        clearTimeout(search.searchTimeout);\n        search.searchTimeout = setTimeout(() => {\n          if (state.isCached(query)) return;\n\n          if (query.length >= Search.MIN_SEARCH_LEN) {\n            search.sources.map((source) => {\n              if (!source.search) return;\n\n              search.loadingSources++;\n\n              source.search(query).then(() => {\n                search.loadingSources = Math.max(0, search.loadingSources - 1);\n                m.redraw();\n              });\n            });\n          }\n\n          state.cache(query);\n          m.redraw();\n        }, 250);\n      })\n\n      .on('focus', function () {\n        $(this)\n          .one('mouseup', (e) => e.preventDefault())\n          .select();\n      });\n  }\n\n  /**\n   * Navigate to the currently selected search result and close the list.\n   */\n  selectResult() {\n    clearTimeout(this.searchTimeout);\n    this.loadingSources = 0;\n\n    if (this.state.getValue()) {\n      m.route.set(this.getItem(this.index).find('a').attr('href'));\n    } else {\n      this.clear();\n    }\n\n    this.$('input').blur();\n  }\n\n  /**\n   * Clear the search\n   */\n  clear() {\n    this.state.clear();\n  }\n\n  /**\n   * Build an item list of SearchSources.\n   *\n   * @return {ItemList}\n   */\n  sourceItems() {\n    const items = new ItemList();\n\n    if (app.forum.attribute('canViewDiscussions')) items.add('discussions', new DiscussionsSearchSource());\n    if (app.forum.attribute('canViewUserList')) items.add('users', new UsersSearchSource());\n\n    return items;\n  }\n\n  /**\n   * Get all of the search result items that are selectable.\n   *\n   * @return {jQuery}\n   */\n  selectableItems() {\n    return this.$('.Search-results > li:not(.Dropdown-header)');\n  }\n\n  /**\n   * Get the position of the currently selected search result item.\n   *\n   * @return {Integer}\n   */\n  getCurrentNumericIndex() {\n    return this.selectableItems().index(this.getItem(this.index));\n  }\n\n  /**\n   * Get the <li> in the search results with the given index (numeric or named).\n   *\n   * @param {String} index\n   * @return {DOMElement}\n   */\n  getItem(index) {\n    const $items = this.selectableItems();\n    let $item = $items.filter(`[data-index=\"${index}\"]`);\n\n    if (!$item.length) {\n      $item = $items.eq(index);\n    }\n\n    return $item;\n  }\n\n  /**\n   * Set the currently-selected search result item to the one with the given\n   * index.\n   *\n   * @param {Integer} index\n   * @param {Boolean} scrollToItem Whether or not to scroll the dropdown so that\n   *     the item is in view.\n   */\n  setIndex(index, scrollToItem) {\n    const $items = this.selectableItems();\n    const $dropdown = $items.parent();\n\n    let fixedIndex = index;\n    if (index < 0) {\n      fixedIndex = $items.length - 1;\n    } else if (index >= $items.length) {\n      fixedIndex = 0;\n    }\n\n    const $item = $items.removeClass('active').eq(fixedIndex).addClass('active');\n\n    this.index = $item.attr('data-index') || fixedIndex;\n\n    if (scrollToItem) {\n      const dropdownScroll = $dropdown.scrollTop();\n      const dropdownTop = $dropdown.offset().top;\n      const dropdownBottom = dropdownTop + $dropdown.outerHeight();\n      const itemTop = $item.offset().top;\n      const itemBottom = itemTop + $item.outerHeight();\n\n      let scrollTop;\n      if (itemTop < dropdownTop) {\n        scrollTop = dropdownScroll - dropdownTop + itemTop - parseInt($dropdown.css('padding-top'), 10);\n      } else if (itemBottom > dropdownBottom) {\n        scrollTop = dropdownScroll - dropdownBottom + itemBottom + parseInt($dropdown.css('padding-bottom'), 10);\n      }\n\n      if (typeof scrollTop !== 'undefined') {\n        $dropdown.stop(true).animate({ scrollTop }, 100);\n      }\n    }\n  }\n}\n","import Component from '../../common/Component';\nimport Button from '../../common/components/Button';\nimport SessionDropdown from './SessionDropdown';\nimport SelectDropdown from '../../common/components/SelectDropdown';\nimport NotificationsDropdown from './NotificationsDropdown';\nimport ItemList from '../../common/utils/ItemList';\nimport listItems from '../../common/helpers/listItems';\nimport Search from '../components/Search';\n\n/**\n * The `HeaderSecondary` component displays secondary header controls, such as\n * the search box and the user menu. On the default skin, these are shown on the\n * right side of the header.\n */\nexport default class HeaderSecondary extends Component {\n  view() {\n    return <ul className=\"Header-controls\">{listItems(this.items().toArray())}</ul>;\n  }\n\n  /**\n   * Build an item list for the controls.\n   *\n   * @return {ItemList}\n   */\n  items() {\n    const items = new ItemList();\n\n    const LogInModal = () => import(/* webpackChunkName: \"forum/components/LogInModal\" */ './LogInModal');\n    const SignUpModal = () => import(/* webpackChunkName: \"forum/components/SignUpModal\" */ './SignUpModal');\n\n    items.add('search', Search.component({ state: app.search }), 30);\n\n    if (app.forum.attribute('showLanguageSelector') && Object.keys(app.data.locales).length > 1) {\n      const locales = [];\n\n      for (const locale in app.data.locales) {\n        locales.push(\n          Button.component(\n            {\n              active: app.data.locale === locale,\n              icon: app.data.locale === locale ? 'fas fa-check' : true,\n              onclick: () => {\n                if (app.session.user) {\n                  app.session.user.savePreferences({ locale }).then(() => window.location.reload());\n                } else {\n                  document.cookie = `locale=${locale}; path=/; expires=Tue, 19 Jan 2038 03:14:07 GMT`;\n                  window.location.reload();\n                }\n              },\n            },\n            app.data.locales[locale]\n          )\n        );\n      }\n\n      items.add(\n        'locale',\n        SelectDropdown.component(\n          {\n            buttonClassName: 'Button Button--link',\n            accessibleToggleLabel: app.translator.trans('core.forum.header.locale_dropdown_accessible_label'),\n          },\n          locales\n        ),\n        20\n      );\n    }\n\n    if (app.session.user) {\n      items.add('notifications', NotificationsDropdown.component({ state: app.notifications }), 10);\n      items.add('session', SessionDropdown.component(), 0);\n    } else {\n      if (app.forum.attribute('allowSignUp')) {\n        items.add(\n          'signUp',\n          Button.component(\n            {\n              className: 'Button Button--link',\n              onclick: () => app.modal.show(SignUpModal),\n            },\n            app.translator.trans('core.forum.header.sign_up_link')\n          ),\n          10\n        );\n      }\n\n      items.add(\n        'logIn',\n        Button.component(\n          {\n            className: 'Button Button--link',\n            onclick: () => app.modal.show(LogInModal),\n          },\n          app.translator.trans('core.forum.header.log_in_link')\n        ),\n        0\n      );\n    }\n\n    return items;\n  }\n}\n","import Button from '../../common/components/Button';\n\n/**\n * The `ComposerButton` component displays a button suitable for the composer\n * controls.\n */\nexport default class ComposerButton extends Button {\n  static initAttrs(attrs) {\n    super.initAttrs(attrs);\n\n    attrs.className = attrs.className || 'Button Button--icon Button--link';\n  }\n}\n","import Component from '../../common/Component';\nimport subclassOf from '../../common/utils/subclassOf';\nimport Stream from '../../common/utils/Stream';\nimport ReplyComposer from '../components/ReplyComposer';\nimport EditorDriverInterface from '../../common/utils/EditorDriverInterface';\n\nclass ComposerState {\n  constructor() {\n    /**\n     * The composer's current position.\n     *\n     * @type {ComposerState.Position}\n     */\n    this.position = ComposerState.Position.HIDDEN;\n\n    /**\n     * The composer's intended height, which can be modified by the user\n     * (by dragging the composer handle).\n     *\n     * @type {Integer}\n     */\n    this.height = null;\n\n    /**\n     * The dynamic component being shown inside the composer.\n     *\n     * @type {Object}\n     */\n    this.body = { attrs: {} };\n\n    /**\n     * A reference to the text editor that allows text manipulation.\n     *\n     * @type {EditorDriverInterface|null}\n     */\n    this.editor = null;\n\n    this.clear();\n  }\n\n  /**\n   * Load a content component into the composer.\n   *\n   * @param {ComposerBody|Function} componentClass\n   * @public\n   */\n  async load(componentClass, attrs) {\n    if (!(componentClass instanceof Component)) {\n      const componentResolver = await componentClass();\n      componentClass = componentResolver.default;\n    }\n\n    const body = { componentClass, attrs };\n\n    if (this.preventExit()) return;\n\n    // If we load a similar component into the composer, then Mithril will be\n    // able to diff the old/new contents and some DOM-related state from the\n    // old composer will remain. To prevent this from happening, we clear the\n    // component and force a redraw, so that the new component will be working\n    // on a blank slate.\n    if (this.isVisible()) {\n      this.clear();\n      m.redraw.sync();\n    }\n\n    this.body = body;\n  }\n\n  /**\n   * Clear the composer's content component.\n   */\n  clear() {\n    this.position = ComposerState.Position.HIDDEN;\n    this.body = { attrs: {} };\n    this.onExit = null;\n\n    this.fields = {\n      content: Stream(''),\n    };\n\n    if (this.editor) {\n      this.editor.destroy();\n    }\n    this.editor = null;\n  }\n\n  /**\n   * Show the composer.\n   *\n   * @public\n   */\n  show() {\n    if (this.position === ComposerState.Position.NORMAL || this.position === ComposerState.Position.FULLSCREEN) return;\n\n    this.position = ComposerState.Position.NORMAL;\n    m.redraw.sync();\n  }\n\n  /**\n   * Close the composer.\n   *\n   * @public\n   */\n  hide() {\n    this.clear();\n    m.redraw();\n  }\n\n  /**\n   * Confirm with the user so they don't lose their content, then close the\n   * composer.\n   *\n   * @public\n   */\n  close() {\n    if (this.preventExit()) return;\n\n    this.hide();\n  }\n\n  /**\n   * Minimize the composer. Has no effect if the composer is hidden.\n   *\n   * @public\n   */\n  minimize() {\n    if (!this.isVisible()) return;\n\n    this.position = ComposerState.Position.MINIMIZED;\n    m.redraw();\n  }\n\n  /**\n   * Take the composer into fullscreen mode. Has no effect if the composer is\n   * hidden.\n   *\n   * @public\n   */\n  fullScreen() {\n    if (!this.isVisible()) return;\n\n    this.position = ComposerState.Position.FULLSCREEN;\n    m.redraw();\n  }\n\n  /**\n   * Exit fullscreen mode.\n   *\n   * @public\n   */\n  exitFullScreen() {\n    if (this.position !== ComposerState.Position.FULLSCREEN) return;\n\n    this.position = ComposerState.Position.NORMAL;\n    m.redraw();\n  }\n\n  /**\n   * Determine whether the body matches the given component class and data.\n   *\n   * @param {object} type The component class to check against. Subclasses are\n   *                      accepted as well.\n   * @param {object} data\n   * @return {boolean}\n   */\n  bodyMatches(type, data = {}) {\n    // Fail early when the body is of a different type\n    if (!subclassOf(this.body.componentClass, type)) return false;\n\n    // Now that the type is known to be correct, we loop through the provided\n    // data to see whether it matches the data in the attributes for the body.\n    return Object.keys(data).every((key) => this.body.attrs[key] === data[key]);\n  }\n\n  /**\n   * Determine whether or not the Composer is visible.\n   *\n   * True when the composer is displayed on the screen and has a body component.\n   * It could be open in \"normal\" or full-screen mode, or even minimized.\n   *\n   * @returns {boolean}\n   */\n  isVisible() {\n    return this.position !== ComposerState.Position.HIDDEN;\n  }\n\n  /**\n   * Determine whether or not the Composer is covering the screen.\n   *\n   * This will be true if the Composer is in full-screen mode on desktop,\n   * or if we are on a mobile device, where we always consider the composer as full-screen..\n   *\n   * @return {Boolean}\n   * @public\n   */\n  isFullScreen() {\n    return this.position === ComposerState.Position.FULLSCREEN || app.screen() === 'phone';\n  }\n\n  /**\n   * Check whether or not the user is currently composing a reply to a\n   * discussion.\n   *\n   * @param {Discussion} discussion\n   * @return {Boolean}\n   */\n  composingReplyTo(discussion) {\n    return this.isVisible() && this.bodyMatches(ReplyComposer, { discussion });\n  }\n\n  /**\n   * Confirm with the user that they want to close the composer and lose their\n   * content.\n   *\n   * @return {Boolean} Whether or not the exit was cancelled.\n   */\n  preventExit() {\n    if (!this.isVisible()) return;\n    if (!this.onExit) return;\n\n    if (this.onExit.callback()) {\n      return !confirm(this.onExit.message);\n    }\n  }\n\n  /**\n   * Configure when / what to ask the user before closing the composer.\n   *\n   * The provided callback will be used to determine whether asking for\n   * confirmation is necessary. If the callback returns true at the time of\n   * closing, the provided text will be shown in a standard confirmation dialog.\n   *\n   * @param {Function} callback\n   * @param {String} message\n   */\n  preventClosingWhen(callback, message) {\n    this.onExit = { callback, message };\n  }\n\n  /**\n   * Minimum height of the Composer.\n   * @returns {Integer}\n   */\n  minimumHeight() {\n    return 200;\n  }\n\n  /**\n   * Maxmimum height of the Composer.\n   * @returns {Integer}\n   */\n  maximumHeight() {\n    return $(window).height() - $('#header').outerHeight();\n  }\n\n  /**\n   * Computed the composer's current height, based on the intended height, and\n   * the composer's current state. This will be applied to the composer's\n   * content's DOM element.\n   * @returns {Integer|String}\n   */\n  computedHeight() {\n    // If the composer is minimized, then we don't want to set a height; we'll\n    // let the CSS decide how high it is. If it's fullscreen, then we need to\n    // make it as high as the window.\n    if (this.position === ComposerState.Position.MINIMIZED) {\n      return '';\n    } else if (this.position === ComposerState.Position.FULLSCREEN) {\n      return $(window).height();\n    }\n\n    // Otherwise, if it's normal or hidden, then we use the intended height.\n    // We don't let the composer get too small or too big, though.\n    return Math.max(this.minimumHeight(), Math.min(this.height, this.maximumHeight()));\n  }\n}\n\nComposerState.Position = {\n  HIDDEN: 'hidden',\n  NORMAL: 'normal',\n  MINIMIZED: 'minimized',\n  FULLSCREEN: 'fullScreen',\n};\n\nexport default ComposerState;\n","import Component from '../../common/Component';\nimport ItemList from '../../common/utils/ItemList';\nimport ComposerButton from './ComposerButton';\nimport listItems from '../../common/helpers/listItems';\nimport classList from '../../common/utils/classList';\nimport ComposerState from '../states/ComposerState';\n\n/**\n * The `Composer` component displays the composer. It can be loaded with a\n * content component with `load` and then its position/state can be altered with\n * `show`, `hide`, `close`, `minimize`, `fullScreen`, and `exitFullScreen`.\n */\nexport default class Composer extends Component {\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    /**\n     * The composer's \"state\".\n     *\n     * @type {ComposerState}\n     */\n    this.state = this.attrs.state;\n\n    /**\n     * Whether or not the composer currently has focus.\n     *\n     * @type {Boolean}\n     */\n    this.active = false;\n\n    // Store the initial position so that we can trigger animations correctly.\n    this.prevPosition = this.state.position;\n  }\n\n  view() {\n    const body = this.state.body;\n    const classes = {\n      normal: this.state.position === ComposerState.Position.NORMAL,\n      minimized: this.state.position === ComposerState.Position.MINIMIZED,\n      fullScreen: this.state.position === ComposerState.Position.FULLSCREEN,\n      active: this.active,\n      visible: this.state.isVisible(),\n    };\n\n    // Set up a handler so that clicks on the content will show the composer.\n    const showIfMinimized = this.state.position === ComposerState.Position.MINIMIZED ? this.state.show.bind(this.state) : undefined;\n\n    return (\n      <div className={'Composer ' + classList(classes)}>\n        <div className=\"Composer-handle\" oncreate={this.configHandle.bind(this)} />\n        <ul className=\"Composer-controls\">{listItems(this.controlItems().toArray())}</ul>\n        <div className=\"Composer-content\" onclick={showIfMinimized}>\n          {body.componentClass ? body.componentClass.component({ ...body.attrs, composer: this.state, disabled: classes.minimized }) : ''}\n        </div>\n      </div>\n    );\n  }\n\n  onupdate() {\n    if (this.state.position === this.prevPosition) {\n      // Set the height of the Composer element and its contents on each redraw,\n      // so that they do not lose it if their DOM elements are recreated.\n      this.updateHeight();\n    } else {\n      this.animatePositionChange();\n\n      this.prevPosition = this.state.position;\n    }\n  }\n\n  oncreate(vnode) {\n    super.oncreate(vnode);\n\n    this.initializeHeight();\n    this.$().hide().css('bottom', -this.state.computedHeight());\n\n    // Whenever any of the inputs inside the composer are have focus, we want to\n    // add a class to the composer to draw attention to it.\n    this.$().on('focus blur', ':input,.TextEditor-editorContainer', (e) => {\n      this.active = e.type === 'focusin';\n      m.redraw();\n    });\n\n    // When the escape key is pressed on any inputs, close the composer.\n    this.$().on('keydown', ':input,.TextEditor-editorContainer', 'esc', () => this.state.close());\n\n    this.handlers = {};\n\n    $(window)\n      .on('resize', (this.handlers.onresize = this.updateHeight.bind(this)))\n      .resize();\n\n    $(document)\n      .on('mousemove', (this.handlers.onmousemove = this.onmousemove.bind(this)))\n      .on('mouseup', (this.handlers.onmouseup = this.onmouseup.bind(this)));\n  }\n\n  onremove() {\n    $(window).off('resize', this.handlers.onresize);\n\n    $(document).off('mousemove', this.handlers.onmousemove).off('mouseup', this.handlers.onmouseup);\n  }\n\n  /**\n   * Add the necessary event handlers to the composer's handle so that it can\n   * be used to resize the composer.\n   */\n  configHandle(vnode) {\n    const composer = this;\n\n    $(vnode.dom)\n      .css('cursor', 'row-resize')\n      .bind('dragstart mousedown', (e) => e.preventDefault())\n      .mousedown(function (e) {\n        composer.mouseStart = e.clientY;\n        composer.heightStart = composer.$().height();\n        composer.handle = $(this);\n        $('body').css('cursor', 'row-resize');\n      });\n  }\n\n  /**\n   * Resize the composer according to mouse movement.\n   *\n   * @param {Event} e\n   */\n  onmousemove(e) {\n    if (!this.handle) return;\n\n    // Work out how much the mouse has been moved, and set the height\n    // relative to the old one based on that. Then update the content's\n    // height so that it fills the height of the composer, and update the\n    // body's padding.\n    const deltaPixels = this.mouseStart - e.clientY;\n    this.changeHeight(this.heightStart + deltaPixels);\n\n    // Update the body's padding-bottom so that no content on the page will ever\n    // get permanently hidden behind the composer. If the user is already\n    // scrolled to the bottom of the page, then we will keep them scrolled to\n    // the bottom after the padding has been updated.\n    const scrollTop = $(window).scrollTop();\n    const anchorToBottom = scrollTop > 0 && scrollTop + $(window).height() >= $(document).height();\n    this.updateBodyPadding(anchorToBottom);\n  }\n\n  /**\n   * Finish resizing the composer when the mouse is released.\n   */\n  onmouseup() {\n    if (!this.handle) return;\n\n    this.handle = null;\n    $('body').css('cursor', '');\n  }\n\n  /**\n   * Draw focus to the first focusable content element (the text editor).\n   */\n  focus() {\n    this.$('.Composer-content :input:enabled:visible, .TextEditor-editor').first().focus();\n  }\n\n  /**\n   * Update the DOM to reflect the composer's current height. This involves\n   * setting the height of the composer's root element, and adjusting the height\n   * of any flexible elements inside the composer's body.\n   */\n  updateHeight() {\n    const height = this.state.computedHeight();\n    const $flexible = this.$('.Composer-flexible');\n\n    this.$().height(height);\n\n    if ($flexible.length) {\n      const headerHeight = $flexible.offset().top - this.$().offset().top;\n      const paddingBottom = parseInt($flexible.css('padding-bottom'), 10);\n      const footerHeight = this.$('.Composer-footer').outerHeight(true);\n\n      $flexible.height(this.$().outerHeight() - headerHeight - paddingBottom - footerHeight);\n    }\n  }\n\n  /**\n   * Update the amount of padding-bottom on the body so that the page's\n   * content will still be visible above the composer when the page is\n   * scrolled right to the bottom.\n   */\n  updateBodyPadding() {\n    const visible =\n      this.state.position !== ComposerState.Position.HIDDEN && this.state.position !== ComposerState.Position.MINIMIZED && app.screen() !== 'phone';\n\n    const paddingBottom = visible ? this.state.computedHeight() - parseInt($('#app').css('padding-bottom'), 10) : 0;\n\n    $('#content').css({ paddingBottom });\n  }\n\n  /**\n   * Trigger the right animation depending on the desired new position.\n   */\n  animatePositionChange() {\n    // When exiting full-screen mode: focus content\n    if (this.prevPosition === ComposerState.Position.FULLSCREEN && this.state.position === ComposerState.Position.NORMAL) {\n      this.focus();\n      return;\n    }\n\n    switch (this.state.position) {\n      case ComposerState.Position.HIDDEN:\n        return this.hide();\n      case ComposerState.Position.MINIMIZED:\n        return this.minimize();\n      case ComposerState.Position.FULLSCREEN:\n        return this.focus();\n      case ComposerState.Position.NORMAL:\n        return this.show();\n    }\n  }\n\n  /**\n   * Animate the Composer into the new position by changing the height.\n   */\n  animateHeightChange() {\n    const $composer = this.$().stop(true);\n    const oldHeight = $composer.outerHeight();\n    const scrollTop = $(window).scrollTop();\n\n    $composer.show();\n    this.updateHeight();\n\n    const newHeight = $composer.outerHeight();\n\n    if (this.prevPosition === ComposerState.Position.HIDDEN) {\n      $composer.css({ bottom: -newHeight, height: newHeight });\n    } else {\n      $composer.css({ height: oldHeight });\n    }\n\n    const animation = $composer.animate({ bottom: 0, height: newHeight }, 'fast').promise();\n\n    this.updateBodyPadding();\n    $(window).scrollTop(scrollTop);\n    return animation;\n  }\n\n  /**\n   * Show the Composer backdrop.\n   */\n  showBackdrop() {\n    this.$backdrop = $('<div/>').addClass('composer-backdrop').appendTo('body');\n  }\n\n  /**\n   * Hide the Composer backdrop.\n   */\n  hideBackdrop() {\n    if (this.$backdrop) this.$backdrop.remove();\n  }\n\n  /**\n   * Animate the composer sliding up from the bottom to take its normal height.\n   *\n   * @private\n   */\n  show() {\n    this.animateHeightChange().then(() => this.focus());\n\n    if (app.screen() === 'phone') {\n      // On safari fixed position doesn't properly work on mobile,\n      // So we use absolute and set the top value.\n      // https://github.com/flarum/core/issues/2652\n\n      // Due to another safari bug, `scrollTop` is unreliable when\n      // at the very bottom of the page AND opening the composer.\n      // So we fallback to a calculated version of scrollTop.\n      // https://github.com/flarum/core/issues/2683\n      const scrollElement = document.documentElement;\n      const topOfViewport = Math.min(scrollElement.scrollTop, scrollElement.scrollHeight - scrollElement.clientHeight);\n      this.$().css('top', $('.App').is('.mobile-safari') ? topOfViewport : 0);\n      this.showBackdrop();\n    }\n  }\n\n  /**\n   * Animate closing the composer.\n   *\n   * @private\n   */\n  hide() {\n    const $composer = this.$();\n\n    // Animate the composer sliding down off the bottom edge of the viewport.\n    // Only when the animation is completed, update other elements on the page.\n    $composer.stop(true).animate({ bottom: -$composer.height() }, 'fast', () => {\n      $composer.hide();\n      this.hideBackdrop();\n      this.updateBodyPadding();\n    });\n  }\n\n  /**\n   * Shrink the composer until only its title is visible.\n   *\n   * @private\n   */\n  minimize() {\n    this.animateHeightChange();\n\n    this.$().css('top', 'auto');\n    this.hideBackdrop();\n  }\n\n  /**\n   * Build an item list for the composer's controls.\n   *\n   * @return {ItemList}\n   */\n  controlItems() {\n    const items = new ItemList();\n\n    if (this.state.position === ComposerState.Position.FULLSCREEN) {\n      items.add(\n        'exitFullScreen',\n        ComposerButton.component({\n          icon: 'fas fa-compress',\n          title: app.translator.trans('core.forum.composer.exit_full_screen_tooltip'),\n          onclick: this.state.exitFullScreen.bind(this.state),\n        })\n      );\n    } else {\n      if (this.state.position !== ComposerState.Position.MINIMIZED) {\n        items.add(\n          'minimize',\n          ComposerButton.component({\n            icon: 'fas fa-minus minimize',\n            title: app.translator.trans('core.forum.composer.minimize_tooltip'),\n            onclick: this.state.minimize.bind(this.state),\n            itemClassName: 'App-backControl',\n          })\n        );\n\n        items.add(\n          'fullScreen',\n          ComposerButton.component({\n            icon: 'fas fa-expand',\n            title: app.translator.trans('core.forum.composer.full_screen_tooltip'),\n            onclick: this.state.fullScreen.bind(this.state),\n          })\n        );\n      }\n\n      items.add(\n        'close',\n        ComposerButton.component({\n          icon: 'fas fa-times',\n          title: app.translator.trans('core.forum.composer.close_tooltip'),\n          onclick: this.state.close.bind(this.state),\n        })\n      );\n    }\n\n    return items;\n  }\n\n  /**\n   * Initialize default Composer height.\n   */\n  initializeHeight() {\n    this.state.height = localStorage.getItem('composerHeight');\n\n    if (!this.state.height) {\n      this.state.height = this.defaultHeight();\n    }\n  }\n\n  /**\n   * Default height of the Composer in case none is saved.\n   * @returns {Integer}\n   */\n  defaultHeight() {\n    return this.$().height();\n  }\n\n  /**\n   * Save a new Composer height and update the DOM.\n   * @param {Integer} height\n   */\n  changeHeight(height) {\n    this.state.height = height;\n    this.updateHeight();\n\n    localStorage.setItem('composerHeight', this.state.height);\n  }\n}\n","import DefaultResolver from '../../common/resolvers/DefaultResolver';\nimport DiscussionPage from '../components/DiscussionPage';\n\n/**\n * A custom route resolver for DiscussionPage that generates the same key to all posts\n * on the same discussion. It triggers a scroll when going from one post to another\n * in the same discussion.\n */\nexport default class DiscussionPageResolver extends DefaultResolver {\n  static scrollToPostNumber: string | null = null;\n\n  /**\n   * Remove optional parts of a discussion's slug to keep the substring\n   * that bijectively maps to a discussion object. By default this just\n   * extracts the numerical ID from the slug. If a custom discussion\n   * slugging driver is used, this may need to be overriden.\n   * @param slug\n   */\n  canonicalizeDiscussionSlug(slug: string | undefined) {\n    if (!slug) return;\n    return slug.split('-')[0];\n  }\n\n  /**\n   * @inheritdoc\n   */\n  makeKey() {\n    const params = { ...m.route.param() };\n    if ('near' in params) {\n      delete params.near;\n    }\n    params.id = this.canonicalizeDiscussionSlug(params.id);\n    return this.routeName.replace('.near', '') + JSON.stringify(params);\n  }\n\n  onmatch(args, requestedPath, route) {\n    if (app.current.matches(DiscussionPage) && this.canonicalizeDiscussionSlug(args.id) === this.canonicalizeDiscussionSlug(m.route.param('id'))) {\n      // By default, the first post number of any discussion is 1\n      DiscussionPageResolver.scrollToPostNumber = args.near || '1';\n    }\n\n    return super.onmatch(args, requestedPath, route);\n  }\n\n  render(vnode) {\n    if (DiscussionPageResolver.scrollToPostNumber !== null) {\n      const number = DiscussionPageResolver.scrollToPostNumber;\n      // Scroll after a timeout to avoid clashes with the render.\n      setTimeout(() => app.current.get('stream').goToNumber(number));\n      DiscussionPageResolver.scrollToPostNumber = null;\n    }\n\n    return super.render(vnode);\n  }\n}\n","import Page from '../../common/components/Page';\n\n/**\n * The `NotificationsPage` component shows the notifications list. It is only\n * used on mobile devices where the notifications dropdown is within the drawer.\n */\nexport default class NotificationsPage extends Page {\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    app.history.push('notifications');\n\n    import(/* webpackChunkName: \"forum/components/NotificationList\" */ './NotificationList').then((NotificationList) => {\n      this.NotificationList = NotificationList.default;\n      m.redraw();\n    });\n\n    app.notifications.load();\n\n    this.bodyClass = 'App--notifications';\n  }\n\n  view() {\n    const NotificationList = this.NotificationList;\n\n    return <div className=\"NotificationsPage\">{NotificationList ? <NotificationList state={app.notifications} /> : ''}</div>;\n  }\n}\n","import DiscussionPageResolver from './resolvers/DiscussionPageResolver';\nimport DiscussionPage from './components/DiscussionPage';\nimport NotificationsPage from './components/NotificationsPage';\n\n/**\n * The `routes` initializer defines the forum app's routes.\n *\n * @param {App} app\n */\nexport default function (app) {\n  const IndexPage = () => import(/* webpackChunkName: \"forum/components/IndexPage\" */ './components/IndexPage');\n  const PostsUserPage = () => import(/* webpackChunkName: \"forum/components/PostsUserPage\" */ './components/PostsUserPage');\n  const DiscussionsUserPage = () => import(/* webpackChunkName: \"forum/components/DiscussionsUserPage\" */ './components/DiscussionsUserPage');\n  const SettingsPage = () => import(/* webpackChunkName: \"forum/components/SettingsPage\" */ './components/SettingsPage');\n\n  app.routes = {\n    index: { path: '/all', component: IndexPage },\n\n    discussion: { path: '/d/:id', component: DiscussionPage, resolverClass: DiscussionPageResolver },\n    'discussion.near': { path: '/d/:id/:near', component: DiscussionPage, resolverClass: DiscussionPageResolver },\n\n    user: { path: '/u/:username', component: PostsUserPage },\n    'user.posts': { path: '/u/:username', component: PostsUserPage },\n    'user.discussions': { path: '/u/:username/discussions', component: DiscussionsUserPage },\n\n    settings: { path: '/settings', component: SettingsPage },\n    notifications: { path: '/notifications', component: NotificationsPage },\n  };\n\n  /**\n   * Generate a URL to a discussion.\n   *\n   * @param {Discussion} discussion\n   * @param {Integer} [near]\n   * @return {String}\n   */\n  app.route.discussion = (discussion, near) => {\n    return app.route(near && near !== 1 ? 'discussion.near' : 'discussion', {\n      id: discussion.slug(),\n      near: near && near !== 1 ? near : undefined,\n    });\n  };\n\n  /**\n   * Generate a URL to a post.\n   *\n   * @param {Post} post\n   * @return {String}\n   */\n  app.route.post = (post) => {\n    return app.route.discussion(post.discussion(), post.number());\n  };\n\n  /**\n   * Generate a URL to a user.\n   *\n   * @param {User} user\n   * @return {String}\n   */\n  app.route.user = (user) => {\n    return app.route('user', {\n      username: user.slug(),\n    });\n  };\n}\n","import Alert from '../../common/components/Alert';\nimport Button from '../../common/components/Button';\nimport icon from '../../common/helpers/icon';\nimport Component from '../../common/Component';\n\n/**\n * Shows an alert if the user has not yet confirmed their email address.\n *\n * @param {ForumApplication} app\n */\nexport default function alertEmailConfirmation(app) {\n  const user = app.session.user;\n\n  if (!user || user.isEmailConfirmed()) return;\n\n  class ResendButton extends Component {\n    oninit(vnode) {\n      super.oninit(vnode);\n\n      this.loading = false;\n      this.sent = false;\n    }\n\n    view() {\n      return (\n        <Button class=\"Button Button--link\" onclick={this.onclick.bind(this)} loading={this.loading} disabled={this.sent}>\n          {this.sent\n            ? [icon('fas fa-check'), ' ', app.translator.trans('core.forum.user_email_confirmation.sent_message')]\n            : app.translator.trans('core.forum.user_email_confirmation.resend_button')}\n        </Button>\n      );\n    }\n\n    onclick() {\n      this.loading = true;\n      m.redraw();\n\n      app\n        .request({\n          method: 'POST',\n          url: app.forum.attribute('apiUrl') + '/users/' + user.id() + '/send-confirmation',\n        })\n        .then(() => {\n          this.loading = false;\n          this.sent = true;\n          m.redraw();\n        })\n        .catch(() => {\n          this.loading = false;\n          m.redraw();\n        });\n    }\n  }\n\n  class ContainedAlert extends Alert {\n    view(vnode) {\n      const vdom = super.view(vnode);\n      return { ...vdom, children: [<div className=\"container\">{vdom.children}</div>] };\n    }\n  }\n\n  m.mount($('<div/>').insertBefore('#content')[0], {\n    view: () => (\n      <ContainedAlert dismissible={false} controls={[<ResendButton />]}>\n        {app.translator.trans('core.forum.user_email_confirmation.alert_message', { email: <strong>{user.email()}</strong> })}\n      </ContainedAlert>\n    ),\n  });\n}\n","export default class NotificationListState {\n  constructor(app) {\n    this.app = app;\n\n    this.notificationPages = [];\n\n    this.loading = false;\n\n    this.moreResults = false;\n  }\n\n  clear() {\n    this.notificationPages = [];\n  }\n\n  getNotificationPages() {\n    return this.notificationPages;\n  }\n\n  isLoading() {\n    return this.loading;\n  }\n\n  hasMoreResults() {\n    return this.moreResults;\n  }\n\n  /**\n   * Load notifications into the application's cache if they haven't already\n   * been loaded.\n   */\n  load() {\n    if (this.app.session.user.newNotificationCount()) {\n      this.notificationPages = [];\n    }\n\n    if (this.notificationPages.length > 0) {\n      return;\n    }\n\n    this.app.session.user.pushAttributes({ newNotificationCount: 0 });\n\n    this.loadMore();\n  }\n\n  /**\n   * Load the next page of notification results.\n   *\n   * @public\n   */\n  loadMore() {\n    this.loading = true;\n    m.redraw();\n\n    const params = this.notificationPages.length > 0 ? { page: { offset: this.notificationPages.length * 10 } } : null;\n\n    return this.app.store\n      .find('notifications', params)\n      .then(this.parseResults.bind(this))\n      .catch(() => {})\n      .then(() => {\n        this.loading = false;\n        m.redraw();\n      });\n  }\n\n  /**\n   * Parse results and append them to the notification list.\n   *\n   * @param {Notification[]} results\n   * @return {Notification[]}\n   */\n  parseResults(results) {\n    if (results.length) this.notificationPages.push(results);\n\n    this.moreResults = !!results.payload.links.next;\n\n    return results;\n  }\n\n  /**\n   * Mark all of the notifications as read.\n   */\n  markAllAsRead() {\n    if (this.notificationPages.length === 0) return;\n\n    this.app.session.user.pushAttributes({ unreadNotificationCount: 0 });\n\n    this.notificationPages.forEach((notifications) => {\n      notifications.forEach((notification) => notification.pushAttributes({ isRead: true }));\n    });\n\n    this.app.request({\n      url: this.app.forum.attribute('apiUrl') + '/notifications/read',\n      method: 'POST',\n    });\n  }\n}\n","export default class SearchState {\n  constructor(cachedSearches = []) {\n    this.cachedSearches = cachedSearches;\n  }\n\n  getValue() {\n    return this.value;\n  }\n\n  setValue(value) {\n    this.value = value;\n  }\n\n  /**\n   * Clear the search value.\n   */\n  clear() {\n    this.setValue('');\n  }\n\n  /**\n   * Mark that we have already searched for this query so that we don't\n   * have to ping the endpoint again.\n   */\n  cache(query) {\n    this.cachedSearches.push(query);\n  }\n\n  /**\n   * Check if this query has been searched before.\n   */\n  isCached(query) {\n    return this.cachedSearches.indexOf(query) !== -1;\n  }\n}\n","import setRouteWithForcedRefresh from '../../common/utils/setRouteWithForcedRefresh';\nimport SearchState from './SearchState';\n\nexport default class GlobalSearchState extends SearchState {\n  constructor(cachedSearches = []) {\n    super(cachedSearches);\n  }\n\n  getValue() {\n    if (this.value === undefined) {\n      this.value = this.getInitialSearch() || '';\n    }\n\n    return super.getValue();\n  }\n\n  /**\n   * Clear the search input and the current controller's active search.\n   */\n  clear() {\n    super.clear();\n\n    if (this.getInitialSearch()) {\n      this.clearInitialSearch();\n    } else {\n      m.redraw();\n    }\n  }\n\n  /**\n   * Get URL parameters that stick between filter changes.\n   *\n   * @return {Object}\n   */\n  stickyParams() {\n    return {\n      sort: m.route.param('sort'),\n      q: m.route.param('q'),\n    };\n  }\n\n  /**\n   * Get parameters to pass to the DiscussionList component.\n   *\n   * @return {Object}\n   */\n  params() {\n    const params = this.stickyParams();\n\n    params.filter = m.route.param('filter');\n\n    return params;\n  }\n\n  /**\n   * Redirect to the index page using the given sort parameter.\n   *\n   * @param {String} sort\n   */\n  changeSort(sort) {\n    const params = this.params();\n\n    if (sort === Object.keys(app.discussions.sortMap())[0]) {\n      delete params.sort;\n    } else {\n      params.sort = sort;\n    }\n\n    setRouteWithForcedRefresh(app.route(app.current.get('routeName'), params));\n  }\n\n  /**\n   * Return the current search query, if any. This is implemented to activate\n   * the search box in the header.\n   *\n   * @see Search\n   * @return {String}\n   */\n  getInitialSearch() {\n    return app.current.type && app.current.type.providesInitialSearch && this.params().q;\n  }\n\n  /**\n   * Redirect to the index page without a search filter. This is called when the\n   * 'x' is clicked in the search box in the header.\n   *\n   * @see Search\n   */\n  clearInitialSearch() {\n    const params = this.params();\n    delete params.q;\n\n    setRouteWithForcedRefresh(app.route(app.current.get('routeName'), params));\n  }\n}\n","import History from './utils/History';\nimport Pane from './utils/Pane';\nimport DiscussionPage from './components/DiscussionPage';\nimport HeaderPrimary from './components/HeaderPrimary';\nimport HeaderSecondary from './components/HeaderSecondary';\nimport Composer from './components/Composer';\nimport routes from './routes';\nimport alertEmailConfirmation from './utils/alertEmailConfirmation';\nimport Application from '../common/Application';\nimport Navigation from '../common/components/Navigation';\nimport NotificationListState from './states/NotificationListState';\nimport GlobalSearchState from './states/GlobalSearchState';\nimport DiscussionListState from './states/DiscussionListState';\nimport ComposerState from './states/ComposerState';\nimport isSafariMobile from './utils/isSafariMobile';\n\nexport default class ForumApplication extends Application {\n  /**\n   * An object which controls the state of the page's side pane.\n   *\n   * @type {Pane}\n   */\n  pane = null;\n\n  /**\n   * An object which controls the state of the page's drawer.\n   *\n   * @type {Drawer}\n   */\n  drawer = null;\n\n  /**\n   * The app's history stack, which keeps track of which routes the user visits\n   * so that they can easily navigate back to the previous route.\n   *\n   * @type {History}\n   */\n  history = new History();\n\n  /**\n   * An object which controls the state of the user's notifications.\n   *\n   * @type {NotificationListState}\n   */\n  notifications = new NotificationListState(this);\n\n  /*\n   * An object which stores previously searched queries and provides convenient\n   * tools for retrieving and managing search values.\n   *\n   * @type {GlobalSearchState}\n   */\n  search = new GlobalSearchState();\n\n  /*\n   * An object which controls the state of the composer.\n   */\n  composer = new ComposerState();\n\n  constructor() {\n    super();\n\n    routes(this);\n\n    /**\n     * An object which controls the state of the cached discussion list, which\n     * is used in the index page and the slideout pane.\n     *\n     * @type {DiscussionListState}\n     */\n    this.discussions = new DiscussionListState({}, this);\n  }\n\n  /**\n   * @inheritdoc\n   */\n  mount() {\n    // Get the configured default route and update that route's path to be '/'.\n    // Push the homepage as the first route, so that the user will always be\n    // able to click on the 'back' button to go home, regardless of which page\n    // they started on.\n    const defaultRoute = this.forum.attribute('defaultRoute');\n    let defaultAction = 'index';\n\n    for (const i in this.routes) {\n      if (this.routes[i].path === defaultRoute) defaultAction = i;\n    }\n\n    this.routes[defaultAction].path = '/';\n    this.history.push(defaultAction, this.translator.trans('core.forum.header.back_to_index_tooltip'), '/');\n\n    this.pane = new Pane(document.getElementById('app'));\n\n    m.route.prefix = '';\n    super.mount(this.forum.attribute('basePath'));\n\n    // We mount navigation and header components after the page, so components\n    // like the back button can access the updated state when rendering.\n    m.mount(document.getElementById('app-navigation'), { view: () => Navigation.component({ className: 'App-backControl', drawer: true }) });\n    m.mount(document.getElementById('header-navigation'), Navigation);\n    m.mount(document.getElementById('header-primary'), HeaderPrimary);\n    m.mount(document.getElementById('header-secondary'), HeaderSecondary);\n    m.mount(document.getElementById('composer'), { view: () => Composer.component({ state: this.composer }) });\n\n    alertEmailConfirmation(this);\n\n    // Route the home link back home when clicked. We do not want it to register\n    // if the user is opening it in a new tab, however.\n    $('#home-link').click((e) => {\n      if (e.ctrlKey || e.metaKey || e.which === 2) return;\n      e.preventDefault();\n      app.history.home();\n\n      // Reload the current user so that their unread notification count is refreshed.\n      if (app.session.user) {\n        app.store.find('users', app.session.user.id());\n        m.redraw();\n      }\n    });\n\n    if (isSafariMobile()) {\n      $(() => {\n        $('.App').addClass('mobile-safari');\n      });\n    }\n  }\n\n  /**\n   * Check whether or not the user is currently viewing a discussion.\n   *\n   * @param {Discussion} discussion\n   * @return {Boolean}\n   */\n  async viewingDiscussion(discussion) {\n    return this.current.matches(DiscussionPage.default, { discussion });\n  }\n\n  /**\n   * Callback for when an external authenticator (social login) action has\n   * completed.\n   *\n   * If the payload indicates that the user has been logged in, then the page\n   * will be reloaded. Otherwise, a SignUpModal will be opened, prefilled\n   * with the provided details.\n   *\n   * @param {Object} payload A dictionary of attrs to pass into the sign up\n   *     modal. A truthy `loggedIn` attr indicates that the user has logged\n   *     in, and thus the page is reloaded.\n   * @public\n   */\n  authenticationComplete(payload) {\n    if (payload.loggedIn) {\n      window.location.reload();\n    } else {\n      const SignUpModal = () => import(/* webpackChunkName: \"forum/components/SignUpModal\" */ './components/SignUpModal');\n\n      this.modal.show(SignUpModal, payload);\n    }\n  }\n}\n","/**\n * @see https://stackoverflow.com/a/31732310\n */\nexport default function isSafariMobile(): boolean {\n  return (\n    'ontouchstart' in window &&\n    navigator.vendor &&\n    navigator.vendor.includes('Apple') &&\n    navigator.userAgent &&\n    !navigator.userAgent.includes('CriOS') &&\n    !navigator.userAgent.includes('FxiOS')\n  );\n}\n","import Forum from './ForumApplication';\n\nconst app = new Forum();\n\n// @ts-ignore\nwindow.app = app;\n\nexport default app;\n","import Button from '../../common/components/Button';\n\n/**\n * The `LogInButton` component displays a social login button which will open\n * a popup window containing the specified path.\n *\n * ### Attrs\n *\n * - `path`\n */\nexport default class LogInButton extends Button {\n  static initAttrs(attrs) {\n    attrs.className = (attrs.className || '') + ' LogInButton';\n\n    attrs.onclick = function () {\n      const width = 580;\n      const height = 400;\n      const $window = $(window);\n\n      window.open(\n        app.forum.attribute('baseUrl') + attrs.path,\n        'logInPopup',\n        `width=${width},` +\n          `height=${height},` +\n          `top=${$window.height() / 2 - height / 2},` +\n          `left=${$window.width() / 2 - width / 2},` +\n          'status=no,scrollbars=yes,resizable=no'\n      );\n    };\n\n    super.initAttrs(attrs);\n  }\n}\n","import Component from '../../common/Component';\nimport Link from '../../common/components/Link';\nimport avatar from '../../common/helpers/avatar';\nimport username from '../../common/helpers/username';\nimport highlight from '../../common/helpers/highlight';\n\n/**\n * The `PostPreview` component shows a link to a post containing the avatar and\n * username of the author, and a short excerpt of the post's content.\n *\n * ### Attrs\n *\n * - `post`\n */\nexport default class PostPreview extends Component {\n  view() {\n    const post = this.attrs.post;\n    const user = post.user();\n    const excerpt = highlight(post.contentPlain(), this.attrs.highlight, 300);\n\n    return (\n      <Link className=\"PostPreview\" href={app.route.post(post)} onclick={this.attrs.onclick}>\n        <span className=\"PostPreview-content\">\n          {avatar(user)}\n          {username(user)} <span className=\"PostPreview-excerpt\">{excerpt}</span>\n        </span>\n      </Link>\n    );\n  }\n}\n","/**\n * The `SearchSource` interface defines a section of search results in the\n * search dropdown.\n *\n * Search sources should be registered with the `Search` component class\n * by extending the `sourceItems` method. When the user types a\n * query, each search source will be prompted to load search results via the\n * `search` method. When the dropdown is redrawn, it will be constructed by\n * putting together the output from the `view` method of each source.\n *\n * @interface\n */\nexport default class SearchSource {\n  /**\n   * Make a request to get results for the given query.\n   *\n   * @param {String} query\n   * @return {Promise}\n   */\n  search() {}\n\n  /**\n   * Get an array of virtual <li>s that list the search results for the given\n   * query.\n   *\n   * @param {String} query\n   * @return {Object}\n   */\n  view() {}\n}\n","import compat from '../common/compat';\n\nimport PostControls from './utils/PostControls';\nimport KeyboardNavigatable from './utils/KeyboardNavigatable';\nimport slidable from './utils/slidable';\nimport History from './utils/History';\nimport DiscussionControls from './utils/DiscussionControls';\nimport alertEmailConfirmation from './utils/alertEmailConfirmation';\nimport UserControls from './utils/UserControls';\nimport Pane from './utils/Pane';\nimport ComposerState from './states/ComposerState';\nimport DiscussionListState from './states/DiscussionListState';\nimport GlobalSearchState from './states/GlobalSearchState';\nimport NotificationListState from './states/NotificationListState';\nimport PostStreamState from './states/PostStreamState';\nimport SearchState from './states/SearchState';\nimport AffixedSidebar from './components/AffixedSidebar';\n//import DiscussionPage from './components/DiscussionPage';\nimport DiscussionListPane from './components/DiscussionListPane';\n//import LogInModal from './components/LogInModal';\n//import ComposerBody from './components/ComposerBody';\n//import ForgotPasswordModal from './components/ForgotPasswordModal';\n//import Notification from './components/Notification';\nimport LogInButton from './components/LogInButton';\n//import DiscussionsUserPage from './components/DiscussionsUserPage';\n//import Composer from './components/Composer';\nimport SessionDropdown from './components/SessionDropdown';\nimport HeaderPrimary from './components/HeaderPrimary';\nimport PostEdited from './components/PostEdited';\n//import PostStream from './components/PostStream';\nimport ChangePasswordModal from './components/ChangePasswordModal';\n//import IndexPage from './components/IndexPage';\n//import DiscussionRenamedNotification from './components/DiscussionRenamedNotification';\nimport DiscussionsSearchSource from './components/DiscussionsSearchSource';\nimport HeaderSecondary from './components/HeaderSecondary';\nimport ComposerButton from './components/ComposerButton';\nimport DiscussionList from './components/DiscussionList';\n//import ReplyPlaceholder from './components/ReplyPlaceholder';\nimport AvatarEditor from './components/AvatarEditor';\nimport Post from './components/Post';\n//import SettingsPage from './components/SettingsPage';\nimport TerminalPost from './components/TerminalPost';\nimport ChangeEmailModal from './components/ChangeEmailModal';\nimport NotificationsDropdown from './components/NotificationsDropdown';\n//import UserPage from './components/UserPage';\nimport PostUser from './components/PostUser';\nimport UserCard from './components/UserCard';\nimport UsersSearchSource from './components/UsersSearchSource';\n//import NotificationGrid from './components/NotificationGrid';\nimport PostPreview from './components/PostPreview';\nimport EventPost from './components/EventPost';\nimport DiscussionHero from './components/DiscussionHero';\nimport PostMeta from './components/PostMeta';\n//import EditUserModal from './components/EditUserModal';\nimport SearchSource from './components/SearchSource';\n//import DiscussionRenamedPost from './components/DiscussionRenamedPost';\n//import DiscussionComposer from './components/DiscussionComposer';\nimport LogInButtons from './components/LogInButtons';\n//import NotificationList from './components/NotificationList';\nimport WelcomeHero from './components/WelcomeHero';\n//import SignUpModal from './components/SignUpModal';\n//import CommentPost from './components/CommentPost';\nimport ComposerPostPreview from './components/ComposerPostPreview';\n//import ReplyComposer from './components/ReplyComposer';\n//import NotificationsPage from './components/NotificationsPage';\n//import PostStreamScrubber from './components/PostStreamScrubber';\n//import EditPostComposer from './components/EditPostComposer';\nimport RenameDiscussionModal from './components/RenameDiscussionModal';\nimport Search from './components/Search';\n//import DiscussionListItem from './components/DiscussionListItem';\nimport LoadingPost from './components/LoadingPost';\n//import PostsUserPage from './components/PostsUserPage';\nimport DiscussionPageResolver from './resolvers/DiscussionPageResolver';\nimport BasicEditorDriver from '../common/utils/BasicEditorDriver';\nimport routes from './routes';\nimport ForumApplication from './ForumApplication';\n\nexport default Object.assign(compat, {\n  'utils/PostControls': PostControls,\n  'utils/KeyboardNavigatable': KeyboardNavigatable,\n  'utils/slidable': slidable,\n  'utils/History': History,\n  'utils/DiscussionControls': DiscussionControls,\n  'utils/alertEmailConfirmation': alertEmailConfirmation,\n  'utils/UserControls': UserControls,\n  'utils/Pane': Pane,\n  'utils/BasicEditorDriver': BasicEditorDriver,\n  'states/ComposerState': ComposerState,\n  'states/DiscussionListState': DiscussionListState,\n  'states/GlobalSearchState': GlobalSearchState,\n  'states/NotificationListState': NotificationListState,\n  'states/PostStreamState': PostStreamState,\n  'states/SearchState': SearchState,\n  'components/AffixedSidebar': AffixedSidebar,\n  //'components/DiscussionPage': DiscussionPage,\n  'components/DiscussionListPane': DiscussionListPane,\n  //'components/LogInModal': LogInModal,\n  //'components/ComposerBody': ComposerBody,\n  //'components/ForgotPasswordModal': ForgotPasswordModal,\n  //'components/Notification': Notification,\n  'components/LogInButton': LogInButton,\n  //'components/DiscussionsUserPage': DiscussionsUserPage,\n  //'components/Composer': Composer,\n  'components/SessionDropdown': SessionDropdown,\n  'components/HeaderPrimary': HeaderPrimary,\n  'components/PostEdited': PostEdited,\n  //'components/PostStream': PostStream,\n  'components/ChangePasswordModal': ChangePasswordModal,\n  //'components/IndexPage': IndexPage,\n  //'components/DiscussionRenamedNotification': DiscussionRenamedNotification,\n  'components/DiscussionsSearchSource': DiscussionsSearchSource,\n  'components/HeaderSecondary': HeaderSecondary,\n  'components/ComposerButton': ComposerButton,\n  'components/DiscussionList': DiscussionList,\n  //'components/ReplyPlaceholder': ReplyPlaceholder,\n  'components/AvatarEditor': AvatarEditor,\n  'components/Post': Post,\n  //'components/SettingsPage': SettingsPage,\n  'components/TerminalPost': TerminalPost,\n  'components/ChangeEmailModal': ChangeEmailModal,\n  'components/NotificationsDropdown': NotificationsDropdown,\n  //'components/UserPage': UserPage,\n  'components/PostUser': PostUser,\n  'components/UserCard': UserCard,\n  'components/UsersSearchSource': UsersSearchSource,\n  //'components/NotificationGrid': NotificationGrid,\n  'components/PostPreview': PostPreview,\n  'components/EventPost': EventPost,\n  'components/DiscussionHero': DiscussionHero,\n  'components/PostMeta': PostMeta,\n  //'components/EditUserModal': EditUserModal,\n  'components/SearchSource': SearchSource,\n  //'components/DiscussionRenamedPost': DiscussionRenamedPost,\n  //'components/DiscussionComposer': DiscussionComposer,\n  'components/LogInButtons': LogInButtons,\n  //'components/NotificationList': NotificationList,\n  'components/WelcomeHero': WelcomeHero,\n  //'components/SignUpModal': SignUpModal,\n  //'components/CommentPost': CommentPost,\n  'components/ComposerPostPreview': ComposerPostPreview,\n  //'components/ReplyComposer': ReplyComposer,\n  //'components/NotificationsPage': NotificationsPage,\n  //'components/PostStreamScrubber': PostStreamScrubber,\n  //'components/EditPostComposer': EditPostComposer,\n  'components/RenameDiscussionModal': RenameDiscussionModal,\n  'components/Search': Search,\n  //'components/DiscussionListItem': DiscussionListItem,\n  'components/LoadingPost': LoadingPost,\n  //'components/PostsUserPage': PostsUserPage,\n  'resolvers/DiscussionPageResolver': DiscussionPageResolver,\n  routes: routes,\n  ForumApplication: ForumApplication,\n});\n","// Expose punycode and ColorThief to the window browser object\nimport 'expose-loader?exposes=punycode!punycode';\nimport 'expose-loader?exposes=ColorThief!color-thief-browser';\n\nimport app from './app';\n\nexport { app };\n\n// Export public API\n// export { default as Extend } from './Extend';\n// export { IndexPage, DicsussionList } from './components';\n\n// Export compat API\nimport compatObj from './compat';\nimport proxifyCompat from '../common/utils/proxifyCompat';\n\ncompatObj.app = app;\n\nexport const compat = proxifyCompat(compatObj, 'forum');\n","/**\n * Truncate a string to the given length, appending ellipses if necessary.\n */\nexport function truncate(string: string, length: number, start: number = 0): string {\n  return (start > 0 ? '...' : '') + string.substring(start, start + length) + (string.length > start + length ? '...' : '');\n}\n\n/**\n * Create a slug out of the given string. Non-alphanumeric characters are\n * converted to hyphens.\n *\n * NOTE: This method does not use the comparably sophisticated transliteration\n * mechanism that is employed in the backend. Therefore, it should only be used\n * to *suggest* slugs that can be overridden by the user.\n */\nexport function slug(string: string): string {\n  return string\n    .toLowerCase()\n    .replace(/[^a-z0-9]/gi, '-')\n    .replace(/-+/g, '-')\n    .replace(/-$|^-/g, '');\n}\n\n/**\n * Strip HTML tags and quotes out of the given string, replacing them with\n * meaningful punctuation.\n */\nexport function getPlainContent(string: string): string {\n  const html = string.replace(/(<\\/p>|<br>)/g, '$1 &nbsp;').replace(/<img\\b[^>]*>/gi, ' ');\n\n  const dom = $('<div/>').html(html);\n\n  dom.find(getPlainContent.removeSelectors.join(',')).remove();\n\n  return dom.text().replace(/\\s+/g, ' ').trim();\n}\n\n/**\n * An array of DOM selectors to remove when getting plain content.\n *\n * @type {Array}\n */\ngetPlainContent.removeSelectors = ['blockquote', 'script'];\n\n/**\n * Make a string's first character uppercase.\n */\nexport function ucfirst(string: string): string {\n  return string.substr(0, 1).toUpperCase() + string.substr(1);\n}\n","import Component from '../../common/Component';\n\n/**\n * The `AffixedSidebar` component uses Bootstrap's \"affix\" plugin to keep a\n * sidebar navigation at the top of the viewport when scrolling.\n *\n * ### Children\n *\n * The component must wrap an element that itself wraps an <ul> element, which\n * will be \"affixed\".\n *\n * @see https://getbootstrap.com/docs/3.4/javascript/#affix\n */\nexport default class AffixedSidebar extends Component {\n  view(vnode) {\n    return vnode.children[0];\n  }\n\n  oncreate(vnode) {\n    super.oncreate(vnode);\n\n    // Register the affix plugin to execute on every window resize (and trigger)\n    this.boundOnresize = this.onresize.bind(this);\n    $(window).on('resize', this.boundOnresize).resize();\n  }\n\n  onremove() {\n    $(window).off('resize', this.boundOnresize);\n  }\n\n  onresize() {\n    const $sidebar = this.$();\n    const $header = $('#header');\n    const $footer = $('#footer');\n    const $affixElement = $sidebar.find('> ul');\n\n    $(window).off('.affix');\n    $affixElement.removeClass('affix affix-top affix-bottom').removeData('bs.affix');\n\n    // Don't affix the sidebar if it is taller than the viewport (otherwise\n    // there would be no way to scroll through its content).\n    if ($sidebar.outerHeight(true) > $(window).height() - $header.outerHeight(true)) return;\n\n    $affixElement.affix({\n      offset: {\n        top: () => $sidebar.offset().top - $header.outerHeight(true) - parseInt($sidebar.css('margin-top'), 10),\n        bottom: () => (this.bottom = $footer.outerHeight(true)),\n      },\n    });\n  }\n}\n","import Component from '../../common/Component';\nimport avatar from '../../common/helpers/avatar';\nimport icon from '../../common/helpers/icon';\nimport listItems from '../../common/helpers/listItems';\nimport ItemList from '../../common/utils/ItemList';\nimport classList from '../../common/utils/classList';\nimport Button from '../../common/components/Button';\nimport LoadingIndicator from '../../common/components/LoadingIndicator';\n\n/**\n * The `AvatarEditor` component displays a user's avatar along with a dropdown\n * menu which allows the user to upload/remove the avatar.\n *\n * ### Attrs\n *\n * - `className`\n * - `user`\n */\nexport default class AvatarEditor extends Component {\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    /**\n     * Whether or not an avatar upload is in progress.\n     *\n     * @type {Boolean}\n     */\n    this.loading = false;\n\n    /**\n     * Whether or not an image has been dragged over the dropzone.\n     *\n     * @type {Boolean}\n     */\n    this.isDraggedOver = false;\n  }\n\n  view() {\n    const user = this.attrs.user;\n\n    return (\n      <div className={classList(['AvatarEditor', 'Dropdown', this.attrs.className, this.loading && 'loading', this.isDraggedOver && 'dragover'])}>\n        {avatar(user)}\n        <a\n          className={user.avatarUrl() ? 'Dropdown-toggle' : 'Dropdown-toggle AvatarEditor--noAvatar'}\n          title={app.translator.trans('core.forum.user.avatar_upload_tooltip')}\n          data-toggle=\"dropdown\"\n          onclick={this.quickUpload.bind(this)}\n          ondragover={this.enableDragover.bind(this)}\n          ondragenter={this.enableDragover.bind(this)}\n          ondragleave={this.disableDragover.bind(this)}\n          ondragend={this.disableDragover.bind(this)}\n          ondrop={this.dropUpload.bind(this)}\n        >\n          {this.loading ? <LoadingIndicator /> : user.avatarUrl() ? icon('fas fa-pencil-alt') : icon('fas fa-plus-circle')}\n        </a>\n        <ul className=\"Dropdown-menu Menu\">{listItems(this.controlItems().toArray())}</ul>\n      </div>\n    );\n  }\n\n  /**\n   * Get the items in the edit avatar dropdown menu.\n   *\n   * @return {ItemList}\n   */\n  controlItems() {\n    const items = new ItemList();\n\n    items.add(\n      'upload',\n      <Button icon=\"fas fa-upload\" onclick={this.openPicker.bind(this)}>\n        {app.translator.trans('core.forum.user.avatar_upload_button')}\n      </Button>\n    );\n\n    items.add(\n      'remove',\n      <Button icon=\"fas fa-times\" onclick={this.remove.bind(this)}>\n        {app.translator.trans('core.forum.user.avatar_remove_button')}\n      </Button>\n    );\n\n    return items;\n  }\n\n  /**\n   * Enable dragover style\n   *\n   * @param {Event} e\n   */\n  enableDragover(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.isDraggedOver = true;\n  }\n\n  /**\n   * Disable dragover style\n   *\n   * @param {Event} e\n   */\n  disableDragover(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.isDraggedOver = false;\n  }\n\n  /**\n   * Upload avatar when file is dropped into dropzone.\n   *\n   * @param {Event} e\n   */\n  dropUpload(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.isDraggedOver = false;\n    this.upload(e.dataTransfer.files[0]);\n  }\n\n  /**\n   * If the user doesn't have an avatar, there's no point in showing the\n   * controls dropdown, because only one option would be viable: uploading.\n   * Thus, when the avatar editor's dropdown toggle button is clicked, we prompt\n   * the user to upload an avatar immediately.\n   *\n   * @param {Event} e\n   */\n  quickUpload(e) {\n    if (!this.attrs.user.avatarUrl()) {\n      e.preventDefault();\n      e.stopPropagation();\n      this.openPicker();\n    }\n  }\n\n  /**\n   * Upload avatar using file picker\n   */\n  openPicker() {\n    if (this.loading) return;\n\n    // Create a hidden HTML input element and click on it so the user can select\n    // an avatar file. Once they have, we will upload it via the API.\n    const $input = $('<input type=\"file\">');\n\n    $input\n      .appendTo('body')\n      .hide()\n      .click()\n      .on('input', (e) => {\n        this.upload($(e.target)[0].files[0]);\n      });\n  }\n\n  /**\n   * Upload avatar\n   *\n   * @param {File} file\n   */\n  upload(file) {\n    if (this.loading) return;\n\n    const user = this.attrs.user;\n    const data = new FormData();\n    data.append('avatar', file);\n\n    this.loading = true;\n    m.redraw();\n\n    app\n      .request({\n        method: 'POST',\n        url: `${app.forum.attribute('apiUrl')}/users/${user.id()}/avatar`,\n        serialize: (raw) => raw,\n        body: data,\n      })\n      .then(this.success.bind(this), this.failure.bind(this));\n  }\n\n  /**\n   * Remove the user's avatar.\n   */\n  remove() {\n    const user = this.attrs.user;\n\n    this.loading = true;\n    m.redraw();\n\n    app\n      .request({\n        method: 'DELETE',\n        url: `${app.forum.attribute('apiUrl')}/users/${user.id()}/avatar`,\n      })\n      .then(this.success.bind(this), this.failure.bind(this));\n  }\n\n  /**\n   * After a successful upload/removal, push the updated user data into the\n   * store, and force a recomputation of the user's avatar color.\n   *\n   * @param {Object} response\n   * @protected\n   */\n  success(response) {\n    app.store.pushPayload(response);\n    delete this.attrs.user.avatarColor;\n\n    this.loading = false;\n    m.redraw();\n  }\n\n  /**\n   * If avatar upload/removal fails, stop loading.\n   *\n   * @param {Object} response\n   * @protected\n   */\n  failure(response) {\n    this.loading = false;\n    m.redraw();\n  }\n}\n","import Modal from '../../common/components/Modal';\nimport Button from '../../common/components/Button';\nimport Stream from '../../common/utils/Stream';\n\n/**\n * The `ChangeEmailModal` component shows a modal dialog which allows the user\n * to change their email address.\n */\nexport default class ChangeEmailModal extends Modal {\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    /**\n     * Whether or not the email has been changed successfully.\n     *\n     * @type {Boolean}\n     */\n    this.success = false;\n\n    /**\n     * The value of the email input.\n     *\n     * @type {function}\n     */\n    this.email = Stream(app.session.user.email());\n\n    /**\n     * The value of the password input.\n     *\n     * @type {function}\n     */\n    this.password = Stream('');\n  }\n\n  className() {\n    return 'ChangeEmailModal Modal--small';\n  }\n\n  title() {\n    return app.translator.trans('core.forum.change_email.title');\n  }\n\n  content() {\n    if (this.success) {\n      return (\n        <div className=\"Modal-body\">\n          <div className=\"Form Form--centered\">\n            <p className=\"helpText\">\n              {app.translator.trans('core.forum.change_email.confirmation_message', { email: <strong>{this.email()}</strong> })}\n            </p>\n            <div className=\"Form-group\">\n              <Button className=\"Button Button--primary Button--block\" onclick={this.hide.bind(this)}>\n                {app.translator.trans('core.forum.change_email.dismiss_button')}\n              </Button>\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"Modal-body\">\n        <div className=\"Form Form--centered\">\n          <div className=\"Form-group\">\n            <input\n              type=\"email\"\n              name=\"email\"\n              className=\"FormControl\"\n              placeholder={app.session.user.email()}\n              bidi={this.email}\n              disabled={this.loading}\n            />\n          </div>\n          <div className=\"Form-group\">\n            <input\n              type=\"password\"\n              name=\"password\"\n              className=\"FormControl\"\n              placeholder={app.translator.trans('core.forum.change_email.confirm_password_placeholder')}\n              bidi={this.password}\n              disabled={this.loading}\n            />\n          </div>\n          <div className=\"Form-group\">\n            {Button.component(\n              {\n                className: 'Button Button--primary Button--block',\n                type: 'submit',\n                loading: this.loading,\n              },\n              app.translator.trans('core.forum.change_email.submit_button')\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  onsubmit(e) {\n    e.preventDefault();\n\n    // If the user hasn't actually entered a different email address, we don't\n    // need to do anything. Woot!\n    if (this.email() === app.session.user.email()) {\n      this.hide();\n      return;\n    }\n\n    this.loading = true;\n    this.alertAttrs = null;\n\n    app.session.user\n      .save(\n        { email: this.email() },\n        {\n          errorHandler: this.onerror.bind(this),\n          meta: { password: this.password() },\n        }\n      )\n      .then(() => {\n        this.success = true;\n      })\n      .catch(() => {})\n      .then(this.loaded.bind(this));\n  }\n\n  onerror(error) {\n    if (error.status === 401) {\n      error.alert.content = app.translator.trans('core.forum.change_email.incorrect_password_message');\n    }\n\n    super.onerror(error);\n  }\n}\n","import Modal from '../../common/components/Modal';\nimport Button from '../../common/components/Button';\n\n/**\n * The `ChangePasswordModal` component shows a modal dialog which allows the\n * user to send themself a password reset email.\n */\nexport default class ChangePasswordModal extends Modal {\n  className() {\n    return 'ChangePasswordModal Modal--small';\n  }\n\n  title() {\n    return app.translator.trans('core.forum.change_password.title');\n  }\n\n  content() {\n    return (\n      <div className=\"Modal-body\">\n        <div className=\"Form Form--centered\">\n          <p className=\"helpText\">{app.translator.trans('core.forum.change_password.text')}</p>\n          <div className=\"Form-group\">\n            {Button.component(\n              {\n                className: 'Button Button--primary Button--block',\n                type: 'submit',\n                loading: this.loading,\n              },\n              app.translator.trans('core.forum.change_password.send_button')\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  onsubmit(e) {\n    e.preventDefault();\n\n    this.loading = true;\n\n    app\n      .request({\n        method: 'POST',\n        url: app.forum.attribute('apiUrl') + '/forgot',\n        body: { email: app.session.user.email() },\n      })\n      .then(this.hide.bind(this), this.loaded.bind(this));\n  }\n}\n","import Component from '../Component';\n\n/**\n * The `ConfirmDocumentUnload` component can be used to register a global\n * event handler that prevents closing the browser window/tab based on the\n * return value of a given callback prop.\n *\n * ### Attrs\n *\n * - `when` - a callback returning true when the browser should prompt for\n *            confirmation before closing the window/tab\n *\n * ### Children\n *\n * NOTE: Only the first child will be rendered. (Use this component to wrap\n * another component / DOM element.)\n *\n */\nexport default class ConfirmDocumentUnload extends Component {\n  handler() {\n    return this.attrs.when() || undefined;\n  }\n\n  oncreate(vnode) {\n    super.oncreate(vnode);\n\n    this.boundHandler = this.handler.bind(this);\n    $(window).on('beforeunload', this.boundHandler);\n  }\n\n  onremove() {\n    $(window).off('beforeunload', this.boundHandler);\n  }\n\n  view(vnode) {\n    // To avoid having to render another wrapping <div> here, we assume that\n    // this component is only wrapped around a single element / component.\n    return vnode.children[0];\n  }\n}\n","import Component from '../../common/Component';\nimport LoadingIndicator from '../../common/components/LoadingIndicator';\nimport ConfirmDocumentUnload from '../../common/components/ConfirmDocumentUnload';\nimport avatar from '../../common/helpers/avatar';\nimport listItems from '../../common/helpers/listItems';\nimport ItemList from '../../common/utils/ItemList';\n\n/**\n * The `ComposerBody` component handles the body, or the content, of the\n * composer. Subclasses should implement the `onsubmit` method and override\n * `headerTimes`.\n *\n * ### Attrs\n *\n * - `composer`\n * - `originalContent`\n * - `submitLabel`\n * - `placeholder`\n * - `user`\n * - `confirmExit`\n * - `disabled`\n *\n * @abstract\n */\nexport default class ComposerBody extends Component {\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    this.composer = this.attrs.composer;\n\n    /**\n     * Whether or not the component is loading.\n     *\n     * @type {Boolean}\n     */\n    this.loading = true;\n\n    import(/* webpackChunkName: \"common/components/TextEditor\" */ '../../common/components/TextEditor').then((TextEditor) => {\n      this.TextEditor = TextEditor.default;\n      this.loading = false;\n      m.redraw();\n    });\n\n    // Let the composer state know to ask for confirmation under certain\n    // circumstances, if the body supports / requires it and has a corresponding\n    // confirmation question to ask.\n    if (this.attrs.confirmExit) {\n      this.composer.preventClosingWhen(() => this.hasChanges(), this.attrs.confirmExit);\n    }\n\n    this.composer.fields.content(this.attrs.originalContent || '');\n  }\n\n  view() {\n    const TextEditor = this.TextEditor;\n\n    return (\n      <ConfirmDocumentUnload when={this.hasChanges.bind(this)}>\n        <div className={'ComposerBody ' + (this.attrs.className || '')}>\n          {avatar(this.attrs.user, { className: 'ComposerBody-avatar' })}\n          <div className=\"ComposerBody-content\">\n            <ul className=\"ComposerBody-header\">{listItems(this.headerItems().toArray())}</ul>\n            <div className=\"ComposerBody-editor\">\n              {TextEditor\n                ? TextEditor.component({\n                    submitLabel: this.attrs.submitLabel,\n                    placeholder: this.attrs.placeholder,\n                    disabled: this.loading || this.attrs.disabled,\n                    composer: this.composer,\n                    preview: this.jumpToPreview && this.jumpToPreview.bind(this),\n                    onchange: this.composer.fields.content,\n                    onsubmit: this.onsubmit.bind(this),\n                    value: this.composer.fields.content(),\n                  })\n                : ''}\n            </div>\n          </div>\n          {LoadingIndicator.component({ className: 'ComposerBody-loading' + (this.loading ? ' active' : '') })}\n        </div>\n      </ConfirmDocumentUnload>\n    );\n  }\n\n  /**\n   * Check if there is any unsaved data.\n   *\n   * @return {String}\n   */\n  hasChanges() {\n    const content = this.composer.fields.content();\n\n    return content && content !== this.attrs.originalContent;\n  }\n\n  /**\n   * Build an item list for the composer's header.\n   *\n   * @return {ItemList}\n   */\n  headerItems() {\n    return new ItemList();\n  }\n\n  /**\n   * Handle the submit event of the text editor.\n   *\n   * @abstract\n   */\n  onsubmit() {}\n\n  /**\n   * Stop loading.\n   */\n  loaded() {\n    this.loading = false;\n    m.redraw();\n  }\n}\n","/*global s9e*/\n\nimport Component from '../../common/Component';\n\n/**\n * The `ComposerPostPreview` component renders Markdown as HTML using the\n * TextFormatter library, polling a data source for changes every 50ms. This is\n * done to prevent expensive redraws on e.g. every single keystroke, while\n * still retaining the perception of live updates for the user.\n *\n * ### Attrs\n *\n * - `composer` The state of the composer controlling this preview.\n * - `className` A CSS class for the element surrounding the preview.\n * - `surround` A callback that can execute code before and after re-render, e.g. for scroll anchoring.\n */\nexport default class ComposerPostPreview extends Component {\n  static initAttrs(attrs) {\n    attrs.className = attrs.className || '';\n    attrs.surround = attrs.surround || ((preview) => preview());\n  }\n\n  view() {\n    return <div className={this.attrs.className} />;\n  }\n\n  oncreate(vnode) {\n    super.oncreate(vnode);\n\n    // Every 50ms, if the composer content has changed, then update the post's\n    // body with a preview.\n    let preview;\n    const updatePreview = () => {\n      // Since we're polling, the composer may have been closed in the meantime,\n      // so we bail in that case.\n      if (!this.attrs.composer.isVisible()) return;\n\n      const content = this.attrs.composer.fields.content();\n\n      if (preview === content) return;\n\n      preview = content;\n\n      this.attrs.surround(() => s9e.TextFormatter.preview(preview || '', vnode.dom));\n    };\n    updatePreview();\n\n    this.updateInterval = setInterval(updatePreview, 50);\n  }\n\n  onremove() {\n    clearInterval(this.updateInterval);\n  }\n}\n","import Component from '../../common/Component';\nimport ItemList from '../../common/utils/ItemList';\nimport listItems from '../../common/helpers/listItems';\n\n/**\n * The `DiscussionHero` component displays the hero on a discussion page.\n *\n * ### attrs\n *\n * - `discussion`\n */\nexport default class DiscussionHero extends Component {\n  view() {\n    return (\n      <header className=\"Hero DiscussionHero\">\n        <div className=\"container\">\n          <ul className=\"DiscussionHero-items\">{listItems(this.items().toArray())}</ul>\n        </div>\n      </header>\n    );\n  }\n\n  /**\n   * Build an item list for the contents of the discussion hero.\n   *\n   * @return {ItemList}\n   */\n  items() {\n    const items = new ItemList();\n    const discussion = this.attrs.discussion;\n    const badges = discussion.badges().toArray();\n\n    if (badges.length) {\n      items.add('badges', <ul className=\"DiscussionHero-badges badges\">{listItems(badges)}</ul>, 10);\n    }\n\n    items.add('title', <h2 className=\"DiscussionHero-title\">{discussion.title()}</h2>);\n\n    return items;\n  }\n}\n","import Symbol from './_Symbol.js';\nimport arrayMap from './_arrayMap.js';\nimport isArray from './isArray.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nexport default baseToString;\n","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nexport default arrayMap;\n","import toString from './toString.js';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n    reHasRegExpChar = RegExp(reRegExpChar.source);\n\n/**\n * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to escape.\n * @returns {string} Returns the escaped string.\n * @example\n *\n * _.escapeRegExp('[lodash](https://lodash.com/)');\n * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n */\nfunction escapeRegExp(string) {\n  string = toString(string);\n  return (string && reHasRegExpChar.test(string))\n    ? string.replace(reRegExpChar, '\\\\$&')\n    : string;\n}\n\nexport default escapeRegExp;\n","import baseToString from './_baseToString.js';\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nexport default toString;\n","import Component from '../../common/Component';\nimport Link from '../../common/components/Link';\nimport avatar from '../../common/helpers/avatar';\nimport listItems from '../../common/helpers/listItems';\nimport highlight from '../../common/helpers/highlight';\nimport icon from '../../common/helpers/icon';\nimport humanTime from '../../common/utils/humanTime';\nimport ItemList from '../../common/utils/ItemList';\nimport abbreviateNumber from '../../common/utils/abbreviateNumber';\nimport Dropdown from '../../common/components/Dropdown';\nimport TerminalPost from './TerminalPost';\nimport SubtreeRetainer from '../../common/utils/SubtreeRetainer';\nimport DiscussionControls from '../utils/DiscussionControls';\nimport slidable from '../utils/slidable';\nimport extractText from '../../common/utils/extractText';\nimport classList from '../../common/utils/classList';\nimport DiscussionPage from './DiscussionPage';\n\nimport { escapeRegExp } from 'lodash-es';\n/**\n * The `DiscussionListItem` component shows a single discussion in the\n * discussion list.\n *\n * ### Attrs\n *\n * - `discussion`\n * - `params`\n */\nexport default class DiscussionListItem extends Component {\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    /**\n     * Set up a subtree retainer so that the discussion will not be redrawn\n     * unless new data comes in.\n     *\n     * @type {SubtreeRetainer}\n     */\n    this.subtree = new SubtreeRetainer(\n      () => this.attrs.discussion.freshness,\n      () => {\n        const time = app.session.user && app.session.user.markedAllAsReadAt();\n        return time && time.getTime();\n      },\n      () => this.active()\n    );\n  }\n\n  elementAttrs() {\n    return {\n      className: classList([\n        'DiscussionListItem',\n        this.active() ? 'active' : '',\n        this.attrs.discussion.isHidden() ? 'DiscussionListItem--hidden' : '',\n        'ontouchstart' in window ? 'Slidable' : '',\n      ]),\n    };\n  }\n\n  view() {\n    const discussion = this.attrs.discussion;\n    const user = discussion.user();\n    const isUnread = discussion.isUnread();\n    const isRead = discussion.isRead();\n    const showUnread = !this.showRepliesCount() && isUnread;\n    let jumpTo = 0;\n    const controls = DiscussionControls.controls(discussion, this).toArray();\n    const attrs = this.elementAttrs();\n\n    if (this.attrs.params.q) {\n      const post = discussion.mostRelevantPost();\n      if (post) {\n        jumpTo = post.number();\n      }\n\n      const phrase = escapeRegExp(this.attrs.params.q);\n      this.highlightRegExp = new RegExp(phrase + '|' + phrase.trim().replace(/\\s+/g, '|'), 'gi');\n    } else {\n      jumpTo = Math.min(discussion.lastPostNumber(), (discussion.lastReadPostNumber() || 0) + 1);\n    }\n\n    return (\n      <div {...attrs}>\n        {controls.length\n          ? Dropdown.component(\n              {\n                icon: 'fas fa-ellipsis-v',\n                className: 'DiscussionListItem-controls',\n                buttonClassName: 'Button Button--icon Button--flat Slidable-underneath Slidable-underneath--right',\n                accessibleToggleLabel: app.translator.trans('core.forum.discussion_controls.toggle_dropdown_accessible_label'),\n              },\n              controls\n            )\n          : ''}\n\n        <span\n          className={'Slidable-underneath Slidable-underneath--left Slidable-underneath--elastic' + (isUnread ? '' : ' disabled')}\n          onclick={this.markAsRead.bind(this)}\n        >\n          {icon('fas fa-check')}\n        </span>\n\n        <div className={'DiscussionListItem-content Slidable-content' + (isUnread ? ' unread' : '') + (isRead ? ' read' : '')}>\n          <Link\n            href={user ? app.route.user(user) : '#'}\n            className=\"DiscussionListItem-author\"\n            title={extractText(\n              app.translator.trans('core.forum.discussion_list.started_text', { user: user, ago: humanTime(discussion.createdAt()) })\n            )}\n            oncreate={function (vnode) {\n              $(vnode.dom).tooltip({ placement: 'right' });\n            }}\n          >\n            {avatar(user, { title: '' })}\n          </Link>\n\n          <ul className=\"DiscussionListItem-badges badges\">{listItems(discussion.badges().toArray())}</ul>\n\n          <Link href={app.route.discussion(discussion, jumpTo)} className=\"DiscussionListItem-main\">\n            <h3 className=\"DiscussionListItem-title\">{highlight(discussion.title(), this.highlightRegExp)}</h3>\n            <ul className=\"DiscussionListItem-info\">{listItems(this.infoItems().toArray())}</ul>\n          </Link>\n\n          <span\n            tabindex=\"0\"\n            role=\"button\"\n            className=\"DiscussionListItem-count\"\n            onclick={this.markAsRead.bind(this)}\n            title={showUnread ? app.translator.trans('core.forum.discussion_list.mark_as_read_tooltip') : ''}\n          >\n            {abbreviateNumber(discussion[showUnread ? 'unreadCount' : 'replyCount']())}\n          </span>\n        </div>\n      </div>\n    );\n  }\n\n  oncreate(vnode) {\n    super.oncreate(vnode);\n\n    // If we're on a touch device, set up the discussion row to be slidable.\n    // This allows the user to drag the row to either side of the screen to\n    // reveal controls.\n    if ('ontouchstart' in window) {\n      const slidableInstance = slidable(this.$());\n\n      this.$('.DiscussionListItem-controls').on('hidden.bs.dropdown', () => slidableInstance.reset());\n    }\n  }\n\n  onbeforeupdate(vnode, old) {\n    super.onbeforeupdate(vnode, old);\n\n    return this.subtree.needsRebuild();\n  }\n\n  /**\n   * Determine whether or not the discussion is currently being viewed.\n   *\n   * @return {Boolean}\n   */\n  active() {\n    return app.current.matches(DiscussionPage, { discussion: this.attrs.discussion });\n  }\n\n  /**\n   * Determine whether or not information about who started the discussion\n   * should be displayed instead of information about the most recent reply to\n   * the discussion.\n   *\n   * @return {Boolean}\n   */\n  showFirstPost() {\n    return ['newest', 'oldest'].indexOf(this.attrs.params.sort) !== -1;\n  }\n\n  /**\n   * Determine whether or not the number of replies should be shown instead of\n   * the number of unread posts.\n   *\n   * @return {Boolean}\n   */\n  showRepliesCount() {\n    return this.attrs.params.sort === 'replies';\n  }\n\n  /**\n   * Mark the discussion as read.\n   */\n  markAsRead() {\n    const discussion = this.attrs.discussion;\n\n    if (discussion.isUnread()) {\n      discussion.save({ lastReadPostNumber: discussion.lastPostNumber() });\n      m.redraw();\n    }\n  }\n\n  /**\n   * Build an item list of info for a discussion listing. By default this is\n   * just the first/last post indicator.\n   *\n   * @return {ItemList}\n   */\n  infoItems() {\n    const items = new ItemList();\n\n    if (this.attrs.params.q) {\n      const post = this.attrs.discussion.mostRelevantPost() || this.attrs.discussion.firstPost();\n\n      if (post && post.contentType() === 'comment') {\n        const excerpt = highlight(post.contentPlain(), this.highlightRegExp, 175);\n        items.add('excerpt', excerpt, -100);\n      }\n    } else {\n      items.add(\n        'terminalPost',\n        TerminalPost.component({\n          discussion: this.attrs.discussion,\n          lastPost: !this.showFirstPost(),\n        })\n      );\n    }\n\n    return items;\n  }\n}\n","import Component from '../../common/Component';\nimport DiscussionListItem from './DiscussionListItem';\nimport Button from '../../common/components/Button';\nimport LoadingIndicator from '../../common/components/LoadingIndicator';\nimport Placeholder from '../../common/components/Placeholder';\n\n/**\n * The `DiscussionList` component displays a list of discussions.\n *\n * ### Attrs\n *\n * - `state` A DiscussionListState object that represents the discussion lists's state.\n */\nexport default class DiscussionList extends Component {\n  view() {\n    const state = this.attrs.state;\n\n    const params = state.getParams();\n    let loading;\n\n    if (state.isLoading()) {\n      loading = LoadingIndicator.component();\n    } else if (state.moreResults) {\n      loading = Button.component(\n        {\n          className: 'Button',\n          onclick: state.loadMore.bind(state),\n        },\n        app.translator.trans('core.forum.discussion_list.load_more_button')\n      );\n    }\n\n    if (state.empty()) {\n      const text = app.translator.trans('core.forum.discussion_list.empty_text');\n      return <div className=\"DiscussionList\">{Placeholder.component({ text })}</div>;\n    }\n\n    return (\n      <div className={'DiscussionList' + (state.isSearchResults() ? ' DiscussionList--searchResults' : '')}>\n        <ul className=\"DiscussionList-discussions\">\n          {state.discussions.map((discussion) => {\n            return (\n              <li key={discussion.id()} data-id={discussion.id()}>\n                {DiscussionListItem.component({ discussion, params })}\n              </li>\n            );\n          })}\n        </ul>\n        <div className=\"DiscussionList-loadMore\">{loading}</div>\n      </div>\n    );\n  }\n}\n","import DiscussionList from './DiscussionList';\nimport Component from '../../common/Component';\nimport DiscussionPage from './DiscussionPage';\n\nconst hotEdge = (e) => {\n  if (e.pageX < 10) app.pane.show();\n};\n\n/**\n * The `DiscussionListPane` component displays the list of previously viewed\n * discussions in a panel that can be displayed by moving the mouse to the left\n * edge of the screen, where it can also be pinned in place.\n *\n * ### Attrs\n *\n * - `state` A DiscussionListState object that represents the discussion lists's state.\n */\nexport default class DiscussionListPane extends Component {\n  view() {\n    if (!this.attrs.state.hasDiscussions()) {\n      return;\n    }\n\n    return <div className=\"DiscussionPage-list\">{this.enoughSpace() && <DiscussionList state={this.attrs.state} />}</div>;\n  }\n\n  oncreate(vnode) {\n    super.oncreate(vnode);\n\n    const $list = $(vnode.dom);\n\n    // When the mouse enters and leaves the discussions pane, we want to show\n    // and hide the pane respectively. We also create a 10px 'hot edge' on the\n    // left of the screen to activate the pane.\n    const pane = app.pane;\n    $list.hover(pane.show.bind(pane), pane.onmouseleave.bind(pane));\n\n    $(document).on('mousemove', hotEdge);\n\n    // When coming from another discussion, scroll to the previous postition\n    // to prevent the discussion list jumping around.\n    if (app.previous.matches(DiscussionPage)) {\n      const top = app.cache.discussionListPaneScrollTop || 0;\n      $list.scrollTop(top);\n    } else {\n      // If the discussion we are viewing is listed in the discussion list, then\n      // we will make sure it is visible in the viewport – if it is not we will\n      // scroll the list down to it.\n      const $discussion = $list.find('.DiscussionListItem.active');\n      if ($discussion.length) {\n        const listTop = $list.offset().top;\n        const listBottom = listTop + $list.outerHeight();\n        const discussionTop = $discussion.offset().top;\n        const discussionBottom = discussionTop + $discussion.outerHeight();\n\n        if (discussionTop < listTop || discussionBottom > listBottom) {\n          $list.scrollTop($list.scrollTop() - listTop + discussionTop);\n        }\n      }\n    }\n  }\n\n  onremove(vnode) {\n    app.cache.discussionListPaneScrollTop = $(vnode.dom).scrollTop();\n    $(document).off('mousemove', hotEdge);\n  }\n\n  /**\n   * Are we on a device that's larger than we consider \"mobile\"?\n   *\n   * @returns {boolean}\n   */\n  enoughSpace() {\n    return !$('.App-navigation').is(':visible');\n  }\n}\n","import Component from '../../common/Component';\nimport icon from '../../common/helpers/icon';\nimport formatNumber from '../../common/utils/formatNumber';\nimport ScrollListener from '../../common/utils/ScrollListener';\n\n/**\n * The `PostStreamScrubber` component displays a scrubber which can be used to\n * navigate/scrub through a post stream.\n *\n * ### Attrs\n *\n * - `stream`\n * - `className`\n */\nexport default class PostStreamScrubber extends Component {\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    this.stream = this.attrs.stream;\n    this.handlers = {};\n\n    this.scrollListener = new ScrollListener(this.updateScrubberValues.bind(this, { fromScroll: true, forceHeightChange: true }));\n  }\n\n  view() {\n    const count = this.stream.count();\n\n    // Index is left blank for performance reasons, it is filled in in updateScubberValues\n    const viewing = app.translator.transChoice('core.forum.post_scrubber.viewing_text', count, {\n      index: <span className=\"Scrubber-index\"></span>,\n      count: <span className=\"Scrubber-count\">{formatNumber(count)}</span>,\n    });\n\n    const unreadCount = this.stream.discussion.unreadCount();\n    const unreadPercent = count ? Math.min(count - this.stream.index, unreadCount) / count : 0;\n\n    function styleUnread(vnode) {\n      const $element = $(vnode.dom);\n      const newStyle = {\n        top: 100 - unreadPercent * 100 + '%',\n        height: unreadPercent * 100 + '%',\n      };\n\n      if (vnode.state.oldStyle) {\n        $element.stop(true).css(vnode.state.oldStyle).animate(newStyle);\n      } else {\n        $element.css(newStyle);\n      }\n\n      vnode.state.oldStyle = newStyle;\n    }\n    const classNames = ['PostStreamScrubber', 'Dropdown'];\n    if (this.attrs.className) classNames.push(this.attrs.className);\n\n    return (\n      <div className={classNames.join(' ')}>\n        <button className=\"Button Dropdown-toggle\" data-toggle=\"dropdown\">\n          {viewing} {icon('fas fa-sort')}\n        </button>\n\n        <div className=\"Dropdown-menu dropdown-menu\">\n          <div className=\"Scrubber\">\n            <a className=\"Scrubber-first\" onclick={this.goToFirst.bind(this)}>\n              {icon('fas fa-angle-double-up')} {app.translator.trans('core.forum.post_scrubber.original_post_link')}\n            </a>\n\n            <div className=\"Scrubber-scrollbar\">\n              <div className=\"Scrubber-before\" />\n              <div className=\"Scrubber-handle\">\n                <div className=\"Scrubber-bar\" />\n                <div className=\"Scrubber-info\">\n                  <strong>{viewing}</strong>\n                  <span className=\"Scrubber-description\"></span>\n                </div>\n              </div>\n              <div className=\"Scrubber-after\" />\n\n              <div className=\"Scrubber-unread\" oncreate={styleUnread} onupdate={styleUnread}>\n                {app.translator.trans('core.forum.post_scrubber.unread_text', { count: unreadCount })}\n              </div>\n            </div>\n\n            <a className=\"Scrubber-last\" onclick={this.goToLast.bind(this)}>\n              {icon('fas fa-angle-double-down')} {app.translator.trans('core.forum.post_scrubber.now_link')}\n            </a>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  onupdate() {\n    if (this.stream.forceUpdateScrubber) {\n      this.stream.forceUpdateScrubber = false;\n      this.stream.loadPromise.then(() => this.updateScrubberValues({ animate: true, forceHeightChange: true }));\n    }\n  }\n\n  oncreate(vnode) {\n    super.oncreate(vnode);\n\n    // Whenever the window is resized, adjust the height of the scrollbar\n    // so that it fills the height of the sidebar.\n    $(window)\n      .on('resize', (this.handlers.onresize = this.onresize.bind(this)))\n      .resize();\n\n    // When any part of the whole scrollbar is clicked, we want to jump to\n    // that position.\n    this.$('.Scrubber-scrollbar')\n      .bind('click', this.onclick.bind(this))\n\n      // Now we want to make the scrollbar handle draggable. Let's start by\n      // preventing default browser events from messing things up.\n      .bind('dragstart mousedown touchstart', (e) => e.preventDefault());\n\n    // When the mouse is pressed on the scrollbar handle, we capture some\n    // information about its current position. We will store this\n    // information in an object and pass it on to the document's\n    // mousemove/mouseup events later.\n    this.dragging = false;\n    this.mouseStart = 0;\n    this.indexStart = 0;\n\n    this.$('.Scrubber-handle')\n      .bind('mousedown touchstart', this.onmousedown.bind(this))\n\n      // Exempt the scrollbar handle from the 'jump to' click event.\n      .click((e) => e.stopPropagation());\n\n    // When the mouse moves and when it is released, we pass the\n    // information that we captured when the mouse was first pressed onto\n    // some event handlers. These handlers will move the scrollbar/stream-\n    // content as appropriate.\n    $(document)\n      .on('mousemove touchmove', (this.handlers.onmousemove = this.onmousemove.bind(this)))\n      .on('mouseup touchend', (this.handlers.onmouseup = this.onmouseup.bind(this)));\n\n    setTimeout(() => this.scrollListener.start());\n\n    this.stream.loadPromise.then(() => this.updateScrubberValues({ animate: false, forceHeightChange: true }));\n  }\n\n  onremove() {\n    this.scrollListener.stop();\n    $(window).off('resize', this.handlers.onresize);\n\n    $(document).off('mousemove touchmove', this.handlers.onmousemove).off('mouseup touchend', this.handlers.onmouseup);\n  }\n\n  /**\n   * Update the scrollbar's position to reflect the current values of the\n   * index/visible properties.\n   *\n   * @param {Boolean} animate\n   */\n  updateScrubberValues(options = {}) {\n    const index = this.stream.index;\n    const count = this.stream.count();\n    const visible = this.stream.visible || 1;\n    const percentPerPost = this.percentPerPost();\n\n    const $scrubber = this.$();\n    $scrubber.find('.Scrubber-index').text(formatNumber(this.stream.sanitizeIndex(Math.max(1, index))));\n    $scrubber.find('.Scrubber-description').text(this.stream.description);\n    $scrubber.toggleClass('disabled', this.stream.disabled());\n\n    const heights = {};\n    heights.before = Math.max(0, percentPerPost.index * Math.min(index - 1, count - visible));\n    heights.handle = Math.min(100 - heights.before, percentPerPost.visible * visible);\n    heights.after = 100 - heights.before - heights.handle;\n\n    // If the stream is paused, don't change height on scroll, as the viewport is being scrolled by the JS\n    // If a height change animation is already in progress, don't adjust height unless overriden\n    if ((options.fromScroll && this.stream.paused) || (this.adjustingHeight && !options.forceHeightChange)) return;\n\n    const func = options.animate ? 'animate' : 'css';\n    this.adjustingHeight = true;\n    const animationPromises = [];\n    for (const part in heights) {\n      const $part = $scrubber.find(`.Scrubber-${part}`);\n      animationPromises.push(\n        $part\n          .stop(true, true)\n          [func]({ height: heights[part] + '%' }, 'fast')\n          .promise()\n      );\n\n      // jQuery likes to put overflow:hidden, but because the scrollbar handle\n      // has a negative margin-left, we need to override.\n      if (func === 'animate') $part.css('overflow', 'visible');\n    }\n    Promise.all(animationPromises).then(() => (this.adjustingHeight = false));\n  }\n\n  /**\n   * Go to the first post in the discussion.\n   */\n  goToFirst() {\n    this.stream.goToFirst();\n    this.updateScrubberValues({ animate: true, forceHeightChange: true });\n  }\n\n  /**\n   * Go to the last post in the discussion.\n   */\n  goToLast() {\n    this.stream.goToLast();\n    this.updateScrubberValues({ animate: true, forceHeightChange: true });\n  }\n\n  onresize() {\n    // Adjust the height of the scrollbar so that it fills the height of\n    // the sidebar and doesn't overlap the footer.\n    const scrubber = this.$();\n    const scrollbar = this.$('.Scrubber-scrollbar');\n\n    scrollbar.css(\n      'max-height',\n      $(window).height() -\n        scrubber.offset().top +\n        $(window).scrollTop() -\n        parseInt($('#app').css('padding-bottom'), 10) -\n        (scrubber.outerHeight() - scrollbar.outerHeight())\n    );\n  }\n\n  onmousedown(e) {\n    e.redraw = false;\n    this.mouseStart = e.clientY || e.originalEvent.touches[0].clientY;\n    this.indexStart = this.stream.index;\n    this.dragging = true;\n    $('body').css('cursor', 'move');\n    this.$().toggleClass('dragging', this.dragging);\n  }\n\n  onmousemove(e) {\n    if (!this.dragging) return;\n\n    // Work out how much the mouse has moved by - first in pixels, then\n    // convert it to a percentage of the scrollbar's height, and then\n    // finally convert it into an index. Add this delta index onto\n    // the index at which the drag was started, and then scroll there.\n    const deltaPixels = (e.clientY || e.originalEvent.touches[0].clientY) - this.mouseStart;\n    const deltaPercent = (deltaPixels / this.$('.Scrubber-scrollbar').outerHeight()) * 100;\n    const deltaIndex = deltaPercent / this.percentPerPost().index || 0;\n    const newIndex = Math.min(this.indexStart + deltaIndex, this.stream.count() - 1);\n\n    this.stream.index = Math.max(0, newIndex);\n    this.updateScrubberValues();\n  }\n\n  onmouseup() {\n    this.$().toggleClass('dragging', this.dragging);\n    if (!this.dragging) return;\n\n    this.mouseStart = 0;\n    this.indexStart = 0;\n    this.dragging = false;\n    $('body').css('cursor', '');\n\n    this.$().removeClass('open');\n\n    // If the index we've landed on is in a gap, then tell the stream-\n    // content that we want to load those posts.\n    const intIndex = Math.floor(this.stream.index);\n    this.stream.goToIndex(intIndex);\n  }\n\n  onclick(e) {\n    // Calculate the index which we want to jump to based on the click position.\n\n    // 1. Get the offset of the click from the top of the scrollbar, as a\n    //    percentage of the scrollbar's height.\n    const $scrollbar = this.$('.Scrubber-scrollbar');\n    const offsetPixels = (e.pageY || e.originalEvent.touches[0].pageY) - $scrollbar.offset().top + $('body').scrollTop();\n    let offsetPercent = (offsetPixels / $scrollbar.outerHeight()) * 100;\n\n    // 2. We want the handle of the scrollbar to end up centered on the click\n    //    position. Thus, we calculate the height of the handle in percent and\n    //    use that to find a new offset percentage.\n    offsetPercent = offsetPercent - parseFloat($scrollbar.find('.Scrubber-handle')[0].style.height) / 2;\n\n    // 3. Now we can convert the percentage into an index, and tell the stream-\n    //    content component to jump to that index.\n    let offsetIndex = offsetPercent / this.percentPerPost().index;\n    offsetIndex = Math.max(0, Math.min(this.stream.count() - 1, offsetIndex));\n    this.stream.goToIndex(Math.floor(offsetIndex));\n    this.updateScrubberValues({ animate: true, forceHeightChange: true });\n\n    this.$().removeClass('open');\n  }\n\n  /**\n   * Get the percentage of the height of the scrubber that should be allocated\n   * to each post.\n   *\n   * @return {Object}\n   * @property {Number} index The percent per post for posts on either side of\n   *     the visible part of the scrubber.\n   * @property {Number} visible The percent per post for the visible part of the\n   *     scrubber.\n   */\n  percentPerPost() {\n    const count = this.stream.count() || 1;\n    const visible = this.stream.visible || 1;\n\n    // To stop the handle of the scrollbar from getting too small when there\n    // are many posts, we define a minimum percentage height for the handle\n    // calculated from a 50 pixel limit. From this, we can calculate the\n    // minimum percentage per visible post. If this is greater than the actual\n    // percentage per post, then we need to adjust the 'before' percentage to\n    // account for it.\n    const minPercentVisible = (50 / this.$('.Scrubber-scrollbar').outerHeight()) * 100;\n    const percentPerVisiblePost = Math.max(100 / count, minPercentVisible / visible);\n    const percentPerPost = count === visible ? 0 : (100 - percentPerVisiblePost * visible) / (count - visible);\n\n    return {\n      index: percentPerPost,\n      visible: percentPerVisiblePost,\n    };\n  }\n}\n","import Page from '../../common/components/Page';\nimport ItemList from '../../common/utils/ItemList';\nimport DiscussionHero from './DiscussionHero';\nimport DiscussionListPane from './DiscussionListPane';\nimport PostStreamScrubber from './PostStreamScrubber';\nimport LoadingIndicator from '../../common/components/LoadingIndicator';\nimport SplitDropdown from '../../common/components/SplitDropdown';\nimport listItems from '../../common/helpers/listItems';\nimport DiscussionControls from '../utils/DiscussionControls';\nimport PostStreamState from '../states/PostStreamState';\n\n/**\n * The `DiscussionPage` component displays a whole discussion page, including\n * the discussion list pane, the hero, the posts, and the sidebar.\n */\nexport default class DiscussionPage extends Page {\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    this.useBrowserScrollRestoration = false;\n\n    /**\n     * The discussion that is being viewed.\n     *\n     * @type {Discussion}\n     */\n    this.discussion = null;\n\n    /**\n     * The number of the first post that is currently visible in the viewport.\n     *\n     * @type {number}\n     */\n    this.near = m.route.param('near') || 0;\n\n    this.load();\n\n    // If the discussion list has been loaded, then we'll enable the pane (and\n    // hide it by default). Also, if we've just come from another discussion\n    // page, then we don't want Mithril to redraw the whole page – if it did,\n    // then the pane would redraw which would be slow and would cause problems with\n    // event handlers.\n    if (app.discussions.hasDiscussions()) {\n      app.pane.enable();\n      app.pane.hide();\n    }\n\n    app.history.push('discussion');\n\n    this.bodyClass = 'App--discussion';\n  }\n\n  onremove() {\n    super.onremove();\n    // If we are indeed navigating away from this discussion, then disable the\n    // discussion list pane. Also, if we're composing a reply to this\n    // discussion, minimize the composer – unless it's empty, in which case\n    // we'll just close it.\n    app.pane.disable();\n\n    if (app.composer.composingReplyTo(this.discussion) && !app.composer.fields.content()) {\n      app.composer.hide();\n    } else {\n      app.composer.minimize();\n    }\n  }\n\n  view() {\n    const discussion = this.discussion;\n\n    const PostStream = this.PostStream;\n\n    return (\n      <div className=\"DiscussionPage\">\n        <DiscussionListPane state={app.discussions} />\n        <div className=\"DiscussionPage-discussion\">\n          {discussion\n            ? [\n                DiscussionHero.component({ discussion }),\n                <div className=\"container\">\n                  <nav className=\"DiscussionPage-nav\">\n                    <ul>{listItems(this.sidebarItems().toArray())}</ul>\n                  </nav>\n                  <div className=\"DiscussionPage-stream\">\n                    {PostStream ? (\n                      <PostStream discussion={discussion} stream={this.stream} onPositionChange={this.positionChanged.bind(this)} />\n                    ) : (\n                      LoadingIndicator.component({ className: 'LoadingIndicator--block' })\n                    )}\n                  </div>\n                </div>,\n              ]\n            : LoadingIndicator.component({ className: 'LoadingIndicator--block' })}\n        </div>\n      </div>\n    );\n  }\n\n  /**\n   * Load the discussion from the API or use the preloaded one.\n   */\n  load() {\n    import(/* webpackChunkName: \"forum/components/PostStream\" */ './PostStream').then((PostStream) => {\n      this.PostStream = PostStream.default;\n      m.redraw();\n    });\n\n    const preloadedDiscussion = app.preloadedApiDocument();\n    if (preloadedDiscussion) {\n      // We must wrap this in a setTimeout because if we are mounting this\n      // component for the first time on page load, then any calls to m.redraw\n      // will be ineffective and thus any configs (scroll code) will be run\n      // before stuff is drawn to the page.\n      setTimeout(this.show.bind(this, preloadedDiscussion), 0);\n    } else {\n      const params = this.requestParams();\n\n      app.store.find('discussions', m.route.param('id'), params).then(this.show.bind(this));\n    }\n\n    m.redraw();\n  }\n\n  /**\n   * Get the parameters that should be passed in the API request to get the\n   * discussion.\n   *\n   * @return {Object}\n   */\n  requestParams() {\n    return {\n      bySlug: true,\n      page: { near: this.near },\n    };\n  }\n\n  /**\n   * Initialize the component to display the given discussion.\n   *\n   * @param {Discussion} discussion\n   */\n  show(discussion) {\n    app.history.push('discussion', discussion.title());\n    app.setTitle(discussion.title());\n    app.setTitleCount(0);\n\n    // When the API responds with a discussion, it will also include a number of\n    // posts. Some of these posts are included because they are on the first\n    // page of posts we want to display (determined by the `near` parameter) –\n    // others may be included because due to other relationships introduced by\n    // extensions. We need to distinguish the two so we don't end up displaying\n    // the wrong posts. We do so by filtering out the posts that don't have\n    // the 'discussion' relationship linked, then sorting and splicing.\n    let includedPosts = [];\n    if (discussion.payload && discussion.payload.included) {\n      const discussionId = discussion.id();\n\n      includedPosts = discussion.payload.included\n        .filter(\n          (record) =>\n            record.type === 'posts' &&\n            record.relationships &&\n            record.relationships.discussion &&\n            record.relationships.discussion.data.id === discussionId\n        )\n        .map((record) => app.store.getById('posts', record.id))\n        .sort((a, b) => a.createdAt() - b.createdAt())\n        .slice(0, 20);\n    }\n\n    // Set up the post stream for this discussion, along with the first page of\n    // posts we want to display. Tell the stream to scroll down and highlight\n    // the specific post that was routed to.\n    this.stream = new PostStreamState(discussion, includedPosts);\n    this.stream.goToNumber(m.route.param('near') || (includedPosts[0] && includedPosts[0].number()), true).then(() => {\n      this.discussion = discussion;\n\n      app.current.set('discussion', discussion);\n      app.current.set('stream', this.stream);\n    });\n  }\n\n  /**\n   * Build an item list for the contents of the sidebar.\n   *\n   * @return {ItemList}\n   */\n  sidebarItems() {\n    const items = new ItemList();\n\n    items.add(\n      'controls',\n      SplitDropdown.component(\n        {\n          icon: 'fas fa-ellipsis-v',\n          className: 'App-primaryControl',\n          buttonClassName: 'Button--primary',\n          accessibleToggleLabel: app.translator.trans('core.forum.discussion_controls.toggle_dropdown_accessible_label'),\n        },\n        DiscussionControls.controls(this.discussion, this).toArray()\n      )\n    );\n\n    items.add(\n      'scrubber',\n      PostStreamScrubber.component({\n        stream: this.stream,\n        className: 'App-titleControl',\n      }),\n      -100\n    );\n\n    return items;\n  }\n\n  /**\n   * When the posts that are visible in the post stream change (i.e. the user\n   * scrolls up or down), then we update the URL and mark the posts as read.\n   *\n   * @param {Integer} startNumber\n   * @param {Integer} endNumber\n   */\n  positionChanged(startNumber, endNumber) {\n    const discussion = this.discussion;\n\n    // Construct a URL to this discussion with the updated position, then\n    // replace it into the window's history and our own history stack.\n    const url = app.route.discussion(discussion, (this.near = startNumber));\n\n    window.history.replaceState(null, document.title, url);\n    app.history.push('discussion', discussion.title());\n\n    // If the user hasn't read past here before, then we'll update their read\n    // state and redraw.\n    if (app.session.user && endNumber > (discussion.lastReadPostNumber() || 0)) {\n      discussion.save({ lastReadPostNumber: endNumber });\n      m.redraw();\n    }\n  }\n}\n","import ComposerBody from './ComposerBody';\nimport Button from '../../common/components/Button';\nimport Link from '../../common/components/Link';\nimport icon from '../../common/helpers/icon';\n\nfunction minimizeComposerIfFullScreen(e) {\n  if (app.composer.isFullScreen()) {\n    app.composer.minimize();\n    e.stopPropagation();\n  }\n}\n\n/**\n * The `EditPostComposer` component displays the composer content for editing a\n * post. It sets the initial content to the content of the post that is being\n * edited, and adds a header control to indicate which post is being edited.\n *\n * ### Attrs\n *\n * - All of the attrs for ComposerBody\n * - `post`\n */\nexport default class EditPostComposer extends ComposerBody {\n  static initAttrs(attrs) {\n    super.initAttrs(attrs);\n\n    attrs.submitLabel = attrs.submitLabel || app.translator.trans('core.forum.composer_edit.submit_button');\n    attrs.confirmExit = attrs.confirmExit || app.translator.trans('core.forum.composer_edit.discard_confirmation');\n    attrs.originalContent = attrs.originalContent || attrs.post.content();\n    attrs.user = attrs.user || attrs.post.user();\n\n    attrs.post.editedContent = attrs.originalContent;\n  }\n\n  headerItems() {\n    const items = super.headerItems();\n    const post = this.attrs.post;\n\n    items.add(\n      'title',\n      <h3>\n        {icon('fas fa-pencil-alt')}{' '}\n        <Link href={app.route.discussion(post.discussion(), post.number())} onclick={minimizeComposerIfFullScreen}>\n          {app.translator.trans('core.forum.composer_edit.post_link', { number: post.number(), discussion: post.discussion().title() })}\n        </Link>\n      </h3>\n    );\n\n    return items;\n  }\n\n  /**\n   * Jump to the preview when triggered by the text editor.\n   */\n  jumpToPreview(e) {\n    minimizeComposerIfFullScreen(e);\n\n    m.route.set(app.route.post(this.attrs.post));\n  }\n\n  /**\n   * Get the data to submit to the server when the post is saved.\n   *\n   * @return {Object}\n   */\n  data() {\n    return {\n      content: this.composer.fields.content(),\n    };\n  }\n\n  onsubmit() {\n    const discussion = this.attrs.post.discussion();\n\n    this.loading = true;\n\n    const data = this.data();\n\n    this.attrs.post.save(data).then((post) => {\n      // If we're currently viewing the discussion which this edit was made\n      // in, then we can scroll to the post.\n      if (app.viewingDiscussion(discussion)) {\n        app.current.get('stream').goToNumber(post.number());\n      } else {\n        // Otherwise, we'll create an alert message to inform the user that\n        // their edit has been made, containing a button which will\n        // transition to their edited post when clicked.\n        let alert;\n        const viewButton = Button.component(\n          {\n            className: 'Button Button--link',\n            onclick: () => {\n              m.route.set(app.route.post(post));\n              app.alerts.dismiss(alert);\n            },\n          },\n          app.translator.trans('core.forum.composer_edit.view_button')\n        );\n        alert = app.alerts.show(\n          {\n            type: 'success',\n            controls: [viewButton],\n          },\n          app.translator.trans('core.forum.composer_edit.edited_message')\n        );\n      }\n\n      this.composer.hide();\n    }, this.loaded.bind(this));\n  }\n}\n","import Post from './Post';\nimport { ucfirst } from '../../common/utils/string';\nimport usernameHelper from '../../common/helpers/username';\nimport icon from '../../common/helpers/icon';\nimport Link from '../../common/components/Link';\n\n/**\n * The `EventPost` component displays a post which indicating a discussion\n * event, like a discussion being renamed or stickied. Subclasses must implement\n * the `icon` and `description` methods.\n *\n * ### Attrs\n *\n * - All of the attrs for `Post`\n *\n * @abstract\n */\nexport default class EventPost extends Post {\n  elementAttrs() {\n    const attrs = super.elementAttrs();\n\n    attrs.className = (attrs.className || '') + ' EventPost ' + ucfirst(this.attrs.post.contentType()) + 'Post';\n\n    return attrs;\n  }\n\n  content() {\n    const user = this.attrs.post.user();\n    const username = usernameHelper(user);\n    const data = Object.assign(this.descriptionData(), {\n      user,\n      username: user ? (\n        <Link className=\"EventPost-user\" href={app.route.user(user)}>\n          {username}\n        </Link>\n      ) : (\n        username\n      ),\n    });\n\n    return super.content().concat([icon(this.icon(), { className: 'EventPost-icon' }), <div class=\"EventPost-info\">{this.description(data)}</div>]);\n  }\n\n  /**\n   * Get the name of the event icon.\n   *\n   * @return {String}\n   */\n  icon() {\n    return '';\n  }\n\n  /**\n   * Get the description text for the event.\n   *\n   * @param {Object} data\n   * @return {String|Object} The description to render in the DOM\n   */\n  description(data) {\n    return app.translator.transChoice(this.descriptionKey(), data.count, data);\n  }\n\n  /**\n   * Get the translation key for the description of the event.\n   *\n   * @return {String}\n   */\n  descriptionKey() {\n    return '';\n  }\n\n  /**\n   * Get the translation data for the description of the event.\n   *\n   * @return {Object}\n   */\n  descriptionData() {\n    return {};\n  }\n}\n","import Component from '../../common/Component';\nimport avatar from '../../common/helpers/avatar';\n\n/**\n * The `LoadingPost` component shows a placeholder that looks like a post,\n * indicating that the post is loading.\n */\nexport default class LoadingPost extends Component {\n  view() {\n    return (\n      <div className=\"Post CommentPost LoadingPost\">\n        <header className=\"Post-header\">\n          {avatar(null, { className: 'PostUser-avatar' })}\n          <div className=\"fakeText\" />\n        </header>\n\n        <div className=\"Post-body\">\n          <div className=\"fakeText\" />\n          <div className=\"fakeText\" />\n          <div className=\"fakeText\" />\n        </div>\n      </div>\n    );\n  }\n}\n","import Component from '../../common/Component';\nimport ItemList from '../../common/utils/ItemList';\n\n/**\n * The `LogInButtons` component displays a collection of social login buttons.\n */\nexport default class LogInButtons extends Component {\n  view() {\n    return <div className=\"LogInButtons\">{this.items().toArray()}</div>;\n  }\n\n  /**\n   * Build a list of LogInButton components.\n   *\n   * @return {ItemList}\n   * @public\n   */\n  items() {\n    return new ItemList();\n  }\n}\n","import Component from '../../common/Component';\nimport SubtreeRetainer from '../../common/utils/SubtreeRetainer';\nimport Dropdown from '../../common/components/Dropdown';\nimport PostControls from '../utils/PostControls';\nimport listItems from '../../common/helpers/listItems';\nimport ItemList from '../../common/utils/ItemList';\n\n/**\n * The `Post` component displays a single post. The basic post template just\n * includes a controls dropdown; subclasses must implement `content` and `attrs`\n * methods.\n *\n * ### Attrs\n *\n * - `post`\n *\n * @abstract\n */\nexport default class Post extends Component {\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    this.loading = false;\n\n    /**\n     * Set up a subtree retainer so that the post will not be redrawn\n     * unless new data comes in.\n     *\n     * @type {SubtreeRetainer}\n     */\n    this.subtree = new SubtreeRetainer(\n      () => this.attrs.post.freshness,\n      () => {\n        const user = this.attrs.post.user();\n        return user && user.freshness;\n      },\n      () => this.controlsOpen\n    );\n  }\n\n  view() {\n    const attrs = this.elementAttrs();\n\n    attrs.className = this.classes(attrs.className).join(' ');\n\n    const controls = PostControls.controls(this.attrs.post, this).toArray();\n\n    return (\n      <article {...attrs}>\n        <div>\n          {this.content()}\n          <aside className=\"Post-actions\">\n            <ul>\n              {listItems(this.actionItems().toArray())}\n              {controls.length ? (\n                <li>\n                  <Dropdown\n                    className=\"Post-controls\"\n                    buttonClassName=\"Button Button--icon Button--flat\"\n                    menuClassName=\"Dropdown-menu--right\"\n                    icon=\"fas fa-ellipsis-h\"\n                    onshow={() => this.$('.Post-actions').addClass('open')}\n                    onhide={() => this.$('.Post-actions').removeClass('open')}\n                    accessibleToggleLabel={app.translator.trans('core.forum.post_controls.toggle_dropdown_accessible_label')}\n                  >\n                    {controls}\n                  </Dropdown>\n                </li>\n              ) : (\n                ''\n              )}\n            </ul>\n          </aside>\n          <footer className=\"Post-footer\">\n            <ul>{listItems(this.footerItems().toArray())}</ul>\n          </footer>\n        </div>\n      </article>\n    );\n  }\n\n  onbeforeupdate(vnode) {\n    super.onbeforeupdate(vnode);\n\n    return this.subtree.needsRebuild();\n  }\n\n  onupdate() {\n    const $actions = this.$('.Post-actions');\n    const $controls = this.$('.Post-controls');\n\n    $actions.toggleClass('open', $controls.hasClass('open'));\n  }\n\n  /**\n   * Get attributes for the post element.\n   *\n   * @return {Object}\n   */\n  elementAttrs() {\n    return {};\n  }\n\n  /**\n   * Get the post's content.\n   *\n   * @return {Array}\n   */\n  content() {\n    return [];\n  }\n\n  /**\n   * Get the post's classes.\n   *\n   * @param string classes\n   * @returns {string[]}\n   */\n  classes(existing) {\n    let classes = (existing || '').split(' ').concat(['Post']);\n\n    const user = this.attrs.post.user();\n    const discussion = this.attrs.post.discussion();\n\n    if (this.loading) {\n      classes.push('Post--loading');\n    }\n\n    if (user && user === app.session.user) {\n      classes.push('Post--by-actor');\n    }\n\n    if (user && user === discussion.user()) {\n      classes.push('Post--by-start-user');\n    }\n\n    return classes;\n  }\n\n  /**\n   * Build an item list for the post's actions.\n   *\n   * @return {ItemList}\n   */\n  actionItems() {\n    return new ItemList();\n  }\n\n  /**\n   * Build an item list for the post's footer.\n   *\n   * @return {ItemList}\n   */\n  footerItems() {\n    return new ItemList();\n  }\n}\n","import Component from '../../common/Component';\nimport humanTime from '../../common/utils/humanTime';\nimport extractText from '../../common/utils/extractText';\n\n/**\n * The `PostEdited` component displays information about when and by whom a post\n * was edited.\n *\n * ### Attrs\n *\n * - `post`\n */\nexport default class PostEdited extends Component {\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    this.shouldUpdateTooltip = false;\n    this.oldEditedInfo = null;\n  }\n\n  view() {\n    const post = this.attrs.post;\n    const editedUser = post.editedUser();\n    const editedInfo = extractText(app.translator.trans('core.forum.post.edited_tooltip', { user: editedUser, ago: humanTime(post.editedAt()) }));\n    if (editedInfo !== this.oldEditedInfo) {\n      this.shouldUpdateTooltip = true;\n      this.oldEditedInfo = editedInfo;\n    }\n\n    return (\n      <span className=\"PostEdited\" title={editedInfo}>\n        {app.translator.trans('core.forum.post.edited_text')}\n      </span>\n    );\n  }\n\n  oncreate(vnode) {\n    super.oncreate(vnode);\n\n    this.rebuildTooltip();\n  }\n\n  onupdate() {\n    this.rebuildTooltip();\n  }\n\n  rebuildTooltip() {\n    if (this.shouldUpdateTooltip) {\n      this.$().tooltip('destroy').tooltip();\n      this.shouldUpdateTooltip = false;\n    }\n  }\n}\n","import Component from '../../common/Component';\nimport humanTime from '../../common/helpers/humanTime';\nimport fullTime from '../../common/helpers/fullTime';\n\n/**\n * The `PostMeta` component displays the time of a post, and when clicked, shows\n * a dropdown containing more information about the post (number, full time,\n * permalink).\n *\n * ### Attrs\n *\n * - `post`\n */\nexport default class PostMeta extends Component {\n  view() {\n    const post = this.attrs.post;\n    const time = post.createdAt();\n    const permalink = this.getPermalink(post);\n    const touch = 'ontouchstart' in document.documentElement;\n\n    // When the dropdown menu is shown, select the contents of the permalink\n    // input so that the user can quickly copy the URL.\n    const selectPermalink = function (e) {\n      setTimeout(() => $(this).parent().find('.PostMeta-permalink').select());\n\n      e.redraw = false;\n    };\n\n    return (\n      <div className=\"Dropdown PostMeta\">\n        <a className=\"Dropdown-toggle\" onclick={selectPermalink} data-toggle=\"dropdown\">\n          {humanTime(time)}\n        </a>\n\n        <div className=\"Dropdown-menu dropdown-menu\">\n          <span className=\"PostMeta-number\">{app.translator.trans('core.forum.post.number_tooltip', { number: post.number() })}</span>{' '}\n          <span className=\"PostMeta-time\">{fullTime(time)}</span> <span className=\"PostMeta-ip\">{post.data.attributes.ipAddress}</span>\n          {touch ? (\n            <a className=\"Button PostMeta-permalink\" href={permalink}>\n              {permalink}\n            </a>\n          ) : (\n            <input className=\"FormControl PostMeta-permalink\" value={permalink} onclick={(e) => e.stopPropagation()} />\n          )}\n        </div>\n      </div>\n    );\n  }\n\n  /**\n   * Get the permalink for the given post.\n   *\n   * @param {Post} post\n   * @returns {String}\n   */\n  getPermalink(post) {\n    return window.location.origin + app.route.post(post);\n  }\n}\n","import Component from '../../common/Component';\nimport Link from '../../common/components/Link';\nimport UserCard from './UserCard';\nimport avatar from '../../common/helpers/avatar';\nimport username from '../../common/helpers/username';\nimport userOnline from '../../common/helpers/userOnline';\nimport listItems from '../../common/helpers/listItems';\n\n/**\n * The `PostUser` component shows the avatar and username of a post's author.\n *\n * ### Attrs\n *\n * - `post`\n */\nexport default class PostUser extends Component {\n  view() {\n    const post = this.attrs.post;\n    const user = post.user();\n\n    if (!user) {\n      return (\n        <div className=\"PostUser\">\n          <h3>\n            {avatar(user, { className: 'PostUser-avatar' })} {username(user)}\n          </h3>\n        </div>\n      );\n    }\n\n    let card = '';\n\n    if (!post.isHidden() && this.attrs.cardVisible) {\n      card = UserCard.component({\n        user,\n        className: 'UserCard--popover',\n        controlsButtonClassName: 'Button Button--icon Button--flat',\n      });\n    }\n\n    return (\n      <div className=\"PostUser\">\n        <h3>\n          <Link href={app.route.user(user)}>\n            {avatar(user, { className: 'PostUser-avatar' })}\n            {userOnline(user)}\n            {username(user)}\n          </Link>\n        </h3>\n        <ul className=\"PostUser-badges badges\">{listItems(user.badges().toArray())}</ul>\n        {card}\n      </div>\n    );\n  }\n\n  oncreate(vnode) {\n    super.oncreate(vnode);\n\n    let timeout;\n\n    this.$()\n      .on('mouseover', 'h3 a, .UserCard', () => {\n        clearTimeout(timeout);\n        timeout = setTimeout(this.showCard.bind(this), 500);\n      })\n      .on('mouseout', 'h3 a, .UserCard', () => {\n        clearTimeout(timeout);\n        timeout = setTimeout(this.hideCard.bind(this), 250);\n      });\n  }\n\n  /**\n   * Show the user card.\n   */\n  showCard() {\n    this.attrs.oncardshow();\n\n    setTimeout(() => this.$('.UserCard').addClass('in'));\n  }\n\n  /**\n   * Hide the user card.\n   */\n  hideCard() {\n    this.$('.UserCard')\n      .removeClass('in')\n      .one('transitionend webkitTransitionEnd oTransitionEnd', () => {\n        this.attrs.oncardhide();\n      });\n  }\n}\n","import Modal from '../../common/components/Modal';\nimport Button from '../../common/components/Button';\nimport Stream from '../../common/utils/Stream';\n\n/**\n * The 'RenameDiscussionModal' displays a modal dialog with an input to rename a discussion\n */\nexport default class RenameDiscussionModal extends Modal {\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    this.discussion = this.attrs.discussion;\n    this.currentTitle = this.attrs.currentTitle;\n    this.newTitle = Stream(this.currentTitle);\n  }\n\n  className() {\n    return 'RenameDiscussionModal Modal--small';\n  }\n\n  title() {\n    return app.translator.trans('core.forum.rename_discussion.title');\n  }\n\n  content() {\n    return (\n      <div className=\"Modal-body\">\n        <div className=\"Form Form--centered\">\n          <div className=\"Form-group\">\n            <input className=\"FormControl\" bidi={this.newTitle} type=\"text\" />\n          </div>\n          <div className=\"Form-group\">\n            {Button.component(\n              {\n                className: 'Button Button--primary Button--block',\n                type: 'submit',\n                loading: this.loading,\n              },\n              app.translator.trans('core.forum.rename_discussion.submit_button')\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  onsubmit(e) {\n    e.preventDefault();\n\n    this.loading = true;\n\n    const title = this.newTitle();\n    const currentTitle = this.currentTitle;\n\n    // If the title is different to what it was before, then save it. After the\n    // save has completed, update the post stream as there will be a new post\n    // indicating that the discussion was renamed.\n    if (title && title !== currentTitle) {\n      return this.discussion\n        .save({ title })\n        .then(() => {\n          if (app.viewingDiscussion(this.discussion)) {\n            app.current.get('stream').update();\n          }\n          m.redraw();\n          this.hide();\n        })\n        .catch(() => {\n          this.loading = false;\n          m.redraw();\n        });\n    } else {\n      this.hide();\n    }\n  }\n}\n","import ComposerBody from './ComposerBody';\nimport Button from '../../common/components/Button';\nimport Link from '../../common/components/Link';\nimport icon from '../../common/helpers/icon';\nimport extractText from '../../common/utils/extractText';\n\nfunction minimizeComposerIfFullScreen(e) {\n  if (app.composer.isFullScreen()) {\n    app.composer.minimize();\n    e.stopPropagation();\n  }\n}\n\n/**\n * The `ReplyComposer` component displays the composer content for replying to a\n * discussion.\n *\n * ### Attrs\n *\n * - All of the attrs of ComposerBody\n * - `discussion`\n */\nexport default class ReplyComposer extends ComposerBody {\n  static initAttrs(attrs) {\n    super.initAttrs(attrs);\n\n    attrs.placeholder = attrs.placeholder || extractText(app.translator.trans('core.forum.composer_reply.body_placeholder'));\n    attrs.submitLabel = attrs.submitLabel || app.translator.trans('core.forum.composer_reply.submit_button');\n    attrs.confirmExit = attrs.confirmExit || extractText(app.translator.trans('core.forum.composer_reply.discard_confirmation'));\n  }\n\n  headerItems() {\n    const items = super.headerItems();\n    const discussion = this.attrs.discussion;\n\n    items.add(\n      'title',\n      <h3>\n        {icon('fas fa-reply')}{' '}\n        <Link href={app.route.discussion(discussion)} onclick={minimizeComposerIfFullScreen}>\n          {discussion.title()}\n        </Link>\n      </h3>\n    );\n\n    return items;\n  }\n\n  /**\n   * Jump to the preview when triggered by the text editor.\n   */\n  jumpToPreview(e) {\n    minimizeComposerIfFullScreen(e);\n\n    m.route.set(app.route.discussion(this.attrs.discussion, 'reply'));\n  }\n\n  /**\n   * Get the data to submit to the server when the reply is saved.\n   *\n   * @return {Object}\n   */\n  data() {\n    return {\n      content: this.composer.fields.content(),\n      relationships: { discussion: this.attrs.discussion },\n    };\n  }\n\n  onsubmit() {\n    const discussion = this.attrs.discussion;\n\n    this.loading = true;\n    m.redraw();\n\n    const data = this.data();\n\n    app.store\n      .createRecord('posts')\n      .save(data)\n      .then((post) => {\n        // If we're currently viewing the discussion which this reply was made\n        // in, then we can update the post stream and scroll to the post.\n        if (app.viewingDiscussion(discussion)) {\n          const stream = app.current.get('stream');\n          stream.update().then(() => stream.goToNumber(post.number()));\n        } else {\n          // Otherwise, we'll create an alert message to inform the user that\n          // their reply has been posted, containing a button which will\n          // transition to their new post when clicked.\n          let alert;\n          const viewButton = Button.component(\n            {\n              className: 'Button Button--link',\n              onclick: () => {\n                m.route.set(app.route.post(post));\n                app.alerts.dismiss(alert);\n              },\n            },\n            app.translator.trans('core.forum.composer_reply.view_button')\n          );\n          alert = app.alerts.show(\n            {\n              type: 'success',\n              controls: [viewButton],\n            },\n            app.translator.trans('core.forum.composer_reply.posted_message')\n          );\n        }\n\n        this.composer.hide();\n      }, this.loaded.bind(this));\n  }\n}\n","import Component from '../../common/Component';\nimport humanTime from '../../common/helpers/humanTime';\nimport icon from '../../common/helpers/icon';\n\n/**\n * Displays information about a the first or last post in a discussion.\n *\n * ### Attrs\n *\n * - `discussion`\n * - `lastPost`\n */\nexport default class TerminalPost extends Component {\n  view() {\n    const discussion = this.attrs.discussion;\n    const lastPost = this.attrs.lastPost && discussion.replyCount();\n\n    const user = discussion[lastPost ? 'lastPostedUser' : 'user']();\n    const time = discussion[lastPost ? 'lastPostedAt' : 'createdAt']();\n\n    return (\n      <span>\n        {lastPost ? icon('fas fa-reply') : ''}{' '}\n        {app.translator.trans('core.forum.discussion_list.' + (lastPost ? 'replied' : 'started') + '_text', {\n          user,\n          ago: humanTime(time),\n        })}\n      </span>\n    );\n  }\n}\n","import Component from '../../common/Component';\nimport humanTime from '../../common/utils/humanTime';\nimport ItemList from '../../common/utils/ItemList';\nimport UserControls from '../utils/UserControls';\nimport avatar from '../../common/helpers/avatar';\nimport username from '../../common/helpers/username';\nimport icon from '../../common/helpers/icon';\nimport Dropdown from '../../common/components/Dropdown';\nimport Link from '../../common/components/Link';\nimport AvatarEditor from './AvatarEditor';\nimport listItems from '../../common/helpers/listItems';\n\n/**\n * The `UserCard` component displays a user's profile card. This is used both on\n * the `UserPage` (in the hero) and in discussions, shown when hovering over a\n * post author.\n *\n * ### Attrs\n *\n * - `user`\n * - `className`\n * - `editable`\n * - `controlsButtonClassName`\n */\nexport default class UserCard extends Component {\n  view() {\n    const user = this.attrs.user;\n    const controls = UserControls.controls(user, this).toArray();\n    const color = user.color();\n    const badges = user.badges().toArray();\n\n    return (\n      <div className={'UserCard ' + (this.attrs.className || '')} style={color ? { backgroundColor: color } : ''}>\n        <div className=\"darkenBackground\">\n          <div className=\"container\">\n            {controls.length\n              ? Dropdown.component(\n                  {\n                    className: 'UserCard-controls App-primaryControl',\n                    menuClassName: 'Dropdown-menu--right',\n                    buttonClassName: this.attrs.controlsButtonClassName,\n                    label: app.translator.trans('core.forum.user_controls.button'),\n                    accessibleToggleLabel: app.translator.trans('core.forum.user_controls.toggle_dropdown_accessible_label'),\n                    icon: 'fas fa-ellipsis-v',\n                  },\n                  controls\n                )\n              : ''}\n\n            <div className=\"UserCard-profile\">\n              <h2 className=\"UserCard-identity\">\n                {this.attrs.editable ? (\n                  [AvatarEditor.component({ user, className: 'UserCard-avatar' }), username(user)]\n                ) : (\n                  <Link href={app.route.user(user)}>\n                    <div className=\"UserCard-avatar\">{avatar(user)}</div>\n                    {username(user)}\n                  </Link>\n                )}\n              </h2>\n\n              {badges.length ? <ul className=\"UserCard-badges badges\">{listItems(badges)}</ul> : ''}\n\n              <ul className=\"UserCard-info\">{listItems(this.infoItems().toArray())}</ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  /**\n   * Build an item list of tidbits of info to show on this user's profile.\n   *\n   * @return {ItemList}\n   */\n  infoItems() {\n    const items = new ItemList();\n    const user = this.attrs.user;\n    const lastSeenAt = user.lastSeenAt();\n\n    if (lastSeenAt) {\n      const online = user.isOnline();\n\n      items.add(\n        'lastSeen',\n        <span className={'UserCard-lastSeen' + (online ? ' online' : '')}>\n          {online\n            ? [icon('fas fa-circle'), ' ', app.translator.trans('core.forum.user.online_text')]\n            : [icon('far fa-clock'), ' ', humanTime(lastSeenAt)]}\n        </span>\n      );\n    }\n\n    items.add(\n      'joined',\n      <span className=\"UserCard-joinedAt\">{app.translator.trans('core.forum.user.joined_date_text', { ago: humanTime(user.joinTime()) })}</span>\n    );\n\n    return items;\n  }\n}\n","import Page from '../../common/components/Page';\nimport ItemList from '../../common/utils/ItemList';\nimport UserCard from './UserCard';\nimport LoadingIndicator from '../../common/components/LoadingIndicator';\nimport SelectDropdown from '../../common/components/SelectDropdown';\nimport LinkButton from '../../common/components/LinkButton';\nimport Separator from '../../common/components/Separator';\nimport listItems from '../../common/helpers/listItems';\nimport AffixedSidebar from './AffixedSidebar';\n\n/**\n * The `UserPage` component shows a user's profile. It can be extended to show\n * content inside of the content area. See `ActivityPage` and `SettingsPage` for\n * examples.\n *\n * @abstract\n */\nexport default class UserPage extends Page {\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    /**\n     * The user this page is for.\n     *\n     * @type {User}\n     */\n    this.user = null;\n\n    this.bodyClass = 'App--user';\n  }\n\n  view() {\n    return (\n      <div className=\"UserPage\">\n        {this.user\n          ? [\n              <UserCard\n                user={this.user}\n                className=\"Hero UserHero\"\n                editable={this.user.canEdit() || this.user === app.session.user}\n                controlsButtonClassName=\"Button\"\n              />,\n              <div className=\"container\">\n                <div className=\"sideNavContainer\">\n                  <AffixedSidebar>\n                    <nav className=\"sideNav UserPage-nav\">\n                      <ul>{listItems(this.sidebarItems().toArray())}</ul>\n                    </nav>\n                  </AffixedSidebar>\n                  <div className=\"sideNavOffset UserPage-content\">{this.content()}</div>\n                </div>\n              </div>,\n            ]\n          : [<LoadingIndicator className=\"LoadingIndicator--block\" />]}\n      </div>\n    );\n  }\n\n  /**\n   * Get the content to display in the user page.\n   *\n   * @return {VirtualElement}\n   */\n  content() {}\n\n  /**\n   * Initialize the component with a user, and trigger the loading of their\n   * activity feed.\n   *\n   * @param {User} user\n   * @protected\n   */\n  show(user) {\n    this.user = user;\n\n    app.current.set('user', user);\n\n    app.setTitle(user.displayName());\n\n    m.redraw();\n  }\n\n  /**\n   * Given a username, load the user's profile from the store, or make a request\n   * if we don't have it yet. Then initialize the profile page with that user.\n   *\n   * @param {String} username\n   */\n  loadUser(username) {\n    const lowercaseUsername = username.toLowerCase();\n\n    // Load the preloaded user object, if any, into the global app store\n    // We don't use the output of the method because it returns raw JSON\n    // instead of the parsed models\n    app.preloadedApiDocument();\n\n    app.store.all('users').some((user) => {\n      if ((user.username().toLowerCase() === lowercaseUsername || user.id() === username) && user.joinTime()) {\n        this.show(user);\n        return true;\n      }\n    });\n\n    if (!this.user) {\n      app.store.find('users', username, { bySlug: true }).then(this.show.bind(this));\n    }\n  }\n\n  /**\n   * Build an item list for the content of the sidebar.\n   *\n   * @return {ItemList}\n   */\n  sidebarItems() {\n    const items = new ItemList();\n\n    items.add(\n      'nav',\n      <SelectDropdown className=\"App-titleControl\" buttonClassName=\"Button\">\n        {this.navItems().toArray()}\n      </SelectDropdown>\n    );\n\n    return items;\n  }\n\n  /**\n   * Build an item list for the navigation in the sidebar.\n   *\n   * @return {ItemList}\n   */\n  navItems() {\n    const items = new ItemList();\n    const user = this.user;\n\n    items.add(\n      'posts',\n      <LinkButton href={app.route('user.posts', { username: user.username() })} icon=\"far fa-comment\">\n        {app.translator.trans('core.forum.user.posts_link')} <span className=\"Button-badge\">{user.commentCount()}</span>\n      </LinkButton>,\n      100\n    );\n\n    items.add(\n      'discussions',\n      <LinkButton href={app.route('user.discussions', { username: user.username() })} icon=\"fas fa-bars\">\n        {app.translator.trans('core.forum.user.discussions_link')} <span className=\"Button-badge\">{user.discussionCount()}</span>\n      </LinkButton>,\n      90\n    );\n\n    if (app.session.user === user) {\n      items.add('separator', <Separator />, -90);\n      items.add(\n        'settings',\n        <LinkButton href={app.route('settings')} icon=\"fas fa-cog\">\n          {app.translator.trans('core.forum.user.settings_link')}\n        </LinkButton>,\n        -100\n      );\n    }\n\n    return items;\n  }\n}\n","import Component from '../../common/Component';\nimport Button from '../../common/components/Button';\n\n/**\n * The `WelcomeHero` component displays a hero that welcomes the user to the\n * forum.\n */\nexport default class WelcomeHero extends Component {\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    this.hidden = localStorage.getItem('welcomeHidden');\n  }\n\n  view() {\n    if (this.hidden) return <div />;\n\n    const slideUp = () => {\n      this.$().slideUp(this.hide.bind(this));\n    };\n\n    return (\n      <header className=\"Hero WelcomeHero\">\n        <div class=\"container\">\n          {Button.component({\n            icon: 'fas fa-times',\n            onclick: slideUp,\n            className: 'Hero-close Button Button--icon Button--link',\n          })}\n\n          <div className=\"containerNarrow\">\n            <h2 className=\"Hero-title\">{app.forum.attribute('welcomeTitle')}</h2>\n            <div className=\"Hero-subtitle\">{m.trust(app.forum.attribute('welcomeMessage'))}</div>\n          </div>\n        </div>\n      </header>\n    );\n  }\n\n  /**\n   * Hide the welcome hero.\n   */\n  hide() {\n    localStorage.setItem('welcomeHidden', 'true');\n\n    this.hidden = true;\n  }\n}\n","export default class DiscussionListState {\n  constructor(params = {}, app = window.app) {\n    this.params = params;\n\n    this.app = app;\n\n    this.discussions = [];\n\n    this.moreResults = false;\n\n    this.loading = false;\n  }\n\n  /**\n   * Get the parameters that should be passed in the API request to get\n   * discussion results.\n   *\n   * @api\n   */\n  requestParams() {\n    const params = { include: ['user', 'lastPostedUser'], filter: {} };\n\n    params.sort = this.sortMap()[this.params.sort];\n\n    if (this.params.q) {\n      params.filter.q = this.params.q;\n\n      params.include.push('mostRelevantPost', 'mostRelevantPost.user');\n    }\n\n    return params;\n  }\n\n  /**\n   * Get a map of sort keys (which appear in the URL, and are used for\n   * translation) to the API sort value that they represent.\n   */\n  sortMap() {\n    const map = {};\n\n    if (this.params.q) {\n      map.relevance = '';\n    }\n    map.latest = '-lastPostedAt';\n    map.top = '-commentCount';\n    map.newest = '-createdAt';\n    map.oldest = 'createdAt';\n\n    return map;\n  }\n\n  /**\n   * Get the search parameters.\n   */\n  getParams() {\n    return this.params;\n  }\n\n  /**\n   * Clear cached discussions.\n   */\n  clear() {\n    this.discussions = [];\n    m.redraw();\n  }\n\n  /**\n   * If there are no cached discussions or the new params differ from the\n   * old ones, update params and refresh the discussion list from the database.\n   */\n  refreshParams(newParams) {\n    if (!this.hasDiscussions() || Object.keys(newParams).some((key) => this.getParams()[key] !== newParams[key])) {\n      this.params = newParams;\n\n      this.refresh();\n    }\n  }\n\n  /**\n   * Clear and reload the discussion list. Passing the option `deferClear: true`\n   * will clear discussions only after new data has been received.\n   * This can be used to refresh discussions without loading animations.\n   */\n  refresh({ deferClear = false } = {}) {\n    this.loading = true;\n\n    if (!deferClear) {\n      this.clear();\n    }\n\n    return this.loadResults().then(\n      (results) => {\n        // This ensures that any changes made while waiting on this request\n        // are ignored. Otherwise, we could get duplicate discussions.\n        // We don't use `this.clear()` to avoid an unnecessary redraw.\n        this.discussions = [];\n        this.parseResults(results);\n      },\n      () => {\n        this.loading = false;\n        m.redraw();\n      }\n    );\n  }\n\n  /**\n   * Load a new page of discussion results.\n   *\n   * @param offset The index to start the page at.\n   */\n  loadResults(offset) {\n    const preloadedDiscussions = this.app.preloadedApiDocument();\n\n    if (preloadedDiscussions) {\n      return Promise.resolve(preloadedDiscussions);\n    }\n\n    const params = this.requestParams();\n    params.page = { offset };\n    params.include = params.include.join(',');\n\n    return this.app.store.find('discussions', params);\n  }\n\n  /**\n   * Load the next page of discussion results.\n   */\n  loadMore() {\n    this.loading = true;\n\n    this.loadResults(this.discussions.length).then(this.parseResults.bind(this));\n  }\n\n  /**\n   * Parse results and append them to the discussion list.\n   */\n  parseResults(results) {\n    this.discussions.push(...results);\n\n    this.loading = false;\n    this.moreResults = !!results.payload.links && !!results.payload.links.next;\n\n    m.redraw();\n\n    return results;\n  }\n\n  /**\n   * Remove a discussion from the list if it is present.\n   */\n  removeDiscussion(discussion) {\n    const index = this.discussions.indexOf(discussion);\n\n    if (index !== -1) {\n      this.discussions.splice(index, 1);\n    }\n\n    m.redraw();\n  }\n\n  /**\n   * Add a discussion to the top of the list.\n   */\n  addDiscussion(discussion) {\n    this.discussions.unshift(discussion);\n    m.redraw();\n  }\n\n  /**\n   * Are there discussions stored in the discussion list state?\n   */\n  hasDiscussions() {\n    return this.discussions.length > 0;\n  }\n\n  /**\n   * Are discussions currently being loaded?\n   */\n  isLoading() {\n    return this.loading;\n  }\n\n  /**\n   * In the last request, has the user searched for a discussion?\n   */\n  isSearchResults() {\n    return !!this.params.q;\n  }\n\n  /**\n   * Have the search results come up empty?\n   */\n  empty() {\n    return !this.hasDiscussions() && !this.isLoading();\n  }\n}\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nexport default isObject;\n","import root from './_root.js';\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\nexport default now;\n","/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nexport default trimmedEndIndex;\n","import trimmedEndIndex from './_trimmedEndIndex.js';\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nexport default baseTrim;\n","import baseTrim from './_baseTrim.js';\nimport isObject from './isObject.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nexport default toNumber;\n","import isObject from './isObject.js';\nimport now from './now.js';\nimport toNumber from './toNumber.js';\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        timeWaiting = wait - timeSinceLastCall;\n\n    return maxing\n      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n      : timeWaiting;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        clearTimeout(timerId);\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\nexport default debounce;\n","import debounce from './debounce.js';\nimport isObject from './isObject.js';\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a throttled function that only invokes `func` at most once per\n * every `wait` milliseconds. The throttled function comes with a `cancel`\n * method to cancel delayed `func` invocations and a `flush` method to\n * immediately invoke them. Provide `options` to indicate whether `func`\n * should be invoked on the leading and/or trailing edge of the `wait`\n * timeout. The `func` is invoked with the last arguments provided to the\n * throttled function. Subsequent calls to the throttled function return the\n * result of the last `func` invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the throttled function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.throttle` and `_.debounce`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to throttle.\n * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=true]\n *  Specify invoking on the leading edge of the timeout.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new throttled function.\n * @example\n *\n * // Avoid excessively updating the position while scrolling.\n * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n *\n * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n * jQuery(element).on('click', throttled);\n *\n * // Cancel the trailing throttled invocation.\n * jQuery(window).on('popstate', throttled.cancel);\n */\nfunction throttle(func, wait, options) {\n  var leading = true,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  if (isObject(options)) {\n    leading = 'leading' in options ? !!options.leading : leading;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n  return debounce(func, wait, {\n    'leading': leading,\n    'maxWait': wait,\n    'trailing': trailing\n  });\n}\n\nexport default throttle;\n","import { throttle } from 'lodash-es';\nimport anchorScroll from '../../common/utils/anchorScroll';\n\nclass PostStreamState {\n  constructor(discussion, includedPosts = []) {\n    /**\n     * The discussion to display the post stream for.\n     *\n     * @type {Discussion}\n     */\n    this.discussion = discussion;\n\n    /**\n     * Whether or not the infinite-scrolling auto-load functionality is\n     * disabled.\n     *\n     * @type {Boolean}\n     */\n    this.paused = false;\n\n    this.loadPageTimeouts = {};\n    this.pagesLoading = 0;\n\n    this.index = 0;\n    this.number = 1;\n\n    /**\n     * The number of posts that are currently visible in the viewport.\n     *\n     * @type {Number}\n     */\n    this.visible = 1;\n\n    /**\n     * The description to render on the scrubber.\n     *\n     * @type {String}\n     */\n    this.description = '';\n\n    /**\n     * When the page is scrolled, goToIndex is called, or the page is loaded,\n     * various listeners result in the scrubber being updated with a new\n     * position and values. However, if goToNumber is called, the scrubber\n     * will not be updated. Accordingly, we add logic to the scrubber's\n     * onupdate to update itself, but only when needed, as indicated by this\n     * property.\n     *\n     * @type {Boolean}\n     */\n    this.forceUpdateScrubber = false;\n\n    this.loadNext = throttle(this._loadNext, 300);\n    this.loadPrevious = throttle(this._loadPrevious, 300);\n\n    this.show(includedPosts);\n  }\n\n  /**\n   * Update the stream so that it loads and includes the latest posts in the\n   * discussion, if the end is being viewed.\n   *\n   * @public\n   */\n  update() {\n    if (!this.viewingEnd()) return Promise.resolve();\n\n    this.visibleEnd = this.count();\n\n    return this.loadRange(this.visibleStart, this.visibleEnd);\n  }\n\n  /**\n   * Load and scroll up to the first post in the discussion.\n   *\n   * @return {Promise}\n   */\n  goToFirst() {\n    return this.goToIndex(0);\n  }\n\n  /**\n   * Load and scroll down to the last post in the discussion.\n   *\n   * @return {Promise}\n   */\n  goToLast() {\n    return this.goToIndex(this.count() - 1, true);\n  }\n\n  /**\n   * Load and scroll to a post with a certain number.\n   *\n   * @param {number|String} number The post number to go to. If 'reply', go to\n   *     the last post and scroll the reply preview into view.\n   * @param {Boolean} noAnimation\n   * @return {Promise}\n   */\n  goToNumber(number, noAnimation = false) {\n    // If we want to go to the reply preview, then we will go to the end of the\n    // discussion and then scroll to the very bottom of the page.\n    if (number === 'reply') {\n      const resultPromise = this.goToLast();\n      this.targetPost.reply = true;\n      return resultPromise;\n    }\n\n    this.paused = true;\n\n    this.loadPromise = this.loadNearNumber(number);\n\n    this.needsScroll = true;\n    this.targetPost = { number };\n    this.animateScroll = !noAnimation;\n    this.number = number;\n\n    // In this case, the redraw is only called after the response has been loaded\n    // because we need to know the indices of the post range before we can\n    // start scrolling to items. Calling redraw early causes issues.\n    // Since this is only used for external navigation to the post stream, the delay\n    // before the stream is moved is not an issue.\n    return this.loadPromise.then(() => m.redraw());\n  }\n\n  /**\n   * Load and scroll to a certain index within the discussion.\n   *\n   * @param {number} index\n   * @param {Boolean} noAnimation\n   * @return {Promise}\n   */\n  goToIndex(index, noAnimation = false) {\n    this.paused = true;\n\n    this.loadPromise = this.loadNearIndex(index);\n\n    this.needsScroll = true;\n    this.targetPost = { index };\n    this.animateScroll = !noAnimation;\n    this.index = index;\n\n    m.redraw();\n\n    return this.loadPromise;\n  }\n\n  /**\n   * Clear the stream and load posts near a certain number. Returns a promise.\n   * If the post with the given number is already loaded, the promise will be\n   * resolved immediately.\n   *\n   * @param {number} number\n   * @return {Promise}\n   */\n  loadNearNumber(number) {\n    if (this.posts().some((post) => post && Number(post.number()) === Number(number))) {\n      return Promise.resolve();\n    }\n\n    this.reset();\n\n    return app.store\n      .find('posts', {\n        filter: { discussion: this.discussion.id() },\n        page: { near: number },\n      })\n      .then(this.show.bind(this));\n  }\n\n  /**\n   * Clear the stream and load posts near a certain index. A page of posts\n   * surrounding the given index will be loaded. Returns a promise. If the given\n   * index is already loaded, the promise will be resolved immediately.\n   *\n   * @param {number} index\n   * @return {Promise}\n   */\n  loadNearIndex(index) {\n    if (index >= this.visibleStart && index < this.visibleEnd) {\n      return Promise.resolve();\n    }\n\n    const start = this.sanitizeIndex(index - this.constructor.loadCount / 2);\n    const end = start + this.constructor.loadCount;\n\n    this.reset(start, end);\n\n    return this.loadRange(start, end).then(this.show.bind(this));\n  }\n\n  /**\n   * Load the next page of posts.\n   */\n  _loadNext() {\n    const start = this.visibleEnd;\n    const end = (this.visibleEnd = this.sanitizeIndex(this.visibleEnd + this.constructor.loadCount));\n\n    // Unload the posts which are two pages back from the page we're currently\n    // loading.\n    const twoPagesAway = start - this.constructor.loadCount * 2;\n    if (twoPagesAway > this.visibleStart && twoPagesAway >= 0) {\n      this.visibleStart = twoPagesAway + this.constructor.loadCount + 1;\n\n      if (this.loadPageTimeouts[twoPagesAway]) {\n        clearTimeout(this.loadPageTimeouts[twoPagesAway]);\n        this.loadPageTimeouts[twoPagesAway] = null;\n        this.pagesLoading--;\n      }\n    }\n\n    this.loadPage(start, end);\n  }\n\n  /**\n   * Load the previous page of posts.\n   */\n  _loadPrevious() {\n    const end = this.visibleStart;\n    const start = (this.visibleStart = this.sanitizeIndex(this.visibleStart - this.constructor.loadCount));\n\n    // Unload the posts which are two pages back from the page we're currently\n    // loading.\n    const twoPagesAway = start + this.constructor.loadCount * 2;\n    if (twoPagesAway < this.visibleEnd && twoPagesAway <= this.count()) {\n      this.visibleEnd = twoPagesAway;\n\n      if (this.loadPageTimeouts[twoPagesAway]) {\n        clearTimeout(this.loadPageTimeouts[twoPagesAway]);\n        this.loadPageTimeouts[twoPagesAway] = null;\n        this.pagesLoading--;\n      }\n    }\n\n    this.loadPage(start, end, true);\n  }\n\n  /**\n   * Load a page of posts into the stream and redraw.\n   *\n   * @param {number} start\n   * @param {number} end\n   * @param {Boolean} backwards\n   */\n  loadPage(start, end, backwards = false) {\n    this.pagesLoading++;\n\n    const redraw = () => {\n      if (start < this.visibleStart || end > this.visibleEnd) return;\n\n      const anchorIndex = backwards ? this.visibleEnd - 1 : this.visibleStart;\n      anchorScroll(`.PostStream-item[data-index=\"${anchorIndex}\"]`, m.redraw.sync);\n    };\n    redraw();\n\n    this.loadPageTimeouts[start] = setTimeout(\n      () => {\n        this.loadRange(start, end).then(() => {\n          redraw();\n          this.pagesLoading--;\n        });\n        this.loadPageTimeouts[start] = null;\n      },\n      this.pagesLoading - 1 ? 1000 : 0\n    );\n  }\n\n  /**\n   * Load and inject the specified range of posts into the stream, without\n   * clearing it.\n   *\n   * @param {number} start\n   * @param {number} end\n   * @return {Promise}\n   */\n  loadRange(start, end) {\n    const loadIds = [];\n    const loaded = [];\n\n    this.discussion\n      .postIds()\n      .slice(start, end)\n      .forEach((id) => {\n        const post = app.store.getById('posts', id);\n\n        if (post && post.discussion() && typeof post.canEdit() !== 'undefined') {\n          loaded.push(post);\n        } else {\n          loadIds.push(id);\n        }\n      });\n\n    if (loadIds.length) {\n      return app.store.find('posts', loadIds).then((newPosts) => {\n        return loaded.concat(newPosts).sort((a, b) => a.createdAt() - b.createdAt());\n      });\n    }\n\n    return Promise.resolve(loaded);\n  }\n\n  /**\n   * Set up the stream with the given array of posts.\n   *\n   * @param {Post[]} posts\n   */\n  show(posts) {\n    this.visibleStart = posts.length ? this.discussion.postIds().indexOf(posts[0].id()) : 0;\n    this.visibleEnd = this.sanitizeIndex(this.visibleStart + posts.length);\n  }\n\n  /**\n   * Reset the stream so that a specific range of posts is displayed. If a range\n   * is not specified, the first page of posts will be displayed.\n   *\n   * @param {number} [start]\n   * @param {number} [end]\n   */\n  reset(start, end) {\n    this.visibleStart = start || 0;\n    this.visibleEnd = this.sanitizeIndex(end || this.constructor.loadCount);\n  }\n\n  /**\n   * Get the visible page of posts.\n   *\n   * @return {Post[]}\n   */\n  posts() {\n    return this.discussion\n      .postIds()\n      .slice(this.visibleStart, this.visibleEnd)\n      .map((id) => {\n        const post = app.store.getById('posts', id);\n\n        return post && post.discussion() && typeof post.canEdit() !== 'undefined' ? post : null;\n      });\n  }\n\n  /**\n   * Get the total number of posts in the discussion.\n   *\n   * @return {number}\n   */\n  count() {\n    return this.discussion.postIds().length;\n  }\n\n  /**\n   * Check whether or not the scrubber should be disabled, i.e. if all of the\n   * posts are visible in the viewport.\n   *\n   * @return {Boolean}\n   */\n  disabled() {\n    return this.visible >= this.count();\n  }\n\n  /**\n   * Are we currently viewing the end of the discussion?\n   *\n   * @return {boolean}\n   */\n  viewingEnd() {\n    // In some cases, such as if we've stickied a post, an event post\n    // may have been added / removed. This means that `this.visibleEnd`\n    // and`this.count()` will be out of sync by 1 post, but we are still\n    // \"viewing the end\" of the post stream, so we should still reload\n    // all posts up until the last one.\n    return Math.abs(this.count() - this.visibleEnd) <= 1;\n  }\n\n  /**\n   * Make sure that the given index is not outside of the possible range of\n   * indexes in the discussion.\n   *\n   * @param {number} index\n   */\n  sanitizeIndex(index) {\n    return Math.max(0, Math.min(this.count(), Math.floor(index)));\n  }\n}\n\n/**\n * The number of posts to load per page.\n *\n * @type {number}\n */\nPostStreamState.loadCount = 20;\n\nexport default PostStreamState;\n","import DiscussionPage from '../components/DiscussionPage';\nimport Button from '../../common/components/Button';\nimport Separator from '../../common/components/Separator';\nimport RenameDiscussionModal from '../components/RenameDiscussionModal';\nimport ItemList from '../../common/utils/ItemList';\nimport extractText from '../../common/utils/extractText';\n\n/**\n * The `DiscussionControls` utility constructs a list of buttons for a\n * discussion which perform actions on it.\n */\nexport default {\n  /**\n   * Get a list of controls for a discussion.\n   *\n   * @param {Discussion} discussion\n   * @param {*} context The parent component under which the controls menu will\n   *     be displayed.\n   * @return {ItemList}\n   * @public\n   */\n  controls(discussion, context) {\n    const items = new ItemList();\n\n    ['user', 'moderation', 'destructive'].forEach((section) => {\n      const controls = this[section + 'Controls'](discussion, context).toArray();\n      if (controls.length) {\n        controls.forEach((item) => items.add(item.itemName, item));\n        items.add(section + 'Separator', Separator.component());\n      }\n    });\n\n    return items;\n  },\n\n  /**\n   * Get controls for a discussion pertaining to the current user (e.g. reply,\n   * follow).\n   *\n   * @param {Discussion} discussion\n   * @param {*} context The parent component under which the controls menu will\n   *     be displayed.\n   * @return {ItemList}\n   * @protected\n   */\n  userControls(discussion, context) {\n    const items = new ItemList();\n\n    // Only add a reply control if this is the discussion's controls dropdown\n    // for the discussion page itself. We don't want it to show up for\n    // discussions in the discussion list, etc.\n    if (context instanceof DiscussionPage) {\n      items.add(\n        'reply',\n        !app.session.user || discussion.canReply()\n          ? Button.component(\n              {\n                icon: 'fas fa-reply',\n                onclick: () => {\n                  // If the user is not logged in, the promise rejects, and a login modal shows up.\n                  // Since that's already handled, we dont need to show an error message in the console.\n                  return this.replyAction\n                    .bind(discussion)(true, false)\n                    .catch(() => {});\n                },\n              },\n              app.translator.trans(\n                app.session.user ? 'core.forum.discussion_controls.reply_button' : 'core.forum.discussion_controls.log_in_to_reply_button'\n              )\n            )\n          : Button.component(\n              {\n                icon: 'fas fa-reply',\n                className: 'disabled',\n                title: app.translator.trans('core.forum.discussion_controls.cannot_reply_text'),\n              },\n              app.translator.trans('core.forum.discussion_controls.cannot_reply_button')\n            )\n      );\n    }\n\n    return items;\n  },\n\n  /**\n   * Get controls for a discussion pertaining to moderation (e.g. rename, lock).\n   *\n   * @param {Discussion} discussion\n   * @param {*} context The parent component under which the controls menu will\n   *     be displayed.\n   * @return {ItemList}\n   * @protected\n   */\n  moderationControls(discussion) {\n    const items = new ItemList();\n\n    if (discussion.canRename()) {\n      items.add(\n        'rename',\n        Button.component(\n          {\n            icon: 'fas fa-pencil-alt',\n            onclick: this.renameAction.bind(discussion),\n          },\n          app.translator.trans('core.forum.discussion_controls.rename_button')\n        )\n      );\n    }\n\n    return items;\n  },\n\n  /**\n   * Get controls for a discussion which are destructive (e.g. delete).\n   *\n   * @param {Discussion} discussion\n   * @param {*} context The parent component under which the controls menu will\n   *     be displayed.\n   * @return {ItemList}\n   * @protected\n   */\n  destructiveControls(discussion) {\n    const items = new ItemList();\n\n    if (!discussion.isHidden()) {\n      if (discussion.canHide()) {\n        items.add(\n          'hide',\n          Button.component(\n            {\n              icon: 'far fa-trash-alt',\n              onclick: this.hideAction.bind(discussion),\n            },\n            app.translator.trans('core.forum.discussion_controls.delete_button')\n          )\n        );\n      }\n    } else {\n      if (discussion.canHide()) {\n        items.add(\n          'restore',\n          Button.component(\n            {\n              icon: 'fas fa-reply',\n              onclick: this.restoreAction.bind(discussion),\n            },\n            app.translator.trans('core.forum.discussion_controls.restore_button')\n          )\n        );\n      }\n\n      if (discussion.canDelete()) {\n        items.add(\n          'delete',\n          Button.component(\n            {\n              icon: 'fas fa-times',\n              onclick: this.deleteAction.bind(discussion),\n            },\n            app.translator.trans('core.forum.discussion_controls.delete_forever_button')\n          )\n        );\n      }\n    }\n\n    return items;\n  },\n\n  /**\n   * Open the reply composer for the discussion. A promise will be returned,\n   * which resolves when the composer opens successfully. If the user is not\n   * logged in, they will be prompted. If they don't have permission to\n   * reply, the promise will be rejected.\n   *\n   * @param {Boolean} goToLast Whether or not to scroll down to the last post if\n   *     the discussion is being viewed.\n   * @param {Boolean} forceRefresh Whether or not to force a reload of the\n   *     composer component, even if it is already open for this discussion.\n   * @return {Promise}\n   */\n  replyAction(goToLast, forceRefresh) {\n    const LogInModal = () => import(/* webpackChunkName: \"forum/components/LogInModal\" */ '../components/LogInModal');\n    const ReplyComposer = () => import(/* webpackChunkName: \"forum/components/ReplyComposer\" */ '../components/ReplyComposer');\n\n    return new Promise(async (resolve, reject) => {\n      if (app.session.user) {\n        if (this.canReply()) {\n          if (!app.composer.composingReplyTo(this) || forceRefresh) {\n            await app.composer.load(ReplyComposer, {\n              user: app.session.user,\n              discussion: this,\n            });\n          }\n          console.log('hi');\n          app.composer.show();\n\n          if (goToLast && app.viewingDiscussion(this) && !app.composer.isFullScreen()) {\n            app.current.get('stream').goToNumber('reply');\n          }\n\n          return resolve(app.composer);\n        } else {\n          return reject();\n        }\n      }\n\n      app.modal.show(LogInModal);\n\n      return reject();\n    });\n  },\n\n  /**\n   * Hide a discussion.\n   *\n   * @return {Promise}\n   */\n  hideAction() {\n    this.pushAttributes({ hiddenAt: new Date(), hiddenUser: app.session.user });\n\n    return this.save({ isHidden: true });\n  },\n\n  /**\n   * Restore a discussion.\n   *\n   * @return {Promise}\n   */\n  restoreAction() {\n    this.pushAttributes({ hiddenAt: null, hiddenUser: null });\n\n    return this.save({ isHidden: false });\n  },\n\n  /**\n   * Delete the discussion after confirming with the user.\n   *\n   * @return {Promise}\n   */\n  deleteAction() {\n    if (confirm(extractText(app.translator.trans('core.forum.discussion_controls.delete_confirmation')))) {\n      // If we're currently viewing the discussion that was deleted, go back\n      // to the previous page.\n      if (app.viewingDiscussion(this)) {\n        app.history.back();\n      }\n\n      return this.delete().then(() => app.discussions.removeDiscussion(this));\n    }\n  },\n\n  /**\n   * Rename the discussion.\n   *\n   * @return {Promise}\n   */\n  renameAction() {\n    return app.modal.show(RenameDiscussionModal, {\n      currentTitle: this.title(),\n      discussion: this,\n    });\n  },\n};\n","import EditPostComposer from '../components/EditPostComposer';\nimport Button from '../../common/components/Button';\nimport Separator from '../../common/components/Separator';\nimport ItemList from '../../common/utils/ItemList';\nimport extractText from '../../common/utils/extractText';\n\n/**\n * The `PostControls` utility constructs a list of buttons for a post which\n * perform actions on it.\n */\nexport default {\n  /**\n   * Get a list of controls for a post.\n   *\n   * @param {Post} post\n   * @param {*} context The parent component under which the controls menu will\n   *     be displayed.\n   * @return {ItemList}\n   * @public\n   */\n  controls(post, context) {\n    const items = new ItemList();\n\n    ['user', 'moderation', 'destructive'].forEach((section) => {\n      const controls = this[section + 'Controls'](post, context).toArray();\n      if (controls.length) {\n        controls.forEach((item) => items.add(item.itemName, item));\n        items.add(section + 'Separator', Separator.component());\n      }\n    });\n\n    return items;\n  },\n\n  /**\n   * Get controls for a post pertaining to the current user (e.g. report).\n   *\n   * @param {Post} post\n   * @param {*} context The parent component under which the controls menu will\n   *     be displayed.\n   * @return {ItemList}\n   * @protected\n   */\n  userControls(post, context) {\n    return new ItemList();\n  },\n\n  /**\n   * Get controls for a post pertaining to moderation (e.g. edit).\n   *\n   * @param {Post} post\n   * @param {*} context The parent component under which the controls menu will\n   *     be displayed.\n   * @return {ItemList}\n   * @protected\n   */\n  moderationControls(post, context) {\n    const items = new ItemList();\n\n    if (post.contentType() === 'comment' && post.canEdit()) {\n      if (!post.isHidden()) {\n        items.add(\n          'edit',\n          Button.component(\n            {\n              icon: 'fas fa-pencil-alt',\n              onclick: this.editAction.bind(post),\n            },\n            app.translator.trans('core.forum.post_controls.edit_button')\n          )\n        );\n      }\n    }\n\n    return items;\n  },\n\n  /**\n   * Get controls for a post that are destructive (e.g. delete).\n   *\n   * @param {Post} post\n   * @param {*} context The parent component under which the controls menu will\n   *     be displayed.\n   * @return {ItemList}\n   * @protected\n   */\n  destructiveControls(post, context) {\n    const items = new ItemList();\n\n    if (post.contentType() === 'comment' && !post.isHidden()) {\n      if (post.canHide()) {\n        items.add(\n          'hide',\n          Button.component(\n            {\n              icon: 'far fa-trash-alt',\n              onclick: this.hideAction.bind(post),\n            },\n            app.translator.trans('core.forum.post_controls.delete_button')\n          )\n        );\n      }\n    } else {\n      if (post.contentType() === 'comment' && post.canHide()) {\n        items.add(\n          'restore',\n          Button.component(\n            {\n              icon: 'fas fa-reply',\n              onclick: this.restoreAction.bind(post),\n            },\n            app.translator.trans('core.forum.post_controls.restore_button')\n          )\n        );\n      }\n      if (post.canDelete()) {\n        items.add(\n          'delete',\n          Button.component(\n            {\n              icon: 'fas fa-times',\n              onclick: this.deleteAction.bind(post, context),\n            },\n            app.translator.trans('core.forum.post_controls.delete_forever_button')\n          )\n        );\n      }\n    }\n\n    return items;\n  },\n\n  /**\n   * Open the composer to edit a post.\n   *\n   * @return {Promise}\n   */\n  editAction() {\n    return new Promise((resolve) => {\n      app.composer.load(EditPostComposer, { post: this });\n      app.composer.show();\n\n      return resolve();\n    });\n  },\n\n  /**\n   * Hide a post.\n   *\n   * @return {Promise}\n   */\n  hideAction() {\n    if (!confirm(extractText(app.translator.trans('core.forum.post_controls.hide_confirmation')))) return;\n    this.pushAttributes({ hiddenAt: new Date(), hiddenUser: app.session.user });\n\n    return this.save({ isHidden: true }).then(() => m.redraw());\n  },\n\n  /**\n   * Restore a post.\n   *\n   * @return {Promise}\n   */\n  restoreAction() {\n    this.pushAttributes({ hiddenAt: null, hiddenUser: null });\n\n    return this.save({ isHidden: false }).then(() => m.redraw());\n  },\n\n  /**\n   * Delete a post.\n   *\n   * @return {Promise}\n   */\n  deleteAction(context) {\n    if (!confirm(extractText(app.translator.trans('core.forum.post_controls.delete_confirmation')))) return;\n    if (context) context.loading = true;\n\n    return this.delete()\n      .then(() => {\n        const discussion = this.discussion();\n\n        discussion.removePost(this.id());\n\n        // If this was the last post in the discussion, then we will assume that\n        // the whole discussion was deleted too.\n        if (!discussion.postIds().length) {\n          app.discussions.removeDiscussion(discussion);\n\n          if (app.viewingDiscussion(discussion)) {\n            app.history.back();\n          }\n        }\n      })\n      .catch(() => {})\n      .then(() => {\n        if (context) context.loading = false;\n        m.redraw();\n      });\n  },\n};\n","import Button from '../../common/components/Button';\nimport Separator from '../../common/components/Separator';\nimport UserPage from '../components/UserPage';\nimport ItemList from '../../common/utils/ItemList';\n\n/**\n * The `UserControls` utility constructs a list of buttons for a user which\n * perform actions on it.\n */\nexport default {\n  /**\n   * Get a list of controls for a user.\n   *\n   * @param {User} user\n   * @param {*} context The parent component under which the controls menu will\n   *     be displayed.\n   * @return {ItemList}\n   * @public\n   */\n  controls(user, context) {\n    const items = new ItemList();\n\n    ['user', 'moderation', 'destructive'].forEach((section) => {\n      const controls = this[section + 'Controls'](user, context).toArray();\n      if (controls.length) {\n        controls.forEach((item) => items.add(item.itemName, item));\n        items.add(section + 'Separator', <Separator />);\n      }\n    });\n\n    return items;\n  },\n\n  /**\n   * Get controls for a user pertaining to the current user (e.g. poke, follow).\n   *\n   * @param {User} user\n   * @param {*} context The parent component under which the controls menu will\n   *     be displayed.\n   * @return {ItemList}\n   * @protected\n   */\n  userControls() {\n    return new ItemList();\n  },\n\n  /**\n   * Get controls for a user pertaining to moderation (e.g. suspend, edit).\n   *\n   * @param {User} user\n   * @param {*} context The parent component under which the controls menu will\n   *     be displayed.\n   * @return {ItemList}\n   * @protected\n   */\n  moderationControls(user) {\n    const items = new ItemList();\n\n    if (user.canEdit() || user.canEditCredentials() || user.canEditGroups()) {\n      items.add(\n        'edit',\n        <Button icon=\"fas fa-pencil-alt\" onclick={this.editAction.bind(this, user)}>\n          {app.translator.trans('core.forum.user_controls.edit_button')}\n        </Button>\n      );\n    }\n\n    return items;\n  },\n\n  /**\n   * Get controls for a user which are destructive (e.g. delete).\n   *\n   * @param {User} user\n   * @param {*} context The parent component under which the controls menu will\n   *     be displayed.\n   * @return {ItemList}\n   * @protected\n   */\n  destructiveControls(user) {\n    const items = new ItemList();\n\n    if (user.id() !== '1' && user.canDelete()) {\n      items.add(\n        'delete',\n        <Button icon=\"fas fa-times\" onclick={this.deleteAction.bind(this, user)}>\n          {app.translator.trans('core.forum.user_controls.delete_button')}\n        </Button>\n      );\n    }\n\n    return items;\n  },\n\n  /**\n   * Delete the user.\n   *\n   * @param {User} user\n   */\n  deleteAction(user) {\n    if (!confirm(app.translator.trans('core.forum.user_controls.delete_confirmation'))) {\n      return;\n    }\n\n    user\n      .delete()\n      .then(() => {\n        this.showDeletionAlert(user, 'success');\n        if (app.current.matches(UserPage, { user })) {\n          app.history.back();\n        } else {\n          window.location.reload();\n        }\n      })\n      .catch(() => this.showDeletionAlert(user, 'error'));\n  },\n\n  /**\n   * Show deletion alert of user.\n   *\n   * @param {User} user\n   * @param {string} type\n   */\n  showDeletionAlert(user, type) {\n    const { username, email } = user.data.attributes;\n    const message = {\n      success: 'core.forum.user_controls.delete_success_message',\n      error: 'core.forum.user_controls.delete_error_message',\n    }[type];\n\n    app.alerts.show({ type }, app.translator.trans(message, { username, email }));\n  },\n\n  /**\n   * Edit the user.\n   *\n   * @param {User} user\n   */\n  editAction(user) {\n    const EditUserModal = () => import(/* webpackChunkName: \"forum/components/EditUserModal\" */ '../components/EditUserModal');\n\n    app.modal.show(EditUserModal, { user });\n  },\n};\n","/**\n * The `slidable` utility adds touch gestures to an element so that it can be\n * slid away to reveal controls underneath, and then released to activate those\n * controls.\n *\n * It relies on the element having children with particular CSS classes.\n * TODO: document\n *\n * @param {DOMElement} element\n * @return {Object}\n * @property {function} reset Revert the slider to its original position. This\n *     should be called, for example, when a controls dropdown is closed.\n */\nexport default function slidable(element) {\n  const $element = $(element);\n  const threshold = 50;\n\n  let $underneathLeft;\n  let $underneathRight;\n\n  let startX;\n  let startY;\n  let couldBeSliding = false;\n  let isSliding = false;\n  let pos = 0;\n\n  /**\n   * Animate the slider to a new position.\n   *\n   * @param {Integer} newPos\n   * @param {Object} [options]\n   */\n  const animatePos = (newPos, options = {}) => {\n    // Since we can't animate the transform property with jQuery, we'll use a\n    // bit of a workaround. We set up the animation with a step function that\n    // will set the transform property, but then we animate an unused property\n    // (background-position-x) with jQuery.\n    options.duration = options.duration || 'fast';\n    options.step = function (x) {\n      $(this).css('transform', 'translate(' + x + 'px, 0)');\n    };\n\n    $element.find('.Slidable-content').animate({ 'background-position-x': newPos }, options);\n  };\n\n  /**\n   * Revert the slider to its original position.\n   */\n  const reset = () => {\n    animatePos(0, {\n      complete: function () {\n        $element.removeClass('sliding');\n        $underneathLeft.hide();\n        $underneathRight.hide();\n        isSliding = false;\n      },\n    });\n  };\n\n  $element\n    .find('.Slidable-content')\n    .on('touchstart', function (e) {\n      // Update the references to the elements underneath the slider, provided\n      // they're not disabled.\n      $underneathLeft = $element.find('.Slidable-underneath--left:not(.disabled)');\n      $underneathRight = $element.find('.Slidable-underneath--right:not(.disabled)');\n\n      startX = e.originalEvent.targetTouches[0].clientX;\n      startY = e.originalEvent.targetTouches[0].clientY;\n\n      couldBeSliding = true;\n      pos = 0;\n    })\n\n    .on('touchmove', function (e) {\n      const newX = e.originalEvent.targetTouches[0].clientX;\n      const newY = e.originalEvent.targetTouches[0].clientY;\n\n      // Once the user moves their touch in a direction that's more up/down than\n      // left/right, we'll assume they're scrolling the page. But if they do\n      // move in a horizontal direction at first, then we'll lock their touch\n      // into the slider.\n      if (couldBeSliding && Math.abs(newX - startX) > Math.abs(newY - startY)) {\n        isSliding = true;\n      }\n      couldBeSliding = false;\n\n      if (isSliding) {\n        pos = newX - startX;\n\n        // If there are controls underneath the either side, then we'll show/hide\n        // them depending on the slider's position. We also make the controls\n        // icon get a bit bigger the further they slide.\n        const toggle = ($underneath, side) => {\n          if ($underneath.length) {\n            const active = side === 'left' ? pos > 0 : pos < 0;\n\n            if (active && $underneath.hasClass('Slidable-underneath--elastic')) {\n              pos -= pos * 0.5;\n            }\n            $underneath.toggle(active);\n\n            const scale = Math.max(0, Math.min(1, (Math.abs(pos) - 25) / threshold));\n            $underneath.find('.icon').css('transform', 'scale(' + scale + ')');\n          } else {\n            pos = Math[side === 'left' ? 'min' : 'max'](0, pos);\n          }\n        };\n\n        toggle($underneathLeft, 'left');\n        toggle($underneathRight, 'right');\n\n        $(this).css('transform', 'translate(' + pos + 'px, 0)');\n        $(this).css('background-position-x', pos + 'px');\n\n        $element.toggleClass('sliding', !!pos);\n\n        e.preventDefault();\n      }\n    })\n\n    .on('touchend', function () {\n      // If the user releases the touch and the slider is past the threshold\n      // position on either side, then we will activate the control for that\n      // side. We will also animate the slider's position all the way to the\n      // other side, or back to its original position, depending on whether or\n      // not the side is 'elastic'.\n      const activate = ($underneath) => {\n        $underneath.click();\n\n        if ($underneath.hasClass('Slidable-underneath--elastic')) {\n          reset();\n        } else {\n          animatePos((pos > 0 ? 1 : -1) * $element.width());\n        }\n      };\n\n      if ($underneathRight.length && pos < -threshold) {\n        activate($underneathRight);\n      } else if ($underneathLeft.length && pos > threshold) {\n        activate($underneathLeft);\n      } else {\n        reset();\n      }\n\n      couldBeSliding = false;\n      isSliding = false;\n    });\n\n  return { reset };\n}\n","/*!\r\n * Color Thief v2.0\r\n * by Lokesh Dhakar - http://www.lokeshdhakar.com\r\n *\r\n * Thanks\r\n * ------\r\n * Nick Rabinowitz - For creating quantize.js.\r\n * John Schulz - For clean up and optimization. @JFSIII\r\n * Nathan Spady - For adding drag and drop support to the demo page.\r\n *\r\n * License\r\n * -------\r\n * Copyright 2011, 2015 Lokesh Dhakar\r\n * Released under the MIT license\r\n * https://raw.githubusercontent.com/lokesh/color-thief/master/LICENSE\r\n *\r\n */\r\nvar CanvasImage=function(a){this.canvas=document.createElement(\"canvas\"),this.context=this.canvas.getContext(\"2d\"),document.body.appendChild(this.canvas),this.width=this.canvas.width=a.width,this.height=this.canvas.height=a.height,this.context.drawImage(a,0,0,this.width,this.height)};CanvasImage.prototype.clear=function(){this.context.clearRect(0,0,this.width,this.height)},CanvasImage.prototype.update=function(a){this.context.putImageData(a,0,0)},CanvasImage.prototype.getPixelCount=function(){return this.width*this.height},CanvasImage.prototype.getImageData=function(){return this.context.getImageData(0,0,this.width,this.height)},CanvasImage.prototype.removeCanvas=function(){this.canvas.parentNode.removeChild(this.canvas)};var ColorThief=function(){};/*!\r\n * quantize.js Copyright 2008 Nick Rabinowitz.\r\n * Licensed under the MIT license: http://www.opensource.org/licenses/mit-license.php\r\n */\r\n/*!\r\n * Block below copied from Protovis: http://mbostock.github.com/protovis/\r\n * Copyright 2010 Stanford Visualization Group\r\n * Licensed under the BSD License: http://www.opensource.org/licenses/bsd-license.php\r\n */\r\nif(ColorThief.prototype.getColor=function(a,b){var c=this.getPalette(a,5,b),d=c[0];return d},ColorThief.prototype.getPalette=function(a,b,c){\"undefined\"==typeof b&&(b=10),(\"undefined\"==typeof c||1>c)&&(c=10);for(var d,e,f,g,h,i=new CanvasImage(a),j=i.getImageData(),k=j.data,l=i.getPixelCount(),m=[],n=0;l>n;n+=c)d=4*n,e=k[d+0],f=k[d+1],g=k[d+2],h=k[d+3],h>=125&&(e>250&&f>250&&g>250||m.push([e,f,g]));var o=MMCQ.quantize(m,b),p=o?o.palette():null;return i.removeCanvas(),p},!pv)var pv={map:function(a,b){var c={};return b?a.map(function(a,d){return c.index=d,b.call(c,a)}):a.slice()},naturalOrder:function(a,b){return b>a?-1:a>b?1:0},sum:function(a,b){var c={};return a.reduce(b?function(a,d,e){return c.index=e,a+b.call(c,d)}:function(a,b){return a+b},0)},max:function(a,b){return Math.max.apply(null,b?pv.map(a,b):a)}};var MMCQ=function(){function a(a,b,c){return(a<<2*i)+(b<<i)+c}function b(a){function b(){c.sort(a),d=!0}var c=[],d=!1;return{push:function(a){c.push(a),d=!1},peek:function(a){return d||b(),void 0===a&&(a=c.length-1),c[a]},pop:function(){return d||b(),c.pop()},size:function(){return c.length},map:function(a){return c.map(a)},debug:function(){return d||b(),c}}}function c(a,b,c,d,e,f,g){var h=this;h.r1=a,h.r2=b,h.g1=c,h.g2=d,h.b1=e,h.b2=f,h.histo=g}function d(){this.vboxes=new b(function(a,b){return pv.naturalOrder(a.vbox.count()*a.vbox.volume(),b.vbox.count()*b.vbox.volume())})}function e(b){var c,d,e,f,g=1<<3*i,h=new Array(g);return b.forEach(function(b){d=b[0]>>j,e=b[1]>>j,f=b[2]>>j,c=a(d,e,f),h[c]=(h[c]||0)+1}),h}function f(a,b){var d,e,f,g=1e6,h=0,i=1e6,k=0,l=1e6,m=0;return a.forEach(function(a){d=a[0]>>j,e=a[1]>>j,f=a[2]>>j,g>d?g=d:d>h&&(h=d),i>e?i=e:e>k&&(k=e),l>f?l=f:f>m&&(m=f)}),new c(g,h,i,k,l,m,b)}function g(b,c){function d(a){var b,d,e,f,g,h=a+\"1\",j=a+\"2\",k=0;for(i=c[h];i<=c[j];i++)if(o[i]>n/2){for(e=c.copy(),f=c.copy(),b=i-c[h],d=c[j]-i,g=d>=b?Math.min(c[j]-1,~~(i+d/2)):Math.max(c[h],~~(i-1-b/2));!o[g];)g++;for(k=p[g];!k&&o[g-1];)k=p[--g];return e[j]=g,f[h]=e[j]+1,[e,f]}}if(c.count()){var e=c.r2-c.r1+1,f=c.g2-c.g1+1,g=c.b2-c.b1+1,h=pv.max([e,f,g]);if(1==c.count())return[c.copy()];var i,j,k,l,m,n=0,o=[],p=[];if(h==e)for(i=c.r1;i<=c.r2;i++){for(l=0,j=c.g1;j<=c.g2;j++)for(k=c.b1;k<=c.b2;k++)m=a(i,j,k),l+=b[m]||0;n+=l,o[i]=n}else if(h==f)for(i=c.g1;i<=c.g2;i++){for(l=0,j=c.r1;j<=c.r2;j++)for(k=c.b1;k<=c.b2;k++)m=a(j,i,k),l+=b[m]||0;n+=l,o[i]=n}else for(i=c.b1;i<=c.b2;i++){for(l=0,j=c.r1;j<=c.r2;j++)for(k=c.g1;k<=c.g2;k++)m=a(j,k,i),l+=b[m]||0;n+=l,o[i]=n}return o.forEach(function(a,b){p[b]=n-a}),d(h==e?\"r\":h==f?\"g\":\"b\")}}function h(a,c){function h(a,b){for(var c,d=1,e=0;k>e;)if(c=a.pop(),c.count()){var f=g(i,c),h=f[0],j=f[1];if(!h)return;if(a.push(h),j&&(a.push(j),d++),d>=b)return;if(e++>k)return}else a.push(c),e++}if(!a.length||2>c||c>256)return!1;var i=e(a),j=0;i.forEach(function(){j++});var m=f(a,i),n=new b(function(a,b){return pv.naturalOrder(a.count(),b.count())});n.push(m),h(n,l*c);for(var o=new b(function(a,b){return pv.naturalOrder(a.count()*a.volume(),b.count()*b.volume())});n.size();)o.push(n.pop());h(o,c-o.size());for(var p=new d;o.size();)p.push(o.pop());return p}var i=5,j=8-i,k=1e3,l=.75;return c.prototype={volume:function(a){var b=this;return(!b._volume||a)&&(b._volume=(b.r2-b.r1+1)*(b.g2-b.g1+1)*(b.b2-b.b1+1)),b._volume},count:function(b){var c=this,d=c.histo;if(!c._count_set||b){var e,f,g,h=0;for(e=c.r1;e<=c.r2;e++)for(f=c.g1;f<=c.g2;f++)for(g=c.b1;g<=c.b2;g++)index=a(e,f,g),h+=d[index]||0;c._count=h,c._count_set=!0}return c._count},copy:function(){var a=this;return new c(a.r1,a.r2,a.g1,a.g2,a.b1,a.b2,a.histo)},avg:function(b){var c=this,d=c.histo;if(!c._avg||b){var e,f,g,h,j,k=0,l=1<<8-i,m=0,n=0,o=0;for(f=c.r1;f<=c.r2;f++)for(g=c.g1;g<=c.g2;g++)for(h=c.b1;h<=c.b2;h++)j=a(f,g,h),e=d[j]||0,k+=e,m+=e*(f+.5)*l,n+=e*(g+.5)*l,o+=e*(h+.5)*l;k?c._avg=[~~(m/k),~~(n/k),~~(o/k)]:c._avg=[~~(l*(c.r1+c.r2+1)/2),~~(l*(c.g1+c.g2+1)/2),~~(l*(c.b1+c.b2+1)/2)]}return c._avg},contains:function(a){var b=this,c=a[0]>>j;return gval=a[1]>>j,bval=a[2]>>j,c>=b.r1&&c<=b.r2&&gval>=b.g1&&gval<=b.g2&&bval>=b.b1&&bval<=b.b2}},d.prototype={push:function(a){this.vboxes.push({vbox:a,color:a.avg()})},palette:function(){return this.vboxes.map(function(a){return a.color})},size:function(){return this.vboxes.size()},map:function(a){for(var b=this.vboxes,c=0;c<b.size();c++)if(b.peek(c).vbox.contains(a))return b.peek(c).color;return this.nearest(a)},nearest:function(a){for(var b,c,d,e=this.vboxes,f=0;f<e.size();f++)c=Math.sqrt(Math.pow(a[0]-e.peek(f).color[0],2)+Math.pow(a[1]-e.peek(f).color[1],2)+Math.pow(a[2]-e.peek(f).color[2],2)),(b>c||void 0===b)&&(b=c,d=e.peek(f).color);return d},forcebw:function(){var a=this.vboxes;a.sort(function(a,b){return pv.naturalOrder(pv.sum(a.color),pv.sum(b.color))});var b=a[0].color;b[0]<5&&b[1]<5&&b[2]<5&&(a[0].color=[0,0,0]);var c=a.length-1,d=a[c].color;d[0]>251&&d[1]>251&&d[2]>251&&(a[c].color=[255,255,255])}},{quantize:h}}();\r\nmodule.exports = ColorThief;\r\n","var ___EXPOSE_LOADER_IMPORT___ = require(\"-!./color-thief.min.js\");\nvar ___EXPOSE_LOADER_GET_GLOBAL_THIS___ = require(\"../../expose-loader/dist/runtime/getGlobalThis.js\");\nvar ___EXPOSE_LOADER_GLOBAL_THIS___ = ___EXPOSE_LOADER_GET_GLOBAL_THIS___;\nif (typeof ___EXPOSE_LOADER_GLOBAL_THIS___[\"ColorThief\"] === 'undefined') ___EXPOSE_LOADER_GLOBAL_THIS___[\"ColorThief\"] = ___EXPOSE_LOADER_IMPORT___;\nmodule.exports = ___EXPOSE_LOADER_IMPORT___;\n","var ___EXPOSE_LOADER_IMPORT___ = require(\"-!./punycode.es6.js\");\nvar ___EXPOSE_LOADER_GET_GLOBAL_THIS___ = require(\"../expose-loader/dist/runtime/getGlobalThis.js\");\nvar ___EXPOSE_LOADER_GLOBAL_THIS___ = ___EXPOSE_LOADER_GET_GLOBAL_THIS___;\nif (typeof ___EXPOSE_LOADER_GLOBAL_THIS___[\"punycode\"] === 'undefined') ___EXPOSE_LOADER_GLOBAL_THIS___[\"punycode\"] = ___EXPOSE_LOADER_IMPORT___;\nmodule.exports = ___EXPOSE_LOADER_IMPORT___;\n","import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nexport default isSymbol;\n","'use strict';\n\n/** Highest positive signed 32-bit float value */\nconst maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1\n\n/** Bootstring parameters */\nconst base = 36;\nconst tMin = 1;\nconst tMax = 26;\nconst skew = 38;\nconst damp = 700;\nconst initialBias = 72;\nconst initialN = 128; // 0x80\nconst delimiter = '-'; // '\\x2D'\n\n/** Regular expressions */\nconst regexPunycode = /^xn--/;\nconst regexNonASCII = /[^\\0-\\x7E]/; // non-ASCII chars\nconst regexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g; // RFC 3490 separators\n\n/** Error messages */\nconst errors = {\n\t'overflow': 'Overflow: input needs wider integers to process',\n\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t'invalid-input': 'Invalid input'\n};\n\n/** Convenience shortcuts */\nconst baseMinusTMin = base - tMin;\nconst floor = Math.floor;\nconst stringFromCharCode = String.fromCharCode;\n\n/*--------------------------------------------------------------------------*/\n\n/**\n * A generic error utility function.\n * @private\n * @param {String} type The error type.\n * @returns {Error} Throws a `RangeError` with the applicable error message.\n */\nfunction error(type) {\n\tthrow new RangeError(errors[type]);\n}\n\n/**\n * A generic `Array#map` utility function.\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} callback The function that gets called for every array\n * item.\n * @returns {Array} A new array of values returned by the callback function.\n */\nfunction map(array, fn) {\n\tconst result = [];\n\tlet length = array.length;\n\twhile (length--) {\n\t\tresult[length] = fn(array[length]);\n\t}\n\treturn result;\n}\n\n/**\n * A simple `Array#map`-like wrapper to work with domain name strings or email\n * addresses.\n * @private\n * @param {String} domain The domain name or email address.\n * @param {Function} callback The function that gets called for every\n * character.\n * @returns {Array} A new string of characters returned by the callback\n * function.\n */\nfunction mapDomain(string, fn) {\n\tconst parts = string.split('@');\n\tlet result = '';\n\tif (parts.length > 1) {\n\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t// the local part (i.e. everything up to `@`) intact.\n\t\tresult = parts[0] + '@';\n\t\tstring = parts[1];\n\t}\n\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\tstring = string.replace(regexSeparators, '\\x2E');\n\tconst labels = string.split('.');\n\tconst encoded = map(labels, fn).join('.');\n\treturn result + encoded;\n}\n\n/**\n * Creates an array containing the numeric code points of each Unicode\n * character in the string. While JavaScript uses UCS-2 internally,\n * this function will convert a pair of surrogate halves (each of which\n * UCS-2 exposes as separate characters) into a single code point,\n * matching UTF-16.\n * @see `punycode.ucs2.encode`\n * @see <https://mathiasbynens.be/notes/javascript-encoding>\n * @memberOf punycode.ucs2\n * @name decode\n * @param {String} string The Unicode input string (UCS-2).\n * @returns {Array} The new array of code points.\n */\nfunction ucs2decode(string) {\n\tconst output = [];\n\tlet counter = 0;\n\tconst length = string.length;\n\twhile (counter < length) {\n\t\tconst value = string.charCodeAt(counter++);\n\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t// It's a high surrogate, and there is a next character.\n\t\t\tconst extra = string.charCodeAt(counter++);\n\t\t\tif ((extra & 0xFC00) == 0xDC00) { // Low surrogate.\n\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t} else {\n\t\t\t\t// It's an unmatched surrogate; only append this code unit, in case the\n\t\t\t\t// next code unit is the high surrogate of a surrogate pair.\n\t\t\t\toutput.push(value);\n\t\t\t\tcounter--;\n\t\t\t}\n\t\t} else {\n\t\t\toutput.push(value);\n\t\t}\n\t}\n\treturn output;\n}\n\n/**\n * Creates a string based on an array of numeric code points.\n * @see `punycode.ucs2.decode`\n * @memberOf punycode.ucs2\n * @name encode\n * @param {Array} codePoints The array of numeric code points.\n * @returns {String} The new Unicode string (UCS-2).\n */\nconst ucs2encode = array => String.fromCodePoint(...array);\n\n/**\n * Converts a basic code point into a digit/integer.\n * @see `digitToBasic()`\n * @private\n * @param {Number} codePoint The basic numeric code point value.\n * @returns {Number} The numeric value of a basic code point (for use in\n * representing integers) in the range `0` to `base - 1`, or `base` if\n * the code point does not represent a value.\n */\nconst basicToDigit = function(codePoint) {\n\tif (codePoint - 0x30 < 0x0A) {\n\t\treturn codePoint - 0x16;\n\t}\n\tif (codePoint - 0x41 < 0x1A) {\n\t\treturn codePoint - 0x41;\n\t}\n\tif (codePoint - 0x61 < 0x1A) {\n\t\treturn codePoint - 0x61;\n\t}\n\treturn base;\n};\n\n/**\n * Converts a digit/integer into a basic code point.\n * @see `basicToDigit()`\n * @private\n * @param {Number} digit The numeric value of a basic code point.\n * @returns {Number} The basic code point whose value (when used for\n * representing integers) is `digit`, which needs to be in the range\n * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n * used; else, the lowercase form is used. The behavior is undefined\n * if `flag` is non-zero and `digit` has no uppercase form.\n */\nconst digitToBasic = function(digit, flag) {\n\t//  0..25 map to ASCII a..z or A..Z\n\t// 26..35 map to ASCII 0..9\n\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n};\n\n/**\n * Bias adaptation function as per section 3.4 of RFC 3492.\n * https://tools.ietf.org/html/rfc3492#section-3.4\n * @private\n */\nconst adapt = function(delta, numPoints, firstTime) {\n\tlet k = 0;\n\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\tdelta += floor(delta / numPoints);\n\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\tdelta = floor(delta / baseMinusTMin);\n\t}\n\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n};\n\n/**\n * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n * symbols.\n * @memberOf punycode\n * @param {String} input The Punycode string of ASCII-only symbols.\n * @returns {String} The resulting string of Unicode symbols.\n */\nconst decode = function(input) {\n\t// Don't use UCS-2.\n\tconst output = [];\n\tconst inputLength = input.length;\n\tlet i = 0;\n\tlet n = initialN;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points: let `basic` be the number of input code\n\t// points before the last delimiter, or `0` if there is none, then copy\n\t// the first basic code points to the output.\n\n\tlet basic = input.lastIndexOf(delimiter);\n\tif (basic < 0) {\n\t\tbasic = 0;\n\t}\n\n\tfor (let j = 0; j < basic; ++j) {\n\t\t// if it's not a basic code point\n\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\terror('not-basic');\n\t\t}\n\t\toutput.push(input.charCodeAt(j));\n\t}\n\n\t// Main decoding loop: start just after the last delimiter if any basic code\n\t// points were copied; start at the beginning otherwise.\n\n\tfor (let index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t// `index` is the index of the next character to be consumed.\n\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t// which gets added to `i`. The overflow checking is easier\n\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t// value at the end to obtain `delta`.\n\t\tlet oldi = i;\n\t\tfor (let w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\tif (index >= inputLength) {\n\t\t\t\terror('invalid-input');\n\t\t\t}\n\n\t\t\tconst digit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\ti += digit * w;\n\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\tif (digit < t) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tconst baseMinusT = base - t;\n\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tw *= baseMinusT;\n\n\t\t}\n\n\t\tconst out = output.length + 1;\n\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t// incrementing `n` each time, so we'll fix that now:\n\t\tif (floor(i / out) > maxInt - n) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tn += floor(i / out);\n\t\ti %= out;\n\n\t\t// Insert `n` at position `i` of the output.\n\t\toutput.splice(i++, 0, n);\n\n\t}\n\n\treturn String.fromCodePoint(...output);\n};\n\n/**\n * Converts a string of Unicode symbols (e.g. a domain name label) to a\n * Punycode string of ASCII-only symbols.\n * @memberOf punycode\n * @param {String} input The string of Unicode symbols.\n * @returns {String} The resulting Punycode string of ASCII-only symbols.\n */\nconst encode = function(input) {\n\tconst output = [];\n\n\t// Convert the input in UCS-2 to an array of Unicode code points.\n\tinput = ucs2decode(input);\n\n\t// Cache the length.\n\tlet inputLength = input.length;\n\n\t// Initialize the state.\n\tlet n = initialN;\n\tlet delta = 0;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points.\n\tfor (const currentValue of input) {\n\t\tif (currentValue < 0x80) {\n\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t}\n\t}\n\n\tlet basicLength = output.length;\n\tlet handledCPCount = basicLength;\n\n\t// `handledCPCount` is the number of code points that have been handled;\n\t// `basicLength` is the number of basic code points.\n\n\t// Finish the basic string with a delimiter unless it's empty.\n\tif (basicLength) {\n\t\toutput.push(delimiter);\n\t}\n\n\t// Main encoding loop:\n\twhile (handledCPCount < inputLength) {\n\n\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t// larger one:\n\t\tlet m = maxInt;\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\tm = currentValue;\n\t\t\t}\n\t\t}\n\n\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t// but guard against overflow.\n\t\tconst handledCPCountPlusOne = handledCPCount + 1;\n\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\tn = m;\n\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\t\t\tif (currentValue == n) {\n\t\t\t\t// Represent delta as a generalized variable-length integer.\n\t\t\t\tlet q = delta;\n\t\t\t\tfor (let k = base; /* no condition */; k += base) {\n\t\t\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tconst qMinusT = q - t;\n\t\t\t\t\tconst baseMinusT = base - t;\n\t\t\t\t\toutput.push(\n\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t);\n\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t}\n\n\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\tdelta = 0;\n\t\t\t\t++handledCPCount;\n\t\t\t}\n\t\t}\n\n\t\t++delta;\n\t\t++n;\n\n\t}\n\treturn output.join('');\n};\n\n/**\n * Converts a Punycode string representing a domain name or an email address\n * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n * it doesn't matter if you call it on a string that has already been\n * converted to Unicode.\n * @memberOf punycode\n * @param {String} input The Punycoded domain name or email address to\n * convert to Unicode.\n * @returns {String} The Unicode representation of the given Punycode\n * string.\n */\nconst toUnicode = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexPunycode.test(string)\n\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t: string;\n\t});\n};\n\n/**\n * Converts a Unicode string representing a domain name or an email address to\n * Punycode. Only the non-ASCII parts of the domain name will be converted,\n * i.e. it doesn't matter if you call it with a domain that's already in\n * ASCII.\n * @memberOf punycode\n * @param {String} input The domain name or email address to convert, as a\n * Unicode string.\n * @returns {String} The Punycode representation of the given domain name or\n * email address.\n */\nconst toASCII = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexNonASCII.test(string)\n\t\t\t? 'xn--' + encode(string)\n\t\t\t: string;\n\t});\n};\n\n/*--------------------------------------------------------------------------*/\n\n/** Define the public API */\nconst punycode = {\n\t/**\n\t * A string representing the current Punycode.js version number.\n\t * @memberOf punycode\n\t * @type String\n\t */\n\t'version': '2.1.0',\n\t/**\n\t * An object of methods to convert from JavaScript's internal character\n\t * representation (UCS-2) to Unicode code points, and back.\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode\n\t * @type Object\n\t */\n\t'ucs2': {\n\t\t'decode': ucs2decode,\n\t\t'encode': ucs2encode\n\t},\n\t'decode': decode,\n\t'encode': encode,\n\t'toASCII': toASCII,\n\t'toUnicode': toUnicode\n};\n\nexport { ucs2decode, ucs2encode, decode, encode, toASCII, toUnicode };\nexport default punycode;\n"],"sourceRoot":""}