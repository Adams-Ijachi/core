{"version":3,"sources":["webpack://@flarum/core/./src/common/utils/setRouteWithForcedRefresh.ts","webpack://@flarum/core/./src/forum/utils/History.js","webpack://@flarum/core/./src/forum/utils/Pane.js","webpack://@flarum/core/./src/forum/components/HeaderPrimary.js","webpack://@flarum/core/./src/forum/utils/KeyboardNavigatable.js","webpack://@flarum/core/./src/forum/components/DiscussionsSearchSource.js","webpack://@flarum/core/./src/forum/components/UsersSearchSource.js","webpack://@flarum/core/./src/forum/components/Search.js","webpack://@flarum/core/./src/forum/components/HeaderSecondary.js","webpack://@flarum/core/./src/forum/components/ComposerButton.js","webpack://@flarum/core/./src/forum/states/ComposerState.js","webpack://@flarum/core/./src/forum/components/Composer.js","webpack://@flarum/core/./src/forum/resolvers/DiscussionPageResolver.ts","webpack://@flarum/core/./src/forum/components/NotificationsPage.js","webpack://@flarum/core/./src/forum/utils/alertEmailConfirmation.js","webpack://@flarum/core/./src/forum/states/NotificationListState.js","webpack://@flarum/core/./src/forum/states/SearchState.js","webpack://@flarum/core/./src/forum/states/GlobalSearchState.js","webpack://@flarum/core/./src/forum/utils/isSafariMobile.ts","webpack://@flarum/core/./src/forum/ForumApplication.js","webpack://@flarum/core/./src/forum/routes.js","webpack://@flarum/core/./src/forum/app.ts","webpack://@flarum/core/./src/common/components/Placeholder.js","webpack://@flarum/core/./src/common/helpers/highlight.tsx","webpack://@flarum/core/./src/common/helpers/humanTime.tsx","webpack://@flarum/core/./src/common/utils/SubtreeRetainer.js","webpack://@flarum/core/./src/common/utils/string.ts","webpack://@flarum/core/./src/common/components/ConfirmDocumentUnload.js","webpack://@flarum/core/./src/forum/components/ComposerBody.js","webpack://@flarum/core/./src/common/utils/abbreviateNumber.ts","webpack://@flarum/core/./src/forum/components/TerminalPost.js","webpack://@flarum/core/./src/forum/utils/slidable.js","webpack://@flarum/core/./node_modules/lodash-es/_arrayMap.js","webpack://@flarum/core/./node_modules/lodash-es/_baseToString.js","webpack://@flarum/core/./node_modules/lodash-es/toString.js","webpack://@flarum/core/./node_modules/lodash-es/escapeRegExp.js","webpack://@flarum/core/./src/forum/components/DiscussionListItem.js","webpack://@flarum/core/./src/forum/components/DiscussionList.js","webpack://@flarum/core/./src/forum/components/DiscussionHero.js","webpack://@flarum/core/./src/forum/components/DiscussionListPane.js","webpack://@flarum/core/./src/common/utils/formatNumber.ts","webpack://@flarum/core/./src/forum/components/PostStreamScrubber.js","webpack://@flarum/core/./src/common/components/SplitDropdown.js","webpack://@flarum/core/./node_modules/lodash-es/isObject.js","webpack://@flarum/core/./node_modules/lodash-es/now.js","webpack://@flarum/core/./node_modules/lodash-es/_trimmedEndIndex.js","webpack://@flarum/core/./node_modules/lodash-es/_baseTrim.js","webpack://@flarum/core/./node_modules/lodash-es/toNumber.js","webpack://@flarum/core/./node_modules/lodash-es/debounce.js","webpack://@flarum/core/./node_modules/lodash-es/throttle.js","webpack://@flarum/core/./src/common/utils/anchorScroll.js","webpack://@flarum/core/./src/forum/states/PostStreamState.js","webpack://@flarum/core/./src/forum/components/DiscussionPage.js","webpack://@flarum/core/./src/forum/components/ReplyComposer.js","webpack://@flarum/core/./src/forum/states/DiscussionListState.js","webpack://@flarum/core/./src/forum/utils/DiscussionControls.js","webpack://@flarum/core/./node_modules/color-thief-browser/dist/color-thief.min.js","webpack://@flarum/core/./node_modules/color-thief-browser/dist/color-thief.min-exposed.js","webpack://@flarum/core/./node_modules/punycode/punycode.es6-exposed.js","webpack://@flarum/core/./node_modules/lodash-es/isSymbol.js","webpack://@flarum/core/./node_modules/punycode/punycode.es6.js"],"names":["setRouteWithForcedRefresh","route","params","options","newOptions","state","key","Date","now","m","set","window","flreg","add","History","defaultRoute","this","stack","getCurrent","length","getPrevious","push","name","title","url","get","secondTop","pop","top","canGoBack","back","home","backUrl","splice","Pane","element","pinnedKey","$element","$","pinned","localStorage","getItem","active","showing","render","enable","disable","show","clearTimeout","hideTimeout","hide","onmouseleave","setTimeout","bind","togglePinned","setItem","toggleClass","HeaderPrimary","view","className","listItems","items","toArray","ItemList","Component","KeyboardNavigatable","callbacks","whenCallback","event","onUp","callback","e","preventDefault","onDown","onSelect","onCancel","stopPropagation","onRemove","target","selectionStart","selectionEnd","when","bindTo","on","navigate","keyCallback","which","DiscussionsSearchSource","results","search","query","toLowerCase","filter","q","page","limit","include","app","store","find","then","translator","trans","LinkButton","icon","href","map","discussion","mostRelevantPost","data-index","id","Link","number","highlight","contentPlain","UsersSearchResults","redraw","concat","all","user","username","displayName","some","value","substr","i","arr","lastIndexOf","sort","a","b","localeCompare","children","text","avatar","undefined","Search","oninit","vnode","attrs","hasFocus","sources","loadingSources","index","currentSearch","getInitialSearch","sourceItems","searchLabel","extractText","role","classList","open","getValue","focused","loading","aria-label","type","placeholder","oninput","setValue","onfocus","onblur","LoadingIndicator","size","onclick","clear","source","onupdate","setIndex","getCurrentNumericIndex","maxHeight","innerHeight","querySelector","getBoundingClientRect","bottom","style","oncreate","blur","selectableItems","$input","navigator","selectResult","searchTimeout","isCached","MIN_SEARCH_LEN","Math","max","cache","one","select","attr","forum","attribute","UsersSearchSource","$items","$item","eq","scrollToItem","$dropdown","parent","fixedIndex","removeClass","addClass","scrollTop","dropdownScroll","dropdownTop","offset","dropdownBottom","outerHeight","itemTop","itemBottom","parseInt","css","stop","animate","HeaderSecondary","LogInModal","SignUpModal","component","Object","keys","data","locales","locale","Button","session","savePreferences","location","reload","document","cookie","SelectDropdown","buttonClassName","accessibleToggleLabel","NotificationsDropdown","notifications","SessionDropdown","modal","ComposerButton","initAttrs","ComposerState","position","Position","HIDDEN","height","body","editor","load","componentClass","componentResolver","preventExit","isVisible","sync","onExit","fields","content","Stream","destroy","NORMAL","FULLSCREEN","close","minimize","MINIMIZED","fullScreen","exitFullScreen","bodyMatches","subclassOf","every","isFullScreen","screen","composingReplyTo","ReplyComposer","confirm","message","preventClosingWhen","minimumHeight","maximumHeight","computedHeight","min","Composer","prevPosition","classes","normal","minimized","visible","showIfMinimized","configHandle","controlItems","composer","disabled","updateHeight","animatePositionChange","initializeHeight","handlers","onresize","trigger","onmousemove","onmouseup","onremove","off","dom","mouseStart","clientY","heightStart","handle","deltaPixels","changeHeight","anchorToBottom","updateBodyPadding","focus","first","$flexible","headerHeight","paddingBottom","footerHeight","animateHeightChange","$composer","oldHeight","newHeight","animation","promise","showBackdrop","$backdrop","appendTo","hideBackdrop","remove","scrollElement","documentElement","topOfViewport","scrollHeight","clientHeight","is","itemClassName","defaultHeight","DiscussionPageResolver","canonicalizeDiscussionSlug","slug","split","makeKey","param","near","routeName","replace","JSON","stringify","onmatch","args","requestedPath","current","matches","DiscussionPage","scrollToPostNumber","goToNumber","DefaultResolver","NotificationsPage","history","NotificationList","bodyClass","Page","alertEmailConfirmation","isEmailConfirmed","ResendButton","sent","class","request","method","ContainedAlert","vdom","Alert","mount","insertBefore","dismissible","controls","email","NotificationListState","notificationPages","moreResults","getNotificationPages","isLoading","hasMoreResults","newNotificationCount","pushAttributes","loadMore","parseResults","payload","links","next","markAllAsRead","unreadNotificationCount","forEach","notification","isRead","SearchState","cachedSearches","indexOf","GlobalSearchState","clearInitialSearch","stickyParams","changeSort","discussions","sortMap","providesInitialSearch","isSafariMobile","vendor","includes","userAgent","ForumApplication","PostsUserPage","routes","path","resolverClass","settings","post","DiscussionListState","defaultAction","pane","getElementById","prefix","Navigation","drawer","ctrlKey","metaKey","viewingDiscussion","authenticationComplete","loggedIn","Application","Forum","Placeholder","string","phrase","regexp","RegExp","highlighted","start","truncate","html","trust","humanTime","time","d","dayjs","datetime","format","full","ago","humanTimeUtil","pubdate","data-humantime","SubtreeRetainer","needsRebuild","result","check","invalidate","substring","getPlainContent","removeSelectors","join","trim","ucfirst","toUpperCase","ConfirmDocumentUnload","handler","boundHandler","ComposerBody","TextEditor","confirmExit","hasChanges","originalContent","headerItems","submitLabel","preview","jumpToPreview","onchange","onsubmit","loaded","abbreviateNumber","floor","toFixed","toString","TerminalPost","lastPost","replyCount","slidable","$underneathLeft","$underneathRight","startX","startY","couldBeSliding","isSliding","pos","animatePos","newPos","duration","step","x","reset","complete","originalEvent","targetTouches","clientX","newX","newY","abs","toggle","$underneath","side","hasClass","scale","activate","width","array","iteratee","Array","symbolProto","symbolToString","baseToString","isArray","isSymbol","call","reRegExpChar","reHasRegExpChar","test","DiscussionListItem","subtree","freshness","markedAllAsReadAt","getTime","elementAttrs","isHidden","isUnread","showUnread","showRepliesCount","jumpTo","DiscussionControls","escapeRegExp","highlightRegExp","lastPostNumber","lastReadPostNumber","Dropdown","markAsRead","createdAt","tooltip","placement","badges","infoItems","tabindex","slidableInstance","onbeforeupdate","old","showFirstPost","save","firstPost","contentType","excerpt","DiscussionList","getParams","empty","isSearchResults","data-id","DiscussionHero","hotEdge","pageX","DiscussionListPane","hasDiscussions","enoughSpace","$list","hover","previous","discussionListPaneScrollTop","$discussion","listTop","listBottom","discussionTop","discussionBottom","formatNumber","PostStreamScrubber","stream","scrollListener","ScrollListener","updateScrubberValues","fromScroll","forceHeightChange","count","viewing","transChoice","unreadCount","unreadPercent","styleUnread","newStyle","oldStyle","classNames","data-toggle","goToFirst","goToLast","forceUpdateScrubber","loadPromise","resize","dragging","indexStart","onmousedown","percentPerPost","$scrubber","sanitizeIndex","description","heights","before","after","paused","adjustingHeight","func","animationPromises","part","$part","Promise","scrubber","scrollbar","touches","deltaIndex","newIndex","intIndex","goToIndex","$scrollbar","offsetPercent","pageY","offsetIndex","parseFloat","minPercentVisible","percentPerVisiblePost","SplitDropdown","menuClassName","getButton","firstChild","getFirstChild","buttonAttrs","aria-haspopup","reWhitespace","charAt","reTrimStart","slice","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","other","valueOf","isBinary","nativeMax","nativeMin","wait","lastArgs","lastThis","maxWait","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","TypeError","invokeFunc","thisArg","apply","leadingEdge","timerExpired","shouldInvoke","timeSinceLastCall","trailingEdge","timeWaiting","remainingWait","debounced","isInvoking","arguments","cancel","flush","anchorScroll","$window","relativeScroll","PostStreamState","includedPosts","loadPageTimeouts","pagesLoading","loadNext","throttle","_loadNext","loadPrevious","_loadPrevious","update","viewingEnd","visibleEnd","loadRange","visibleStart","resolve","noAnimation","resultPromise","targetPost","reply","loadNearNumber","needsScroll","animateScroll","loadNearIndex","posts","Number","constructor","loadCount","end","twoPagesAway","loadPage","backwards","loadIds","postIds","getById","canEdit","newPosts","useBrowserScrollRestoration","PostStream","sidebarItems","onPositionChange","positionChanged","preloadedDiscussion","preloadedApiDocument","requestParams","bySlug","setTitle","setTitleCount","included","discussionId","record","relationships","startNumber","endNumber","replaceState","minimizeComposerIfFullScreen","createRecord","alert","viewButton","alerts","dismiss","relevance","latest","newest","oldest","refreshParams","newParams","refresh","deferClear","loadResults","preloadedDiscussions","removeDiscussion","addDiscussion","unshift","context","section","item","itemName","Separator","userControls","canReply","replyAction","moderationControls","canRename","renameAction","destructiveControls","canHide","restoreAction","canDelete","deleteAction","hideAction","forceRefresh","reject","console","log","hiddenAt","hiddenUser","currentTitle","CanvasImage","canvas","createElement","getContext","appendChild","drawImage","prototype","clearRect","putImageData","getPixelCount","getImageData","removeCanvas","parentNode","removeChild","ColorThief","getColor","getPalette","c","f","g","k","l","n","o","MMCQ","quantize","p","palette","pv","naturalOrder","sum","reduce","peek","debug","h","r1","r2","g1","g2","b1","b2","histo","vboxes","vbox","volume","j","copy","_volume","_count_set","_count","avg","_avg","contains","gval","bval","color","nearest","sqrt","pow","forcebw","module","exports","___EXPOSE_LOADER_IMPORT___","___EXPOSE_LOADER_GLOBAL_THIS___","maxInt","base","regexPunycode","regexNonASCII","regexSeparators","errors","stringFromCharCode","String","fromCharCode","error","RangeError","mapDomain","fn","parts","encoded","ucs2decode","output","counter","charCodeAt","extra","ucs2encode","fromCodePoint","digitToBasic","digit","flag","adapt","delta","numPoints","firstTime","baseMinusTMin","decode","input","inputLength","bias","basic","oldi","w","codePoint","t","baseMinusT","out","encode","currentValue","basicLength","handledCPCount","handledCPCountPlusOne","qMinusT","toUnicode","toASCII"],"mappings":"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","file":"forum/flarum-core.js","sourcesContent":["import Mithril from 'mithril';\n\n/**\n * Mithril 2 does not completely rerender the page if a route change leads to the same route\n * (or the same component handling a different route). This util calls m.route.set, forcing a reonit.\n *\n * @see https://mithril.js.org/route.html#key-parameter\n */\nexport default function setRouteWithForcedRefresh(route: string, params = null, options: Mithril.RouteOptions = {}) {\n  const newOptions = { ...options };\n  newOptions.state = newOptions.state || {};\n  newOptions.state.key = Date.now();\n\n  m.route.set(route, params, newOptions);\n}\n\nwindow.flreg.add('utils/setRouteWithForcedRefresh', setRouteWithForcedRefresh)","import setRouteWithForcedRefresh from '../../common/utils/setRouteWithForcedRefresh';\n\n/**\n * The `History` class keeps track and manages a stack of routes that the user\n * has navigated to in their session.\n *\n * An item can be pushed to the top of the stack using the `push` method. An\n * item in the stack has a name and a URL. The name need not be unique; if it is\n * the same as the item before it, that will be overwritten with the new URL. In\n * this way, if a user visits a discussion, and then visits another discussion,\n * popping the history stack will still take them back to the discussion list\n * rather than the previous discussion.\n */\nexport default class History {\n  constructor(defaultRoute) {\n    /**\n     * The stack of routes that have been navigated to.\n     *\n     * @type {Array}\n     * @protected\n     */\n    this.stack = [];\n  }\n\n  /**\n   * Get the item on the top of the stack.\n   *\n   * @return {Object}\n   * @public\n   */\n  getCurrent() {\n    return this.stack[this.stack.length - 1];\n  }\n\n  /**\n   * Get the previous item on the stack.\n   *\n   * @return {Object}\n   * @public\n   */\n  getPrevious() {\n    return this.stack[this.stack.length - 2];\n  }\n\n  /**\n   * Push an item to the top of the stack.\n   *\n   * @param {String} name The name of the route.\n   * @param {String} title The title of the route.\n   * @param {String} [url] The URL of the route. The current URL will be used if\n   *     not provided.\n   * @public\n   */\n  push(name, title, url = m.route.get()) {\n    // If we're pushing an item with the same name as second-to-top item in the\n    // stack, we will assume that the user has clicked the 'back' button in\n    // their browser. In this case, we don't want to push a new item, so we will\n    // pop off the top item, and then the second-to-top item will be overwritten\n    // below.\n    const secondTop = this.stack[this.stack.length - 2];\n    if (secondTop && secondTop.name === name) {\n      this.stack.pop();\n    }\n\n    // If we're pushing an item with the same name as the top item in the stack,\n    // then we'll overwrite it with the new URL.\n    const top = this.getCurrent();\n    if (top && top.name === name) {\n      Object.assign(top, { url, title });\n    } else {\n      this.stack.push({ name, url, title });\n    }\n  }\n\n  /**\n   * Check whether or not the history stack is able to be popped.\n   *\n   * @return {Boolean}\n   * @public\n   */\n  canGoBack() {\n    return this.stack.length > 1;\n  }\n\n  /**\n   * Go back to the previous route in the history stack.\n   *\n   * @public\n   */\n  back() {\n    if (!this.canGoBack()) {\n      return this.home();\n    }\n\n    this.stack.pop();\n\n    m.route.set(this.getCurrent().url);\n  }\n\n  /**\n   * Get the URL of the previous page.\n   *\n   * @public\n   */\n  backUrl() {\n    const secondTop = this.stack[this.stack.length - 2];\n\n    return secondTop.url;\n  }\n\n  /**\n   * Go to the first route in the history stack.\n   *\n   * @public\n   */\n  home() {\n    this.stack.splice(0);\n\n    setRouteWithForcedRefresh('/');\n  }\n}\n\nwindow.flreg.add('utils/History', History)","/**\n * The `Pane` class manages the page's discussion list sidepane. The pane is a\n * part of the content view (DiscussionPage component), but its visibility is\n * determined by CSS classes applied to the outer page element. This class\n * manages the application of those CSS classes.\n */\nexport default class Pane {\n  constructor(element) {\n    /**\n     * The localStorage key to store the pane's pinned state with.\n     *\n     * @type {String}\n     * @protected\n     */\n    this.pinnedKey = 'panePinned';\n\n    /**\n     * The page element.\n     *\n     * @type {jQuery}\n     * @protected\n     */\n    this.$element = $(element);\n\n    /**\n     * Whether or not the pane is currently pinned.\n     *\n     * @type {Boolean}\n     * @protected\n     */\n    this.pinned = localStorage.getItem(this.pinnedKey) === 'true';\n\n    /**\n     * Whether or not the pane is currently exists.\n     *\n     * @type {Boolean}\n     * @protected\n     */\n    this.active = false;\n\n    /**\n     * Whether or not the pane is currently showing, or is hidden off the edge\n     * of the screen.\n     *\n     * @type {Boolean}\n     * @protected\n     */\n    this.showing = false;\n\n    this.render();\n  }\n\n  /**\n   * Enable the pane.\n   *\n   * @public\n   */\n  enable() {\n    this.active = true;\n    this.render();\n  }\n\n  /**\n   * Disable the pane.\n   *\n   * @public\n   */\n  disable() {\n    this.active = false;\n    this.showing = false;\n    this.render();\n  }\n\n  /**\n   * Show the pane.\n   *\n   * @public\n   */\n  show() {\n    clearTimeout(this.hideTimeout);\n    this.showing = true;\n    this.render();\n  }\n\n  /**\n   * Hide the pane.\n   *\n   * @public\n   */\n  hide() {\n    this.showing = false;\n    this.render();\n  }\n\n  /**\n   * Begin a timeout to hide the pane, which can be cancelled by showing the\n   * pane.\n   *\n   * @public\n   */\n  onmouseleave() {\n    this.hideTimeout = setTimeout(this.hide.bind(this), 250);\n  }\n\n  /**\n   * Toggle whether or not the pane is pinned.\n   *\n   * @public\n   */\n  togglePinned() {\n    this.pinned = !this.pinned;\n\n    localStorage.setItem(this.pinnedKey, this.pinned ? 'true' : 'false');\n\n    this.render();\n  }\n\n  /**\n   * Apply the appropriate CSS classes to the page element.\n   *\n   * @protected\n   */\n  render() {\n    this.$element.toggleClass('panePinned', this.pinned).toggleClass('hasPane', this.active).toggleClass('paneShowing', this.showing);\n  }\n}\n\nwindow.flreg.add('utils/Pane', Pane)","import Component from '../../common/Component';\nimport ItemList from '../../common/utils/ItemList';\nimport listItems from '../../common/helpers/listItems';\n\n/**\n * The `HeaderPrimary` component displays primary header controls. On the\n * default skin, these are shown just to the right of the forum title.\n */\nexport default class HeaderPrimary extends Component {\n  view() {\n    return <ul className=\"Header-controls\">{listItems(this.items().toArray())}</ul>;\n  }\n\n  /**\n   * Build an item list for the controls.\n   *\n   * @return {ItemList}\n   */\n  items() {\n    return new ItemList();\n  }\n}\n\nwindow.flreg.add('components/HeaderPrimary', HeaderPrimary)","/**\n * The `KeyboardNavigatable` class manages lists that can be navigated with the\n * keyboard, calling callbacks for each actions.\n *\n * This helper encapsulates the key binding logic, providing a simple fluent\n * API for use.\n */\nexport default class KeyboardNavigatable {\n  constructor() {\n    /**\n     * Callback to be executed for a specified input.\n     *\n     * @callback KeyboardNavigatable~keyCallback\n     * @param {KeyboardEvent} event\n     * @returns {boolean}\n     */\n    this.callbacks = {};\n\n    /**\n     * Callback that determines whether keyboard input should be handled.\n     * By default, always handle keyboard navigation.\n     *\n     * @callback whenCallback\n     * @param {KeyboardEvent} event\n     * @returns {boolean}\n     */\n    this.whenCallback = (event) => true;\n  }\n\n  /**\n   * Provide a callback to be executed when navigating upwards.\n   *\n   * This will be triggered by the Up key.\n   *\n   * @public\n   * @param {KeyboardNavigatable~keyCallback} callback\n   * @return {KeyboardNavigatable}\n   */\n  onUp(callback) {\n    this.callbacks[38] = (e) => {\n      e.preventDefault();\n      callback(e);\n    };\n\n    return this;\n  }\n\n  /**\n   * Provide a callback to be executed when navigating downwards.\n   *\n   * This will be triggered by the Down key.\n   *\n   * @public\n   * @param {KeyboardNavigatable~keyCallback} callback\n   * @return {KeyboardNavigatable}\n   */\n  onDown(callback) {\n    this.callbacks[40] = (e) => {\n      e.preventDefault();\n      callback(e);\n    };\n\n    return this;\n  }\n\n  /**\n   * Provide a callback to be executed when the current item is selected..\n   *\n   * This will be triggered by the Return and Tab keys..\n   *\n   * @public\n   * @param {KeyboardNavigatable~keyCallback} callback\n   * @return {KeyboardNavigatable}\n   */\n  onSelect(callback) {\n    this.callbacks[9] = this.callbacks[13] = (e) => {\n      e.preventDefault();\n      callback(e);\n    };\n\n    return this;\n  }\n\n  /**\n   * Provide a callback to be executed when the navigation is canceled.\n   *\n   * This will be triggered by the Escape key.\n   *\n   * @public\n   * @param {KeyboardNavigatable~keyCallback} callback\n   * @return {KeyboardNavigatable}\n   */\n  onCancel(callback) {\n    this.callbacks[27] = (e) => {\n      e.stopPropagation();\n      e.preventDefault();\n      callback(e);\n    };\n\n    return this;\n  }\n\n  /**\n   * Provide a callback to be executed when previous input is removed.\n   *\n   * This will be triggered by the Backspace key.\n   *\n   * @public\n   * @param {KeyboardNavigatable~keyCallback} callback\n   * @return {KeyboardNavigatable}\n   */\n  onRemove(callback) {\n    this.callbacks[8] = (e) => {\n      if (e.target.selectionStart === 0 && e.target.selectionEnd === 0) {\n        callback(e);\n        e.preventDefault();\n      }\n    };\n\n    return this;\n  }\n\n  /**\n   * Provide a callback that determines whether keyboard input should be handled.\n   *\n   * @public\n   * @param {KeyboardNavigatable~whenCallback} callback\n   * @return {KeyboardNavigatable}\n   */\n  when(callback) {\n    this.whenCallback = callback;\n\n    return this;\n  }\n\n  /**\n   * Set up the navigation key bindings on the given jQuery element.\n   *\n   * @public\n   * @param {jQuery} $element\n   */\n  bindTo($element) {\n    // Handle navigation key events on the navigatable element.\n    $element.on('keydown', this.navigate.bind(this));\n  }\n\n  /**\n   * Interpret the given keyboard event as navigation commands.\n   *\n   * @public\n   * @param {KeyboardEvent} event\n   */\n  navigate(event) {\n    // This callback determines whether keyboard should be handled or ignored.\n    if (!this.whenCallback(event)) return;\n\n    const keyCallback = this.callbacks[event.which];\n    if (keyCallback) {\n      keyCallback(event);\n    }\n  }\n}\n\nwindow.flreg.add('utils/KeyboardNavigatable', KeyboardNavigatable)","import highlight from '../../common/helpers/highlight';\nimport LinkButton from '../../common/components/LinkButton';\nimport Link from '../../common/components/Link';\n\n/**\n * The `DiscussionsSearchSource` finds and displays discussion search results in\n * the search dropdown.\n *\n * @implements SearchSource\n */\nexport default class DiscussionsSearchSource {\n  constructor() {\n    this.results = {};\n  }\n\n  search(query) {\n    query = query.toLowerCase();\n\n    this.results[query] = [];\n\n    const params = {\n      filter: { q: query },\n      page: { limit: 3 },\n      include: 'mostRelevantPost',\n    };\n\n    return app.store.find('discussions', params).then((results) => (this.results[query] = results));\n  }\n\n  view(query) {\n    query = query.toLowerCase();\n\n    const results = this.results[query] || [];\n\n    return [\n      <li className=\"Dropdown-header\">{app.translator.trans('core.forum.search.discussions_heading')}</li>,\n      <li>\n        {LinkButton.component(\n          {\n            icon: 'fas fa-search',\n            href: app.route('index', { q: query }),\n          },\n          app.translator.trans('core.forum.search.all_discussions_button', { query })\n        )}\n      </li>,\n      results.map((discussion) => {\n        const mostRelevantPost = discussion.mostRelevantPost();\n\n        return (\n          <li className=\"DiscussionSearchResult\" data-index={'discussions' + discussion.id()}>\n            <Link href={app.route.discussion(discussion, mostRelevantPost && mostRelevantPost.number())}>\n              <div className=\"DiscussionSearchResult-title\">{highlight(discussion.title(), query)}</div>\n              {mostRelevantPost ? <div className=\"DiscussionSearchResult-excerpt\">{highlight(mostRelevantPost.contentPlain(), query, 100)}</div> : ''}\n            </Link>\n          </li>\n        );\n      }),\n    ];\n  }\n}\n\nwindow.flreg.add('components/DiscussionsSearchSource', DiscussionsSearchSource)","import highlight from '../../common/helpers/highlight';\nimport avatar from '../../common/helpers/avatar';\nimport username from '../../common/helpers/username';\nimport Link from '../../common/components/Link';\n\n/**\n * The `UsersSearchSource` finds and displays user search results in the search\n * dropdown.\n *\n * @implements SearchSource\n */\nexport default class UsersSearchResults {\n  constructor() {\n    this.results = {};\n  }\n\n  search(query) {\n    return app.store\n      .find('users', {\n        filter: { q: query },\n        page: { limit: 5 },\n      })\n      .then((results) => {\n        this.results[query] = results;\n        m.redraw();\n      });\n  }\n\n  view(query) {\n    query = query.toLowerCase();\n\n    const results = (this.results[query] || [])\n      .concat(\n        app.store\n          .all('users')\n          .filter((user) => [user.username(), user.displayName()].some((value) => value.toLowerCase().substr(0, query.length) === query))\n      )\n      .filter((e, i, arr) => arr.lastIndexOf(e) === i)\n      .sort((a, b) => a.displayName().localeCompare(b.displayName()));\n\n    if (!results.length) return '';\n\n    return [\n      <li className=\"Dropdown-header\">{app.translator.trans('core.forum.search.users_heading')}</li>,\n      results.map((user) => {\n        const name = username(user);\n\n        const children = [highlight(name.text, query)];\n\n        return (\n          <li className=\"UserSearchResult\" data-index={'users' + user.id()}>\n            <Link href={app.route.user(user)}>\n              {avatar(user)}\n              {{ ...name, text: undefined, children }}\n            </Link>\n          </li>\n        );\n      }),\n    ];\n  }\n}\n\nwindow.flreg.add('components/UsersSearchResults', UsersSearchResults)","import Component from '../../common/Component';\nimport LoadingIndicator from '../../common/components/LoadingIndicator';\nimport ItemList from '../../common/utils/ItemList';\nimport classList from '../../common/utils/classList';\nimport extractText from '../../common/utils/extractText';\nimport KeyboardNavigatable from '../utils/KeyboardNavigatable';\nimport icon from '../../common/helpers/icon';\nimport DiscussionsSearchSource from './DiscussionsSearchSource';\nimport UsersSearchSource from './UsersSearchSource';\n\n/**\n * The `Search` component displays a menu of as-you-type results from a variety\n * of sources.\n *\n * The search box will be 'activated' if the app's search state's\n * getInitialSearch() value is a truthy value. If this is the case, an 'x'\n * button will be shown next to the search field, and clicking it will clear the search.\n *\n * ATTRS:\n *\n * - state: SearchState instance.\n */\nexport default class Search extends Component {\n  static MIN_SEARCH_LEN = 3;\n\n  oninit(vnode) {\n    super.oninit(vnode);\n    this.state = this.attrs.state;\n\n    /**\n     * Whether or not the search input has focus.\n     *\n     * @type {Boolean}\n     */\n    this.hasFocus = false;\n\n    /**\n     * An array of SearchSources.\n     *\n     * @type {SearchSource[]}\n     */\n    this.sources = null;\n\n    /**\n     * The number of sources that are still loading results.\n     *\n     * @type {Integer}\n     */\n    this.loadingSources = 0;\n\n    /**\n     * The index of the currently-selected <li> in the results list. This can be\n     * a unique string (to account for the fact that an item's position may jump\n     * around as new results load), but otherwise it will be numeric (the\n     * sequential position within the list).\n     *\n     * @type {String|Integer}\n     */\n    this.index = 0;\n  }\n\n  view() {\n    const currentSearch = this.state.getInitialSearch();\n\n    // Initialize search sources in the view rather than the constructor so\n    // that we have access to app.forum.\n    if (!this.sources) {\n      this.sources = this.sourceItems().toArray();\n    }\n\n    // Hide the search view if no sources were loaded\n    if (!this.sources.length) return <div></div>;\n\n    const searchLabel = extractText(app.translator.trans('core.forum.header.search_placeholder'));\n\n    return (\n      <div\n        role=\"search\"\n        className={\n          'Search ' +\n          classList({\n            open: this.state.getValue() && this.hasFocus,\n            focused: this.hasFocus,\n            active: !!currentSearch,\n            loading: !!this.loadingSources,\n          })\n        }\n      >\n        <div className=\"Search-input\">\n          <input\n            aria-label={searchLabel}\n            className=\"FormControl\"\n            type=\"search\"\n            placeholder={searchLabel}\n            value={this.state.getValue()}\n            oninput={(e) => this.state.setValue(e.target.value)}\n            onfocus={() => (this.hasFocus = true)}\n            onblur={() => (this.hasFocus = false)}\n          />\n          {this.loadingSources ? (\n            LoadingIndicator.component({ size: 'tiny', className: 'Button Button--icon Button--link' })\n          ) : currentSearch ? (\n            <button className=\"Search-clear Button Button--icon Button--link\" onclick={this.clear.bind(this)}>\n              {icon('fas fa-times-circle')}\n            </button>\n          ) : (\n            ''\n          )}\n        </div>\n        <ul className=\"Dropdown-menu Search-results\">\n          {this.state.getValue() && this.hasFocus ? this.sources.map((source) => source.view(this.state.getValue())) : ''}\n        </ul>\n      </div>\n    );\n  }\n\n  onupdate() {\n    // Highlight the item that is currently selected.\n    this.setIndex(this.getCurrentNumericIndex());\n\n    // If there are no sources, the search view is not shown.\n    if (!this.sources.length) return;\n\n    // Since extensions might add elements above the search box on mobile,\n    // we need to calculate and set the max height dynamically.\n    const resultsElementMargin = 14;\n    const maxHeight =\n      window.innerHeight - this.element.querySelector('.Search-input>.FormControl').getBoundingClientRect().bottom - resultsElementMargin;\n    this.element.querySelector('.Search-results').style['max-height'] = `${maxHeight}px`;\n  }\n\n  oncreate(vnode) {\n    super.oncreate(vnode);\n\n    const search = this;\n    const state = this.state;\n\n    // Highlight the item that is currently selected.\n    this.setIndex(this.getCurrentNumericIndex());\n\n    this.$('.Search-results')\n      .on('mousedown', (e) => e.preventDefault())\n      .on('click', () => this.$('input').blur())\n\n      // Whenever the mouse is hovered over a search result, highlight it.\n      .on('mouseenter', '> li:not(.Dropdown-header)', function () {\n        search.setIndex(search.selectableItems().index(this));\n      });\n\n    const $input = this.$('input');\n\n    this.navigator = new KeyboardNavigatable();\n    this.navigator\n      .onUp(() => this.setIndex(this.getCurrentNumericIndex() - 1, true))\n      .onDown(() => this.setIndex(this.getCurrentNumericIndex() + 1, true))\n      .onSelect(this.selectResult.bind(this))\n      .onCancel(this.clear.bind(this))\n      .bindTo($input);\n\n    // Handle input key events on the search input, triggering results to load.\n    $input\n      .on('input focus', function () {\n        const query = this.value.toLowerCase();\n\n        if (!query) return;\n\n        clearTimeout(search.searchTimeout);\n        search.searchTimeout = setTimeout(() => {\n          if (state.isCached(query)) return;\n\n          if (query.length >= Search.MIN_SEARCH_LEN) {\n            search.sources.map((source) => {\n              if (!source.search) return;\n\n              search.loadingSources++;\n\n              source.search(query).then(() => {\n                search.loadingSources = Math.max(0, search.loadingSources - 1);\n                m.redraw();\n              });\n            });\n          }\n\n          state.cache(query);\n          m.redraw();\n        }, 250);\n      })\n\n      .on('focus', function () {\n        $(this)\n          .one('mouseup', (e) => e.preventDefault())\n          .select();\n      });\n  }\n\n  /**\n   * Navigate to the currently selected search result and close the list.\n   */\n  selectResult() {\n    clearTimeout(this.searchTimeout);\n    this.loadingSources = 0;\n\n    if (this.state.getValue()) {\n      m.route.set(this.getItem(this.index).find('a').attr('href'));\n    } else {\n      this.clear();\n    }\n\n    this.$('input').blur();\n  }\n\n  /**\n   * Clear the search\n   */\n  clear() {\n    this.state.clear();\n  }\n\n  /**\n   * Build an item list of SearchSources.\n   *\n   * @return {ItemList}\n   */\n  sourceItems() {\n    const items = new ItemList();\n\n    if (app.forum.attribute('canViewDiscussions')) items.add('discussions', new DiscussionsSearchSource());\n    if (app.forum.attribute('canViewUserList')) items.add('users', new UsersSearchSource());\n\n    return items;\n  }\n\n  /**\n   * Get all of the search result items that are selectable.\n   *\n   * @return {jQuery}\n   */\n  selectableItems() {\n    return this.$('.Search-results > li:not(.Dropdown-header)');\n  }\n\n  /**\n   * Get the position of the currently selected search result item.\n   *\n   * @return {Integer}\n   */\n  getCurrentNumericIndex() {\n    return this.selectableItems().index(this.getItem(this.index));\n  }\n\n  /**\n   * Get the <li> in the search results with the given index (numeric or named).\n   *\n   * @param {String} index\n   * @return {DOMElement}\n   */\n  getItem(index) {\n    const $items = this.selectableItems();\n    let $item = $items.filter(`[data-index=\"${index}\"]`);\n\n    if (!$item.length) {\n      $item = $items.eq(index);\n    }\n\n    return $item;\n  }\n\n  /**\n   * Set the currently-selected search result item to the one with the given\n   * index.\n   *\n   * @param {Integer} index\n   * @param {Boolean} scrollToItem Whether or not to scroll the dropdown so that\n   *     the item is in view.\n   */\n  setIndex(index, scrollToItem) {\n    const $items = this.selectableItems();\n    const $dropdown = $items.parent();\n\n    let fixedIndex = index;\n    if (index < 0) {\n      fixedIndex = $items.length - 1;\n    } else if (index >= $items.length) {\n      fixedIndex = 0;\n    }\n\n    const $item = $items.removeClass('active').eq(fixedIndex).addClass('active');\n\n    this.index = $item.attr('data-index') || fixedIndex;\n\n    if (scrollToItem) {\n      const dropdownScroll = $dropdown.scrollTop();\n      const dropdownTop = $dropdown.offset().top;\n      const dropdownBottom = dropdownTop + $dropdown.outerHeight();\n      const itemTop = $item.offset().top;\n      const itemBottom = itemTop + $item.outerHeight();\n\n      let scrollTop;\n      if (itemTop < dropdownTop) {\n        scrollTop = dropdownScroll - dropdownTop + itemTop - parseInt($dropdown.css('padding-top'), 10);\n      } else if (itemBottom > dropdownBottom) {\n        scrollTop = dropdownScroll - dropdownBottom + itemBottom + parseInt($dropdown.css('padding-bottom'), 10);\n      }\n\n      if (typeof scrollTop !== 'undefined') {\n        $dropdown.stop(true).animate({ scrollTop }, 100);\n      }\n    }\n  }\n}\n\nwindow.flreg.add('components/Search', Search)","import Component from '../../common/Component';\nimport Button from '../../common/components/Button';\nimport SelectDropdown from '../../common/components/SelectDropdown';\nimport ItemList from '../../common/utils/ItemList';\nimport listItems from '../../common/helpers/listItems';\nimport Search from '../components/Search';\n\n/**\n * The `HeaderSecondary` component displays secondary header controls, such as\n * the search box and the user menu. On the default skin, these are shown on the\n * right side of the header.\n */\nexport default class HeaderSecondary extends Component {\n  view() {\n    return <ul className=\"Header-controls\">{listItems(this.items().toArray())}</ul>;\n  }\n\n  /**\n   * Build an item list for the controls.\n   *\n   * @return {ItemList}\n   */\n  items() {\n    const items = new ItemList();\n\n    const LogInModal = () => import(/* webpackChunkName: \"forum/components/LogInModal\" */ './LogInModal');\n    const SignUpModal = () => import(/* webpackChunkName: \"forum/components/SignUpModal\" */ './SignUpModal');\n\n    items.add('search', Search.component({state: app.search}), 30);\n\n    if (app.forum.attribute('showLanguageSelector') && Object.keys(app.data.locales).length > 1) {\n      const locales = [];\n\n      for (const locale in app.data.locales) {\n        locales.push(\n          Button.component(\n            {\n              active: app.data.locale === locale,\n              icon: app.data.locale === locale ? 'fas fa-check' : true,\n              onclick: () => {\n                if (app.session.user) {\n                  app.session.user.savePreferences({locale}).then(() => window.location.reload());\n                } else {\n                  document.cookie = `locale=${locale}; path=/; expires=Tue, 19 Jan 2038 03:14:07 GMT`;\n                  window.location.reload();\n                }\n              },\n            },\n            app.data.locales[locale]\n          )\n        );\n      }\n\n      items.add(\n        'locale',\n        SelectDropdown.component(\n          {\n            buttonClassName: 'Button Button--link',\n            accessibleToggleLabel: app.translator.trans('core.forum.header.locale_dropdown_accessible_label'),\n          },\n          locales\n        ),\n        20\n      );\n    }\n\n    if (app.session.user) {\n      if (!this.NotificationsDropdown) {\n        import(/* webpackChunkName: \"forum/components/NotificationsDropdown\" */ './NotificationsDropdown').then(NotificationsDropdown => {\n          this.NotificationsDropdown = NotificationsDropdown.default;\n          m.redraw();\n        });\n      } else {\n        items.add('notifications', this.NotificationsDropdown.component({state: app.notifications}), 10);\n      }\n\n      if (!this.SessionDropdown) {\n        import(/* webpackChunkName: \"forum/components/SessionDropdown\" */ './SessionDropdown').then(SessionDropdown => {\n          this.SessionDropdown = SessionDropdown.default;\n          m.redraw();\n        });\n      } else {\n        items.add('session', this.SessionDropdown.component(), 0);\n      }\n\n    } else {\n      if (app.forum.attribute('allowSignUp')) {\n        items.add(\n          'signUp',\n          Button.component(\n            {\n              className: 'Button Button--link',\n              onclick: () => app.modal.show(SignUpModal),\n            },\n            app.translator.trans('core.forum.header.sign_up_link')\n          ),\n          10\n        );\n      }\n\n      items.add(\n        'logIn',\n        Button.component(\n          {\n            className: 'Button Button--link',\n            onclick: () => app.modal.show(LogInModal),\n          },\n          app.translator.trans('core.forum.header.log_in_link')\n        ),\n        0\n      );\n    }\n\n    return items;\n  }\n}\n\nwindow.flreg.add('components/HeaderSecondary', HeaderSecondary)","import Button from '../../common/components/Button';\n\n/**\n * The `ComposerButton` component displays a button suitable for the composer\n * controls.\n */\nexport default class ComposerButton extends Button {\n  static initAttrs(attrs) {\n    super.initAttrs(attrs);\n\n    attrs.className = attrs.className || 'Button Button--icon Button--link';\n  }\n}\n\nwindow.flreg.add('components/ComposerButton', ComposerButton)","import Component from '../../common/Component';\nimport subclassOf from '../../common/utils/subclassOf';\nimport Stream from '../../common/utils/Stream';\nimport ReplyComposer from '../components/ReplyComposer';\nimport EditorDriverInterface from '../../common/utils/EditorDriverInterface';\n\nclass ComposerState {\n  constructor() {\n    /**\n     * The composer's current position.\n     *\n     * @type {ComposerState.Position}\n     */\n    this.position = ComposerState.Position.HIDDEN;\n\n    /**\n     * The composer's intended height, which can be modified by the user\n     * (by dragging the composer handle).\n     *\n     * @type {Integer}\n     */\n    this.height = null;\n\n    /**\n     * The dynamic component being shown inside the composer.\n     *\n     * @type {Object}\n     */\n    this.body = { attrs: {} };\n\n    /**\n     * A reference to the text editor that allows text manipulation.\n     *\n     * @type {EditorDriverInterface|null}\n     */\n    this.editor = null;\n\n    this.clear();\n  }\n\n  /**\n   * Load a content component into the composer.\n   *\n   * @param {ComposerBody|Function} componentClass\n   * @public\n   */\n  async load(componentClass, attrs) {\n    if (!(componentClass instanceof Component)) {\n      const componentResolver = await componentClass();\n      componentClass = componentResolver.default;\n    }\n\n    const body = { componentClass, attrs };\n\n    if (this.preventExit()) return;\n\n    // If we load a similar component into the composer, then Mithril will be\n    // able to diff the old/new contents and some DOM-related state from the\n    // old composer will remain. To prevent this from happening, we clear the\n    // component and force a redraw, so that the new component will be working\n    // on a blank slate.\n    if (this.isVisible()) {\n      this.clear();\n      m.redraw.sync();\n    }\n\n    this.body = body;\n  }\n\n  /**\n   * Clear the composer's content component.\n   */\n  clear() {\n    this.position = ComposerState.Position.HIDDEN;\n    this.body = { attrs: {} };\n    this.onExit = null;\n\n    this.fields = {\n      content: Stream(''),\n    };\n\n    if (this.editor) {\n      this.editor.destroy();\n    }\n    this.editor = null;\n  }\n\n  /**\n   * Show the composer.\n   *\n   * @public\n   */\n  show() {\n    if (this.position === ComposerState.Position.NORMAL || this.position === ComposerState.Position.FULLSCREEN) return;\n\n    this.position = ComposerState.Position.NORMAL;\n    m.redraw.sync();\n  }\n\n  /**\n   * Close the composer.\n   *\n   * @public\n   */\n  hide() {\n    this.clear();\n    m.redraw();\n  }\n\n  /**\n   * Confirm with the user so they don't lose their content, then close the\n   * composer.\n   *\n   * @public\n   */\n  close() {\n    if (this.preventExit()) return;\n\n    this.hide();\n  }\n\n  /**\n   * Minimize the composer. Has no effect if the composer is hidden.\n   *\n   * @public\n   */\n  minimize() {\n    if (!this.isVisible()) return;\n\n    this.position = ComposerState.Position.MINIMIZED;\n    m.redraw();\n  }\n\n  /**\n   * Take the composer into fullscreen mode. Has no effect if the composer is\n   * hidden.\n   *\n   * @public\n   */\n  fullScreen() {\n    if (!this.isVisible()) return;\n\n    this.position = ComposerState.Position.FULLSCREEN;\n    m.redraw();\n  }\n\n  /**\n   * Exit fullscreen mode.\n   *\n   * @public\n   */\n  exitFullScreen() {\n    if (this.position !== ComposerState.Position.FULLSCREEN) return;\n\n    this.position = ComposerState.Position.NORMAL;\n    m.redraw();\n  }\n\n  /**\n   * Determine whether the body matches the given component class and data.\n   *\n   * @param {object} type The component class to check against. Subclasses are\n   *                      accepted as well.\n   * @param {object} data\n   * @return {boolean}\n   */\n  bodyMatches(type, data = {}) {\n    // Fail early when the body is of a different type\n    if (!subclassOf(this.body.componentClass, type)) return false;\n\n    // Now that the type is known to be correct, we loop through the provided\n    // data to see whether it matches the data in the attributes for the body.\n    return Object.keys(data).every((key) => this.body.attrs[key] === data[key]);\n  }\n\n  /**\n   * Determine whether or not the Composer is visible.\n   *\n   * True when the composer is displayed on the screen and has a body component.\n   * It could be open in \"normal\" or full-screen mode, or even minimized.\n   *\n   * @returns {boolean}\n   */\n  isVisible() {\n    return this.position !== ComposerState.Position.HIDDEN;\n  }\n\n  /**\n   * Determine whether or not the Composer is covering the screen.\n   *\n   * This will be true if the Composer is in full-screen mode on desktop,\n   * or if we are on a mobile device, where we always consider the composer as full-screen..\n   *\n   * @return {Boolean}\n   * @public\n   */\n  isFullScreen() {\n    return this.position === ComposerState.Position.FULLSCREEN || app.screen() === 'phone';\n  }\n\n  /**\n   * Check whether or not the user is currently composing a reply to a\n   * discussion.\n   *\n   * @param {Discussion} discussion\n   * @return {Boolean}\n   */\n  composingReplyTo(discussion) {\n    return this.isVisible() && this.bodyMatches(ReplyComposer, { discussion });\n  }\n\n  /**\n   * Confirm with the user that they want to close the composer and lose their\n   * content.\n   *\n   * @return {Boolean} Whether or not the exit was cancelled.\n   */\n  preventExit() {\n    if (!this.isVisible()) return;\n    if (!this.onExit) return;\n\n    if (this.onExit.callback()) {\n      return !confirm(this.onExit.message);\n    }\n  }\n\n  /**\n   * Configure when / what to ask the user before closing the composer.\n   *\n   * The provided callback will be used to determine whether asking for\n   * confirmation is necessary. If the callback returns true at the time of\n   * closing, the provided text will be shown in a standard confirmation dialog.\n   *\n   * @param {Function} callback\n   * @param {String} message\n   */\n  preventClosingWhen(callback, message) {\n    this.onExit = { callback, message };\n  }\n\n  /**\n   * Minimum height of the Composer.\n   * @returns {Integer}\n   */\n  minimumHeight() {\n    return 200;\n  }\n\n  /**\n   * Maxmimum height of the Composer.\n   * @returns {Integer}\n   */\n  maximumHeight() {\n    return $(window).height() - $('#header').outerHeight();\n  }\n\n  /**\n   * Computed the composer's current height, based on the intended height, and\n   * the composer's current state. This will be applied to the composer's\n   * content's DOM element.\n   * @returns {Integer|String}\n   */\n  computedHeight() {\n    // If the composer is minimized, then we don't want to set a height; we'll\n    // let the CSS decide how high it is. If it's fullscreen, then we need to\n    // make it as high as the window.\n    if (this.position === ComposerState.Position.MINIMIZED) {\n      return '';\n    } else if (this.position === ComposerState.Position.FULLSCREEN) {\n      return $(window).height();\n    }\n\n    // Otherwise, if it's normal or hidden, then we use the intended height.\n    // We don't let the composer get too small or too big, though.\n    return Math.max(this.minimumHeight(), Math.min(this.height, this.maximumHeight()));\n  }\n}\n\nComposerState.Position = {\n  HIDDEN: 'hidden',\n  NORMAL: 'normal',\n  MINIMIZED: 'minimized',\n  FULLSCREEN: 'fullScreen',\n};\n\nexport default ComposerState;\n\nwindow.flreg.add('states/ComposerState', ComposerState)","import Component from '../../common/Component';\nimport ItemList from '../../common/utils/ItemList';\nimport ComposerButton from './ComposerButton';\nimport listItems from '../../common/helpers/listItems';\nimport classList from '../../common/utils/classList';\nimport ComposerState from '../states/ComposerState';\n\n/**\n * The `Composer` component displays the composer. It can be loaded with a\n * content component with `load` and then its position/state can be altered with\n * `show`, `hide`, `close`, `minimize`, `fullScreen`, and `exitFullScreen`.\n */\nexport default class Composer extends Component {\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    /**\n     * The composer's \"state\".\n     *\n     * @type {ComposerState}\n     */\n    this.state = this.attrs.state;\n\n    /**\n     * Whether or not the composer currently has focus.\n     *\n     * @type {Boolean}\n     */\n    this.active = false;\n\n    // Store the initial position so that we can trigger animations correctly.\n    this.prevPosition = this.state.position;\n  }\n\n  view() {\n    const body = this.state.body;\n    const classes = {\n      normal: this.state.position === ComposerState.Position.NORMAL,\n      minimized: this.state.position === ComposerState.Position.MINIMIZED,\n      fullScreen: this.state.position === ComposerState.Position.FULLSCREEN,\n      active: this.active,\n      visible: this.state.isVisible(),\n    };\n\n    // Set up a handler so that clicks on the content will show the composer.\n    const showIfMinimized = this.state.position === ComposerState.Position.MINIMIZED ? this.state.show.bind(this.state) : undefined;\n\n    return (\n      <div className={'Composer ' + classList(classes)}>\n        <div className=\"Composer-handle\" oncreate={this.configHandle.bind(this)} />\n        <ul className=\"Composer-controls\">{listItems(this.controlItems().toArray())}</ul>\n        <div className=\"Composer-content\" onclick={showIfMinimized}>\n          {body.componentClass ? body.componentClass.component({ ...body.attrs, composer: this.state, disabled: classes.minimized }) : ''}\n        </div>\n      </div>\n    );\n  }\n\n  onupdate() {\n    if (this.state.position === this.prevPosition) {\n      // Set the height of the Composer element and its contents on each redraw,\n      // so that they do not lose it if their DOM elements are recreated.\n      this.updateHeight();\n    } else {\n      this.animatePositionChange();\n\n      this.prevPosition = this.state.position;\n    }\n  }\n\n  oncreate(vnode) {\n    super.oncreate(vnode);\n\n    this.initializeHeight();\n    this.$().hide().css('bottom', -this.state.computedHeight());\n\n    // Whenever any of the inputs inside the composer are have focus, we want to\n    // add a class to the composer to draw attention to it.\n    this.$().on('focus blur', ':input,.TextEditor-editorContainer', (e) => {\n      this.active = e.type === 'focusin';\n      m.redraw();\n    });\n\n    // When the escape key is pressed on any inputs, close the composer.\n    this.$().on('keydown', ':input,.TextEditor-editorContainer', 'esc', () => this.state.close());\n\n    this.handlers = {};\n\n    $(window)\n      .on('resize', (this.handlers.onresize = this.updateHeight.bind(this)))\n      .trigger('resize');\n\n    $(document)\n      .on('mousemove', (this.handlers.onmousemove = this.onmousemove.bind(this)))\n      .on('mouseup', (this.handlers.onmouseup = this.onmouseup.bind(this)));\n  }\n\n  onremove() {\n    $(window).off('resize', this.handlers.onresize);\n\n    $(document).off('mousemove', this.handlers.onmousemove).off('mouseup', this.handlers.onmouseup);\n  }\n\n  /**\n   * Add the necessary event handlers to the composer's handle so that it can\n   * be used to resize the composer.\n   */\n  configHandle(vnode) {\n    const composer = this;\n\n    $(vnode.dom)\n      .css('cursor', 'row-resize')\n      .on('dragstart mousedown', (e) => e.preventDefault())\n      .on('mousedown', function (e) {\n        composer.mouseStart = e.clientY;\n        composer.heightStart = composer.$().height();\n        composer.handle = $(this);\n        $('body').css('cursor', 'row-resize');\n      });\n  }\n\n  /**\n   * Resize the composer according to mouse movement.\n   *\n   * @param {Event} e\n   */\n  onmousemove(e) {\n    if (!this.handle) return;\n\n    // Work out how much the mouse has been moved, and set the height\n    // relative to the old one based on that. Then update the content's\n    // height so that it fills the height of the composer, and update the\n    // body's padding.\n    const deltaPixels = this.mouseStart - e.clientY;\n    this.changeHeight(this.heightStart + deltaPixels);\n\n    // Update the body's padding-bottom so that no content on the page will ever\n    // get permanently hidden behind the composer. If the user is already\n    // scrolled to the bottom of the page, then we will keep them scrolled to\n    // the bottom after the padding has been updated.\n    const scrollTop = $(window).scrollTop();\n    const anchorToBottom = scrollTop > 0 && scrollTop + $(window).height() >= $(document).height();\n    this.updateBodyPadding(anchorToBottom);\n  }\n\n  /**\n   * Finish resizing the composer when the mouse is released.\n   */\n  onmouseup() {\n    if (!this.handle) return;\n\n    this.handle = null;\n    $('body').css('cursor', '');\n  }\n\n  /**\n   * Draw focus to the first focusable content element (the text editor).\n   */\n  focus() {\n    this.$('.Composer-content :input:enabled:visible, .TextEditor-editor').first().focus();\n  }\n\n  /**\n   * Update the DOM to reflect the composer's current height. This involves\n   * setting the height of the composer's root element, and adjusting the height\n   * of any flexible elements inside the composer's body.\n   */\n  updateHeight() {\n    const height = this.state.computedHeight();\n    const $flexible = this.$('.Composer-flexible');\n\n    this.$().height(height);\n\n    if ($flexible.length) {\n      const headerHeight = $flexible.offset().top - this.$().offset().top;\n      const paddingBottom = parseInt($flexible.css('padding-bottom'), 10);\n      const footerHeight = this.$('.Composer-footer').outerHeight(true);\n\n      $flexible.height(this.$().outerHeight() - headerHeight - paddingBottom - footerHeight);\n    }\n  }\n\n  /**\n   * Update the amount of padding-bottom on the body so that the page's\n   * content will still be visible above the composer when the page is\n   * scrolled right to the bottom.\n   */\n  updateBodyPadding() {\n    const visible =\n      this.state.position !== ComposerState.Position.HIDDEN && this.state.position !== ComposerState.Position.MINIMIZED && app.screen() !== 'phone';\n\n    const paddingBottom = visible ? this.state.computedHeight() - parseInt($('#app').css('padding-bottom'), 10) : 0;\n\n    $('#content').css({ paddingBottom });\n  }\n\n  /**\n   * Trigger the right animation depending on the desired new position.\n   */\n  animatePositionChange() {\n    // When exiting full-screen mode: focus content\n    if (this.prevPosition === ComposerState.Position.FULLSCREEN && this.state.position === ComposerState.Position.NORMAL) {\n      this.focus();\n      return;\n    }\n\n    switch (this.state.position) {\n      case ComposerState.Position.HIDDEN:\n        return this.hide();\n      case ComposerState.Position.MINIMIZED:\n        return this.minimize();\n      case ComposerState.Position.FULLSCREEN:\n        return this.focus();\n      case ComposerState.Position.NORMAL:\n        return this.show();\n    }\n  }\n\n  /**\n   * Animate the Composer into the new position by changing the height.\n   */\n  animateHeightChange() {\n    const $composer = this.$().stop(true);\n    const oldHeight = $composer.outerHeight();\n    const scrollTop = $(window).scrollTop();\n\n    $composer.show();\n    this.updateHeight();\n\n    const newHeight = $composer.outerHeight();\n\n    if (this.prevPosition === ComposerState.Position.HIDDEN) {\n      $composer.css({ bottom: -newHeight, height: newHeight });\n    } else {\n      $composer.css({ height: oldHeight });\n    }\n\n    const animation = $composer.animate({ bottom: 0, height: newHeight }, 'fast').promise();\n\n    this.updateBodyPadding();\n    $(window).scrollTop(scrollTop);\n    return animation;\n  }\n\n  /**\n   * Show the Composer backdrop.\n   */\n  showBackdrop() {\n    this.$backdrop = $('<div/>').addClass('composer-backdrop').appendTo('body');\n  }\n\n  /**\n   * Hide the Composer backdrop.\n   */\n  hideBackdrop() {\n    if (this.$backdrop) this.$backdrop.remove();\n  }\n\n  /**\n   * Animate the composer sliding up from the bottom to take its normal height.\n   *\n   * @private\n   */\n  show() {\n    this.animateHeightChange().then(() => this.focus());\n\n    if (app.screen() === 'phone') {\n      // On safari fixed position doesn't properly work on mobile,\n      // So we use absolute and set the top value.\n      // https://github.com/flarum/core/issues/2652\n\n      // Due to another safari bug, `scrollTop` is unreliable when\n      // at the very bottom of the page AND opening the composer.\n      // So we fallback to a calculated version of scrollTop.\n      // https://github.com/flarum/core/issues/2683\n      const scrollElement = document.documentElement;\n      const topOfViewport = Math.min(scrollElement.scrollTop, scrollElement.scrollHeight - scrollElement.clientHeight);\n      this.$().css('top', $('.App').is('.mobile-safari') ? topOfViewport : 0);\n      this.showBackdrop();\n    }\n  }\n\n  /**\n   * Animate closing the composer.\n   *\n   * @private\n   */\n  hide() {\n    const $composer = this.$();\n\n    // Animate the composer sliding down off the bottom edge of the viewport.\n    // Only when the animation is completed, update other elements on the page.\n    $composer.stop(true).animate({ bottom: -$composer.height() }, 'fast', () => {\n      $composer.hide();\n      this.hideBackdrop();\n      this.updateBodyPadding();\n    });\n  }\n\n  /**\n   * Shrink the composer until only its title is visible.\n   *\n   * @private\n   */\n  minimize() {\n    this.animateHeightChange();\n\n    this.$().css('top', 'auto');\n    this.hideBackdrop();\n  }\n\n  /**\n   * Build an item list for the composer's controls.\n   *\n   * @return {ItemList}\n   */\n  controlItems() {\n    const items = new ItemList();\n\n    if (this.state.position === ComposerState.Position.FULLSCREEN) {\n      items.add(\n        'exitFullScreen',\n        ComposerButton.component({\n          icon: 'fas fa-compress',\n          title: app.translator.trans('core.forum.composer.exit_full_screen_tooltip'),\n          onclick: this.state.exitFullScreen.bind(this.state),\n        })\n      );\n    } else {\n      if (this.state.position !== ComposerState.Position.MINIMIZED) {\n        items.add(\n          'minimize',\n          ComposerButton.component({\n            icon: 'fas fa-minus minimize',\n            title: app.translator.trans('core.forum.composer.minimize_tooltip'),\n            onclick: this.state.minimize.bind(this.state),\n            itemClassName: 'App-backControl',\n          })\n        );\n\n        items.add(\n          'fullScreen',\n          ComposerButton.component({\n            icon: 'fas fa-expand',\n            title: app.translator.trans('core.forum.composer.full_screen_tooltip'),\n            onclick: this.state.fullScreen.bind(this.state),\n          })\n        );\n      }\n\n      items.add(\n        'close',\n        ComposerButton.component({\n          icon: 'fas fa-times',\n          title: app.translator.trans('core.forum.composer.close_tooltip'),\n          onclick: this.state.close.bind(this.state),\n        })\n      );\n    }\n\n    return items;\n  }\n\n  /**\n   * Initialize default Composer height.\n   */\n  initializeHeight() {\n    this.state.height = localStorage.getItem('composerHeight');\n\n    if (!this.state.height) {\n      this.state.height = this.defaultHeight();\n    }\n  }\n\n  /**\n   * Default height of the Composer in case none is saved.\n   * @returns {Integer}\n   */\n  defaultHeight() {\n    return this.$().height();\n  }\n\n  /**\n   * Save a new Composer height and update the DOM.\n   * @param {Integer} height\n   */\n  changeHeight(height) {\n    this.state.height = height;\n    this.updateHeight();\n\n    localStorage.setItem('composerHeight', this.state.height);\n  }\n}\n\nwindow.flreg.add('components/Composer', Composer)","import DefaultResolver from '../../common/resolvers/DefaultResolver';\nimport DiscussionPage from '../components/DiscussionPage';\n\n/**\n * A custom route resolver for DiscussionPage that generates the same key to all posts\n * on the same discussion. It triggers a scroll when going from one post to another\n * in the same discussion.\n */\nexport default class DiscussionPageResolver extends DefaultResolver {\n  static scrollToPostNumber: string | null = null;\n\n  /**\n   * Remove optional parts of a discussion's slug to keep the substring\n   * that bijectively maps to a discussion object. By default this just\n   * extracts the numerical ID from the slug. If a custom discussion\n   * slugging driver is used, this may need to be overriden.\n   * @param slug\n   */\n  canonicalizeDiscussionSlug(slug: string | undefined) {\n    if (!slug) return;\n    return slug.split('-')[0];\n  }\n\n  /**\n   * @inheritdoc\n   */\n  makeKey() {\n    const params = { ...m.route.param() };\n    if ('near' in params) {\n      delete params.near;\n    }\n    params.id = this.canonicalizeDiscussionSlug(params.id);\n    return this.routeName.replace('.near', '') + JSON.stringify(params);\n  }\n\n  onmatch(args, requestedPath, route) {\n    if (app.current.matches(DiscussionPage) && this.canonicalizeDiscussionSlug(args.id) === this.canonicalizeDiscussionSlug(m.route.param('id'))) {\n      // By default, the first post number of any discussion is 1\n      DiscussionPageResolver.scrollToPostNumber = args.near || '1';\n    }\n\n    return super.onmatch(args, requestedPath, route);\n  }\n\n  render(vnode) {\n    if (DiscussionPageResolver.scrollToPostNumber !== null) {\n      const number = DiscussionPageResolver.scrollToPostNumber;\n      // Scroll after a timeout to avoid clashes with the render.\n      setTimeout(() => app.current.get('stream').goToNumber(number));\n      DiscussionPageResolver.scrollToPostNumber = null;\n    }\n\n    return super.render(vnode);\n  }\n}\n\nwindow.flreg.add('resolvers/DiscussionPageResolver', DiscussionPageResolver)","import Page from '../../common/components/Page';\n\n/**\n * The `NotificationsPage` component shows the notifications list. It is only\n * used on mobile devices where the notifications dropdown is within the drawer.\n */\nexport default class NotificationsPage extends Page {\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    app.history.push('notifications');\n\n    import(/* webpackChunkName: \"forum/components/NotificationList\" */ './NotificationList').then((NotificationList) => {\n      this.NotificationList = NotificationList.default;\n      m.redraw();\n    });\n\n    app.notifications.load();\n\n    this.bodyClass = 'App--notifications';\n  }\n\n  view() {\n    const NotificationList = this.NotificationList;\n\n    return <div className=\"NotificationsPage\">{NotificationList ? <NotificationList state={app.notifications} /> : ''}</div>;\n  }\n}\n\nwindow.flreg.add('components/NotificationsPage', NotificationsPage)","import Alert from '../../common/components/Alert';\nimport Button from '../../common/components/Button';\nimport icon from '../../common/helpers/icon';\nimport Component from '../../common/Component';\n\n/**\n * Shows an alert if the user has not yet confirmed their email address.\n *\n * @param {ForumApplication} app\n */\nexport default function alertEmailConfirmation(app) {\n  const user = app.session.user;\n\n  if (!user || user.isEmailConfirmed()) return;\n\n  class ResendButton extends Component {\n    oninit(vnode) {\n      super.oninit(vnode);\n\n      this.loading = false;\n      this.sent = false;\n    }\n\n    view() {\n      return (\n        <Button class=\"Button Button--link\" onclick={this.onclick.bind(this)} loading={this.loading} disabled={this.sent}>\n          {this.sent\n            ? [icon('fas fa-check'), ' ', app.translator.trans('core.forum.user_email_confirmation.sent_message')]\n            : app.translator.trans('core.forum.user_email_confirmation.resend_button')}\n        </Button>\n      );\n    }\n\n    onclick() {\n      this.loading = true;\n      m.redraw();\n\n      app\n        .request({\n          method: 'POST',\n          url: app.forum.attribute('apiUrl') + '/users/' + user.id() + '/send-confirmation',\n        })\n        .then(() => {\n          this.loading = false;\n          this.sent = true;\n          m.redraw();\n        })\n        .catch(() => {\n          this.loading = false;\n          m.redraw();\n        });\n    }\n  }\n\n  class ContainedAlert extends Alert {\n    view(vnode) {\n      const vdom = super.view(vnode);\n      return { ...vdom, children: [<div className=\"container\">{vdom.children}</div>] };\n    }\n  }\n\n  m.mount($('<div/>').insertBefore('#content')[0], {\n    view: () => (\n      <ContainedAlert dismissible={false} controls={[<ResendButton />]}>\n        {app.translator.trans('core.forum.user_email_confirmation.alert_message', { email: <strong>{user.email()}</strong> })}\n      </ContainedAlert>\n    ),\n  });\n}\n\nwindow.flreg.add('utils/alertEmailConfirmation', alertEmailConfirmation)","export default class NotificationListState {\n  constructor(app) {\n    this.app = app;\n\n    this.notificationPages = [];\n\n    this.loading = false;\n\n    this.moreResults = false;\n  }\n\n  clear() {\n    this.notificationPages = [];\n  }\n\n  getNotificationPages() {\n    return this.notificationPages;\n  }\n\n  isLoading() {\n    return this.loading;\n  }\n\n  hasMoreResults() {\n    return this.moreResults;\n  }\n\n  /**\n   * Load notifications into the application's cache if they haven't already\n   * been loaded.\n   */\n  load() {\n    if (this.app.session.user.newNotificationCount()) {\n      this.notificationPages = [];\n    }\n\n    if (this.notificationPages.length > 0) {\n      return;\n    }\n\n    this.app.session.user.pushAttributes({ newNotificationCount: 0 });\n\n    this.loadMore();\n  }\n\n  /**\n   * Load the next page of notification results.\n   *\n   * @public\n   */\n  loadMore() {\n    this.loading = true;\n    m.redraw();\n\n    const params = this.notificationPages.length > 0 ? { page: { offset: this.notificationPages.length * 10 } } : null;\n\n    return this.app.store\n      .find('notifications', params)\n      .then(this.parseResults.bind(this))\n      .catch(() => {})\n      .then(() => {\n        this.loading = false;\n        m.redraw();\n      });\n  }\n\n  /**\n   * Parse results and append them to the notification list.\n   *\n   * @param {Notification[]} results\n   * @return {Notification[]}\n   */\n  parseResults(results) {\n    if (results.length) this.notificationPages.push(results);\n\n    this.moreResults = !!results.payload.links.next;\n\n    return results;\n  }\n\n  /**\n   * Mark all of the notifications as read.\n   */\n  markAllAsRead() {\n    if (this.notificationPages.length === 0) return;\n\n    this.app.session.user.pushAttributes({ unreadNotificationCount: 0 });\n\n    this.notificationPages.forEach((notifications) => {\n      notifications.forEach((notification) => notification.pushAttributes({ isRead: true }));\n    });\n\n    this.app.request({\n      url: this.app.forum.attribute('apiUrl') + '/notifications/read',\n      method: 'POST',\n    });\n  }\n}\n\nwindow.flreg.add('states/NotificationListState', NotificationListState)","export default class SearchState {\n  constructor(cachedSearches = []) {\n    this.cachedSearches = cachedSearches;\n  }\n\n  getValue() {\n    return this.value;\n  }\n\n  setValue(value) {\n    this.value = value;\n  }\n\n  /**\n   * Clear the search value.\n   */\n  clear() {\n    this.setValue('');\n  }\n\n  /**\n   * Mark that we have already searched for this query so that we don't\n   * have to ping the endpoint again.\n   */\n  cache(query) {\n    this.cachedSearches.push(query);\n  }\n\n  /**\n   * Check if this query has been searched before.\n   */\n  isCached(query) {\n    return this.cachedSearches.indexOf(query) !== -1;\n  }\n}\n\nwindow.flreg.add('states/SearchState', SearchState)","import setRouteWithForcedRefresh from '../../common/utils/setRouteWithForcedRefresh';\nimport SearchState from './SearchState';\n\nexport default class GlobalSearchState extends SearchState {\n  constructor(cachedSearches = []) {\n    super(cachedSearches);\n  }\n\n  getValue() {\n    if (this.value === undefined) {\n      this.value = this.getInitialSearch() || '';\n    }\n\n    return super.getValue();\n  }\n\n  /**\n   * Clear the search input and the current controller's active search.\n   */\n  clear() {\n    super.clear();\n\n    if (this.getInitialSearch()) {\n      this.clearInitialSearch();\n    } else {\n      m.redraw();\n    }\n  }\n\n  /**\n   * Get URL parameters that stick between filter changes.\n   *\n   * @return {Object}\n   */\n  stickyParams() {\n    return {\n      sort: m.route.param('sort'),\n      q: m.route.param('q'),\n    };\n  }\n\n  /**\n   * Get parameters to pass to the DiscussionList component.\n   *\n   * @return {Object}\n   */\n  params() {\n    const params = this.stickyParams();\n\n    params.filter = m.route.param('filter');\n\n    return params;\n  }\n\n  /**\n   * Redirect to the index page using the given sort parameter.\n   *\n   * @param {String} sort\n   */\n  changeSort(sort) {\n    const params = this.params();\n\n    if (sort === Object.keys(app.discussions.sortMap())[0]) {\n      delete params.sort;\n    } else {\n      params.sort = sort;\n    }\n\n    setRouteWithForcedRefresh(app.route(app.current.get('routeName'), params));\n  }\n\n  /**\n   * Return the current search query, if any. This is implemented to activate\n   * the search box in the header.\n   *\n   * @see Search\n   * @return {String}\n   */\n  getInitialSearch() {\n    return app.current.type && app.current.type.providesInitialSearch && this.params().q;\n  }\n\n  /**\n   * Redirect to the index page without a search filter. This is called when the\n   * 'x' is clicked in the search box in the header.\n   *\n   * @see Search\n   */\n  clearInitialSearch() {\n    const params = this.params();\n    delete params.q;\n\n    setRouteWithForcedRefresh(app.route(app.current.get('routeName'), params));\n  }\n}\n\nwindow.flreg.add('states/GlobalSearchState', GlobalSearchState)","/**\n * @see https://stackoverflow.com/a/31732310\n */\nexport default function isSafariMobile(): boolean {\n  return (\n    'ontouchstart' in window &&\n    navigator.vendor &&\n    navigator.vendor.includes('Apple') &&\n    navigator.userAgent &&\n    !navigator.userAgent.includes('CriOS') &&\n    !navigator.userAgent.includes('FxiOS')\n  );\n}\n\nwindow.flreg.add('utils/isSafariMobile', isSafariMobile)","import History from './utils/History';\nimport Pane from './utils/Pane';\nimport DiscussionPage from './components/DiscussionPage';\nimport HeaderPrimary from './components/HeaderPrimary';\nimport HeaderSecondary from './components/HeaderSecondary';\nimport Composer from './components/Composer';\nimport routes from './routes';\nimport alertEmailConfirmation from './utils/alertEmailConfirmation';\nimport Application from '../common/Application';\nimport Navigation from '../common/components/Navigation';\nimport NotificationListState from './states/NotificationListState';\nimport GlobalSearchState from './states/GlobalSearchState';\nimport DiscussionListState from './states/DiscussionListState';\nimport ComposerState from './states/ComposerState';\nimport isSafariMobile from './utils/isSafariMobile';\n\nexport default class ForumApplication extends Application {\n  /**\n   * An object which controls the state of the page's side pane.\n   *\n   * @type {Pane}\n   */\n  pane = null;\n\n  /**\n   * An object which controls the state of the page's drawer.\n   *\n   * @type {Drawer}\n   */\n  drawer = null;\n\n  /**\n   * The app's history stack, which keeps track of which routes the user visits\n   * so that they can easily navigate back to the previous route.\n   *\n   * @type {History}\n   */\n  history = new History();\n\n  /**\n   * An object which controls the state of the user's notifications.\n   *\n   * @type {NotificationListState}\n   */\n  notifications = new NotificationListState(this);\n\n  /*\n   * An object which stores previously searched queries and provides convenient\n   * tools for retrieving and managing search values.\n   *\n   * @type {GlobalSearchState}\n   */\n  search = new GlobalSearchState();\n\n  /*\n   * An object which controls the state of the composer.\n   */\n  composer = new ComposerState();\n\n  constructor() {\n    super();\n\n    routes(this);\n\n    /**\n     * An object which controls the state of the cached discussion list, which\n     * is used in the index page and the slideout pane.\n     *\n     * @type {DiscussionListState}\n     */\n    this.discussions = new DiscussionListState({}, this);\n  }\n\n  /**\n   * @inheritdoc\n   */\n  mount() {\n    // Get the configured default route and update that route's path to be '/'.\n    // Push the homepage as the first route, so that the user will always be\n    // able to click on the 'back' button to go home, regardless of which page\n    // they started on.\n    const defaultRoute = this.forum.attribute('defaultRoute');\n    let defaultAction = 'index';\n\n    for (const i in this.routes) {\n      if (this.routes[i].path === defaultRoute) defaultAction = i;\n    }\n\n    this.routes[defaultAction].path = '/';\n    this.history.push(defaultAction, this.translator.trans('core.forum.header.back_to_index_tooltip'), '/');\n\n    this.pane = new Pane(document.getElementById('app'));\n\n    m.route.prefix = '';\n    super.mount(this.forum.attribute('basePath'));\n\n    // We mount navigation and header components after the page, so components\n    // like the back button can access the updated state when rendering.\n    m.mount(document.getElementById('app-navigation'), { view: () => Navigation.component({ className: 'App-backControl', drawer: true }) });\n    m.mount(document.getElementById('header-navigation'), Navigation);\n    m.mount(document.getElementById('header-primary'), HeaderPrimary);\n    m.mount(document.getElementById('header-secondary'), HeaderSecondary);\n    m.mount(document.getElementById('composer'), { view: () => Composer.component({ state: this.composer }) });\n\n    alertEmailConfirmation(this);\n\n    // Route the home link back home when clicked. We do not want it to register\n    // if the user is opening it in a new tab, however.\n    $('#home-link').on('click tap', e => {\n      if (e.ctrlKey || e.metaKey || e.which === 2) return;\n      e.preventDefault();\n      app.history.home();\n\n      // Reload the current user so that their unread notification count is refreshed.\n      if (app.session.user) {\n        app.store.find('users', app.session.user.id());\n        m.redraw();\n      }\n    });\n\n    if (isSafariMobile()) {\n      $(() => {\n        $('.App').addClass('mobile-safari');\n      });\n    }\n  }\n\n  /**\n   * Check whether or not the user is currently viewing a discussion.\n   *\n   * @param {Discussion} discussion\n   * @return {Boolean}\n   */\n  async viewingDiscussion(discussion) {\n    return this.current.matches(DiscussionPage.default, { discussion });\n  }\n\n  /**\n   * Callback for when an external authenticator (social login) action has\n   * completed.\n   *\n   * If the payload indicates that the user has been logged in, then the page\n   * will be reloaded. Otherwise, a SignUpModal will be opened, prefilled\n   * with the provided details.\n   *\n   * @param {Object} payload A dictionary of attrs to pass into the sign up\n   *     modal. A truthy `loggedIn` attr indicates that the user has logged\n   *     in, and thus the page is reloaded.\n   * @public\n   */\n  authenticationComplete(payload) {\n    if (payload.loggedIn) {\n      window.location.reload();\n    } else {\n      const SignUpModal = () => import(/* webpackChunkName: \"forum/components/SignUpModal\" */ './components/SignUpModal');\n\n      this.modal.show(SignUpModal, payload);\n    }\n  }\n}\n\nwindow.flreg.add('forum/ForumApplication', ForumApplication)","import DiscussionPageResolver from './resolvers/DiscussionPageResolver';\nimport DiscussionPage from './components/DiscussionPage';\nimport NotificationsPage from './components/NotificationsPage';\n\n/**\n * The `routes` initializer defines the forum app's routes.\n *\n * @param {App} app\n */\nexport default function (app) {\n  const IndexPage = () => import(/* webpackChunkName: \"forum/components/IndexPage\" */ './components/IndexPage');\n  const PostsUserPage = () => import(/* webpackChunkName: \"forum/components/PostsUserPage\" */ './components/PostsUserPage');\n  const DiscussionsUserPage = () => import(/* webpackChunkName: \"forum/components/DiscussionsUserPage\" */ './components/DiscussionsUserPage');\n  const SettingsPage = () => import(/* webpackChunkName: \"forum/components/SettingsPage\" */ './components/SettingsPage');\n\n  app.routes = {\n    index: { path: '/all', component: IndexPage },\n\n    discussion: { path: '/d/:id', component: DiscussionPage, resolverClass: DiscussionPageResolver },\n    'discussion.near': { path: '/d/:id/:near', component: DiscussionPage, resolverClass: DiscussionPageResolver },\n\n    user: { path: '/u/:username', component: PostsUserPage },\n    'user.posts': { path: '/u/:username', component: PostsUserPage },\n    'user.discussions': { path: '/u/:username/discussions', component: DiscussionsUserPage },\n\n    settings: { path: '/settings', component: SettingsPage },\n    notifications: { path: '/notifications', component: NotificationsPage },\n  };\n\n  /**\n   * Generate a URL to a discussion.\n   *\n   * @param {Discussion} discussion\n   * @param {Integer} [near]\n   * @return {String}\n   */\n  app.route.discussion = (discussion, near) => {\n    return app.route(near && near !== 1 ? 'discussion.near' : 'discussion', {\n      id: discussion.slug(),\n      near: near && near !== 1 ? near : undefined,\n    });\n  };\n\n  /**\n   * Generate a URL to a post.\n   *\n   * @param {Post} post\n   * @return {String}\n   */\n  app.route.post = (post) => {\n    return app.route.discussion(post.discussion(), post.number());\n  };\n\n  /**\n   * Generate a URL to a user.\n   *\n   * @param {User} user\n   * @return {String}\n   */\n  app.route.user = (user) => {\n    return app.route('user', {\n      username: user.slug(),\n    });\n  };\n}\n","import Forum from './ForumApplication';\n\nconst app = new Forum();\n\n// @ts-ignore\nwindow.app = app;\n\nexport default app;\n","import Component from '../Component';\n\n/**\n * The `Placeholder` component displays a muted text with some call to action,\n * usually used as an empty state.\n *\n * ### Attrs\n *\n * - `text`\n */\nexport default class Placeholder extends Component {\n  view() {\n    return (\n      <div className=\"Placeholder\">\n        <p>{this.attrs.text}</p>\n      </div>\n    );\n  }\n}\n\nwindow.flreg.add('components/Placeholder', Placeholder)","import * as Mithril from 'mithril';\nimport { truncate } from '../utils/string';\n\n/**\n * The `highlight` helper searches for a word phrase in a string, and wraps\n * matches with the <mark> tag.\n *\n * @param string The string to highlight.\n * @param phrase The word or words to highlight.\n * @param [length] The number of characters to truncate the string to.\n *     The string will be truncated surrounding the first match.\n */\nexport default function highlight(string: string, phrase: string | RegExp, length?: number): Mithril.Vnode<any, any> | string {\n  if (!phrase && !length) return string;\n\n  // Convert the word phrase into a global regular expression (if it isn't\n  // already) so we can search the string for matched.\n  const regexp = phrase instanceof RegExp ? phrase : new RegExp(phrase, 'gi');\n\n  let highlighted = string;\n  let start = 0;\n\n  // If a length was given, the truncate the string surrounding the first match.\n  if (length) {\n    if (phrase) start = Math.max(0, string.search(regexp) - length / 2);\n\n    highlighted = truncate(highlighted, length, start);\n  }\n\n  // Convert the string into HTML entities, then highlight all matches with\n  // <mark> tags. Then we will return the result as a trusted HTML string.\n  highlighted = $('<div/>').text(highlighted).html();\n\n  if (phrase) highlighted = highlighted.replace(regexp, '<mark>$&</mark>');\n\n  return m.trust(highlighted);\n}\n\nwindow.flreg.add('helpers/highlight', highlight)","import dayjs from 'dayjs';\nimport * as Mithril from 'mithril';\nimport humanTimeUtil from '../utils/humanTime';\n\n/**\n * The `humanTime` helper displays a time in a human-friendly time-ago format\n * (e.g. '12 days ago'), wrapped in a <time> tag with other information about\n * the time.\n */\nexport default function humanTime(time: Date): Mithril.Vnode {\n  const d = dayjs(time);\n\n  const datetime = d.format();\n  const full = d.format('LLLL');\n  const ago = humanTimeUtil(time);\n\n  return (\n    <time pubdate datetime={datetime} title={full} data-humantime>\n      {ago}\n    </time>\n  );\n}\n\nwindow.flreg.add('helpers/humanTime', humanTime)","/**\n * The `SubtreeRetainer` class keeps track of a number of pieces of data,\n * comparing the values of these pieces at every iteration.\n *\n * This is useful for preventing redraws to relatively static (or huge)\n * components whose VDOM only depends on very few values, when none of them\n * have changed.\n *\n * @example\n * // Check two callbacks for changes on each update\n * this.subtree = new SubtreeRetainer(\n *   () => this.attrs.post.freshness,\n *   () => this.showing\n * );\n *\n * // Add more callbacks to be checked for updates\n * this.subtree.check(() => this.attrs.user.freshness);\n *\n * // In a component's onbeforeupdate() method:\n * return this.subtree.needsRebuild()\n *\n * @see https://mithril.js.org/lifecycle-methods.html#onbeforeupdate\n */\nexport default class SubtreeRetainer {\n  /**\n   * @param {...callbacks} callbacks Functions returning data to keep track of.\n   */\n  constructor(...callbacks) {\n    this.callbacks = callbacks;\n    this.data = {};\n    // Build the initial data, so it is available when calling\n    // needsRebuild from the onbeforeupdate hook.\n    this.needsRebuild();\n  }\n\n  /**\n   * Return whether any data has changed since the last check.\n   * If so, Mithril needs to re-diff the vnode and its children.\n   *\n   * @return {boolean}\n   * @public\n   */\n  needsRebuild() {\n    let needsRebuild = false;\n\n    this.callbacks.forEach((callback, i) => {\n      const result = callback();\n\n      if (result !== this.data[i]) {\n        this.data[i] = result;\n        needsRebuild = true;\n      }\n    });\n\n    return needsRebuild;\n  }\n\n  /**\n   * Add another callback to be checked.\n   *\n   * @param {...Function} callbacks\n   * @public\n   */\n  check(...callbacks) {\n    this.callbacks = this.callbacks.concat(callbacks);\n    // Update the data cache when new checks are added.\n    this.needsRebuild();\n  }\n\n  /**\n   * Invalidate the subtree, forcing it to be rerendered.\n   *\n   * @public\n   */\n  invalidate() {\n    this.data = {};\n  }\n}\n\nwindow.flreg.add('utils/SubtreeRetainer', SubtreeRetainer)","/**\n * Truncate a string to the given length, appending ellipses if necessary.\n */\nexport function truncate(string: string, length: number, start: number = 0): string {\n  return (start > 0 ? '...' : '') + string.substring(start, start + length) + (string.length > start + length ? '...' : '');\n}\n\n/**\n * Create a slug out of the given string. Non-alphanumeric characters are\n * converted to hyphens.\n *\n * NOTE: This method does not use the comparably sophisticated transliteration\n * mechanism that is employed in the backend. Therefore, it should only be used\n * to *suggest* slugs that can be overridden by the user.\n */\nexport function slug(string: string): string {\n  return string\n    .toLowerCase()\n    .replace(/[^a-z0-9]/gi, '-')\n    .replace(/-+/g, '-')\n    .replace(/-$|^-/g, '');\n}\n\n/**\n * Strip HTML tags and quotes out of the given string, replacing them with\n * meaningful punctuation.\n */\nexport function getPlainContent(string: string): string {\n  const html = string.replace(/(<\\/p>|<br>)/g, '$1 &nbsp;').replace(/<img\\b[^>]*>/gi, ' ');\n\n  const dom = $('<div/>').html(html);\n\n  dom.find(getPlainContent.removeSelectors.join(',')).remove();\n\n  return dom.text().replace(/\\s+/g, ' ').trim();\n}\n\n/**\n * An array of DOM selectors to remove when getting plain content.\n *\n * @type {Array}\n */\ngetPlainContent.removeSelectors = ['blockquote', 'script'];\n\n/**\n * Make a string's first character uppercase.\n */\nexport function ucfirst(string: string): string {\n  return string.substr(0, 1).toUpperCase() + string.substr(1);\n}\n\nwindow.flreg.add('utils/truncate', truncate)\nwindow.flreg.add('utils/slug', slug)\nwindow.flreg.add('utils/getPlainContent', getPlainContent)\nwindow.flreg.add('utils/ucfirst', ucfirst)","import Component from '../Component';\n\n/**\n * The `ConfirmDocumentUnload` component can be used to register a global\n * event handler that prevents closing the browser window/tab based on the\n * return value of a given callback prop.\n *\n * ### Attrs\n *\n * - `when` - a callback returning true when the browser should prompt for\n *            confirmation before closing the window/tab\n *\n * ### Children\n *\n * NOTE: Only the first child will be rendered. (Use this component to wrap\n * another component / DOM element.)\n *\n */\nexport default class ConfirmDocumentUnload extends Component {\n  handler() {\n    return this.attrs.when() || undefined;\n  }\n\n  oncreate(vnode) {\n    super.oncreate(vnode);\n\n    this.boundHandler = this.handler.bind(this);\n    $(window).on('beforeunload', this.boundHandler);\n  }\n\n  onremove() {\n    $(window).off('beforeunload', this.boundHandler);\n  }\n\n  view(vnode) {\n    // To avoid having to render another wrapping <div> here, we assume that\n    // this component is only wrapped around a single element / component.\n    return vnode.children[0];\n  }\n}\n\nwindow.flreg.add('components/ConfirmDocumentUnload', ConfirmDocumentUnload)","import Component from '../../common/Component';\nimport LoadingIndicator from '../../common/components/LoadingIndicator';\nimport ConfirmDocumentUnload from '../../common/components/ConfirmDocumentUnload';\nimport avatar from '../../common/helpers/avatar';\nimport listItems from '../../common/helpers/listItems';\nimport ItemList from '../../common/utils/ItemList';\n\n/**\n * The `ComposerBody` component handles the body, or the content, of the\n * composer. Subclasses should implement the `onsubmit` method and override\n * `headerTimes`.\n *\n * ### Attrs\n *\n * - `composer`\n * - `originalContent`\n * - `submitLabel`\n * - `placeholder`\n * - `user`\n * - `confirmExit`\n * - `disabled`\n *\n * @abstract\n */\nexport default class ComposerBody extends Component {\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    this.composer = this.attrs.composer;\n\n    /**\n     * Whether or not the component is loading.\n     *\n     * @type {Boolean}\n     */\n    this.loading = true;\n\n    import(/* webpackChunkName: \"common/components/TextEditor\" */ '../../common/components/TextEditor').then((TextEditor) => {\n      this.TextEditor = TextEditor.default;\n      this.loading = false;\n      m.redraw();\n    });\n\n    // Let the composer state know to ask for confirmation under certain\n    // circumstances, if the body supports / requires it and has a corresponding\n    // confirmation question to ask.\n    if (this.attrs.confirmExit) {\n      this.composer.preventClosingWhen(() => this.hasChanges(), this.attrs.confirmExit);\n    }\n\n    this.composer.fields.content(this.attrs.originalContent || '');\n  }\n\n  view() {\n    const TextEditor = this.TextEditor;\n\n    return (\n      <ConfirmDocumentUnload when={this.hasChanges.bind(this)}>\n        <div className={'ComposerBody ' + (this.attrs.className || '')}>\n          {avatar(this.attrs.user, { className: 'ComposerBody-avatar' })}\n          <div className=\"ComposerBody-content\">\n            <ul className=\"ComposerBody-header\">{listItems(this.headerItems().toArray())}</ul>\n            <div className=\"ComposerBody-editor\">\n              {TextEditor\n                ? TextEditor.component({\n                    submitLabel: this.attrs.submitLabel,\n                    placeholder: this.attrs.placeholder,\n                    disabled: this.loading || this.attrs.disabled,\n                    composer: this.composer,\n                    preview: this.jumpToPreview && this.jumpToPreview.bind(this),\n                    onchange: this.composer.fields.content,\n                    onsubmit: this.onsubmit.bind(this),\n                    value: this.composer.fields.content(),\n                  })\n                : ''}\n            </div>\n          </div>\n          {LoadingIndicator.component({ className: 'ComposerBody-loading' + (this.loading ? ' active' : '') })}\n        </div>\n      </ConfirmDocumentUnload>\n    );\n  }\n\n  /**\n   * Check if there is any unsaved data.\n   *\n   * @return {String}\n   */\n  hasChanges() {\n    const content = this.composer.fields.content();\n\n    return content && content !== this.attrs.originalContent;\n  }\n\n  /**\n   * Build an item list for the composer's header.\n   *\n   * @return {ItemList}\n   */\n  headerItems() {\n    return new ItemList();\n  }\n\n  /**\n   * Handle the submit event of the text editor.\n   *\n   * @abstract\n   */\n  onsubmit() {}\n\n  /**\n   * Stop loading.\n   */\n  loaded() {\n    this.loading = false;\n    m.redraw();\n  }\n}\n\nwindow.flreg.add('components/ComposerBody', ComposerBody)","/**\n * The `abbreviateNumber` utility converts a number to a shorter localized form.\n *\n * @example\n * abbreviateNumber(1234);\n * // \"1.2K\"\n */\nexport default function abbreviateNumber(number: number): string {\n  // TODO: translation\n  if (number >= 1000000) {\n    return Math.floor(number / 1000000) + app.translator.trans('core.lib.number_suffix.mega_text');\n  } else if (number >= 1000) {\n    return (number / 1000).toFixed(1) + app.translator.trans('core.lib.number_suffix.kilo_text');\n  } else {\n    return number.toString();\n  }\n}\n\nwindow.flreg.add('utils/abbreviateNumber', abbreviateNumber)","import Component from '../../common/Component';\nimport humanTime from '../../common/helpers/humanTime';\nimport icon from '../../common/helpers/icon';\n\n/**\n * Displays information about a the first or last post in a discussion.\n *\n * ### Attrs\n *\n * - `discussion`\n * - `lastPost`\n */\nexport default class TerminalPost extends Component {\n  view() {\n    const discussion = this.attrs.discussion;\n    const lastPost = this.attrs.lastPost && discussion.replyCount();\n\n    const user = discussion[lastPost ? 'lastPostedUser' : 'user']();\n    const time = discussion[lastPost ? 'lastPostedAt' : 'createdAt']();\n\n    return (\n      <span>\n        {lastPost ? icon('fas fa-reply') : ''}{' '}\n        {app.translator.trans('core.forum.discussion_list.' + (lastPost ? 'replied' : 'started') + '_text', {\n          user,\n          ago: humanTime(time),\n        })}\n      </span>\n    );\n  }\n}\n\nwindow.flreg.add('components/TerminalPost', TerminalPost)","/**\n * The `slidable` utility adds touch gestures to an element so that it can be\n * slid away to reveal controls underneath, and then released to activate those\n * controls.\n *\n * It relies on the element having children with particular CSS classes.\n * TODO: document\n *\n * @param {DOMElement} element\n * @return {Object}\n * @property {function} reset Revert the slider to its original position. This\n *     should be called, for example, when a controls dropdown is closed.\n */\nexport default function slidable(element) {\n  const $element = $(element);\n  const threshold = 50;\n\n  let $underneathLeft;\n  let $underneathRight;\n\n  let startX;\n  let startY;\n  let couldBeSliding = false;\n  let isSliding = false;\n  let pos = 0;\n\n  /**\n   * Animate the slider to a new position.\n   *\n   * @param {Integer} newPos\n   * @param {Object} [options]\n   */\n  const animatePos = (newPos, options = {}) => {\n    // Since we can't animate the transform property with jQuery, we'll use a\n    // bit of a workaround. We set up the animation with a step function that\n    // will set the transform property, but then we animate an unused property\n    // (background-position-x) with jQuery.\n    options.duration = options.duration || 'fast';\n    options.step = function (x) {\n      $(this).css('transform', 'translate(' + x + 'px, 0)');\n    };\n\n    $element.find('.Slidable-content').animate({ 'background-position-x': newPos }, options);\n  };\n\n  /**\n   * Revert the slider to its original position.\n   */\n  const reset = () => {\n    animatePos(0, {\n      complete: function () {\n        $element.removeClass('sliding');\n        $underneathLeft.hide();\n        $underneathRight.hide();\n        isSliding = false;\n      },\n    });\n  };\n\n  $element\n    .find('.Slidable-content')\n    .on('touchstart', function (e) {\n      // Update the references to the elements underneath the slider, provided\n      // they're not disabled.\n      $underneathLeft = $element.find('.Slidable-underneath--left:not(.disabled)');\n      $underneathRight = $element.find('.Slidable-underneath--right:not(.disabled)');\n\n      startX = e.originalEvent.targetTouches[0].clientX;\n      startY = e.originalEvent.targetTouches[0].clientY;\n\n      couldBeSliding = true;\n      pos = 0;\n    })\n\n    .on('touchmove', function (e) {\n      const newX = e.originalEvent.targetTouches[0].clientX;\n      const newY = e.originalEvent.targetTouches[0].clientY;\n\n      // Once the user moves their touch in a direction that's more up/down than\n      // left/right, we'll assume they're scrolling the page. But if they do\n      // move in a horizontal direction at first, then we'll lock their touch\n      // into the slider.\n      if (couldBeSliding && Math.abs(newX - startX) > Math.abs(newY - startY)) {\n        isSliding = true;\n      }\n      couldBeSliding = false;\n\n      if (isSliding) {\n        pos = newX - startX;\n\n        // If there are controls underneath the either side, then we'll show/hide\n        // them depending on the slider's position. We also make the controls\n        // icon get a bit bigger the further they slide.\n        const toggle = ($underneath, side) => {\n          if ($underneath.length) {\n            const active = side === 'left' ? pos > 0 : pos < 0;\n\n            if (active && $underneath.hasClass('Slidable-underneath--elastic')) {\n              pos -= pos * 0.5;\n            }\n            $underneath.toggle(active);\n\n            const scale = Math.max(0, Math.min(1, (Math.abs(pos) - 25) / threshold));\n            $underneath.find('.icon').css('transform', 'scale(' + scale + ')');\n          } else {\n            pos = Math[side === 'left' ? 'min' : 'max'](0, pos);\n          }\n        };\n\n        toggle($underneathLeft, 'left');\n        toggle($underneathRight, 'right');\n\n        $(this).css('transform', 'translate(' + pos + 'px, 0)');\n        $(this).css('background-position-x', pos + 'px');\n\n        $element.toggleClass('sliding', !!pos);\n\n        e.preventDefault();\n      }\n    })\n\n    .on('touchend', function () {\n      // If the user releases the touch and the slider is past the threshold\n      // position on either side, then we will activate the control for that\n      // side. We will also animate the slider's position all the way to the\n      // other side, or back to its original position, depending on whether or\n      // not the side is 'elastic'.\n      const activate = ($underneath) => {\n        $underneath.trigger('click');\n\n        if ($underneath.hasClass('Slidable-underneath--elastic')) {\n          reset();\n        } else {\n          animatePos((pos > 0 ? 1 : -1) * $element.width());\n        }\n      };\n\n      if ($underneathRight.length && pos < -threshold) {\n        activate($underneathRight);\n      } else if ($underneathLeft.length && pos > threshold) {\n        activate($underneathLeft);\n      } else {\n        reset();\n      }\n\n      couldBeSliding = false;\n      isSliding = false;\n    });\n\n  return { reset };\n}\n\nwindow.flreg.add('utils/slidable', slidable)","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nexport default arrayMap;\n","import Symbol from './_Symbol.js';\nimport arrayMap from './_arrayMap.js';\nimport isArray from './isArray.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nexport default baseToString;\n","import baseToString from './_baseToString.js';\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nexport default toString;\n","import toString from './toString.js';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n    reHasRegExpChar = RegExp(reRegExpChar.source);\n\n/**\n * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to escape.\n * @returns {string} Returns the escaped string.\n * @example\n *\n * _.escapeRegExp('[lodash](https://lodash.com/)');\n * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n */\nfunction escapeRegExp(string) {\n  string = toString(string);\n  return (string && reHasRegExpChar.test(string))\n    ? string.replace(reRegExpChar, '\\\\$&')\n    : string;\n}\n\nexport default escapeRegExp;\n","import Component from '../../common/Component';\nimport Link from '../../common/components/Link';\nimport avatar from '../../common/helpers/avatar';\nimport listItems from '../../common/helpers/listItems';\nimport highlight from '../../common/helpers/highlight';\nimport icon from '../../common/helpers/icon';\nimport humanTime from '../../common/utils/humanTime';\nimport ItemList from '../../common/utils/ItemList';\nimport abbreviateNumber from '../../common/utils/abbreviateNumber';\nimport Dropdown from '../../common/components/Dropdown';\nimport TerminalPost from './TerminalPost';\nimport SubtreeRetainer from '../../common/utils/SubtreeRetainer';\nimport DiscussionControls from '../utils/DiscussionControls';\nimport slidable from '../utils/slidable';\nimport extractText from '../../common/utils/extractText';\nimport classList from '../../common/utils/classList';\nimport DiscussionPage from './DiscussionPage';\n\nimport { escapeRegExp } from 'lodash-es';\n/**\n * The `DiscussionListItem` component shows a single discussion in the\n * discussion list.\n *\n * ### Attrs\n *\n * - `discussion`\n * - `params`\n */\nexport default class DiscussionListItem extends Component {\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    /**\n     * Set up a subtree retainer so that the discussion will not be redrawn\n     * unless new data comes in.\n     *\n     * @type {SubtreeRetainer}\n     */\n    this.subtree = new SubtreeRetainer(\n      () => this.attrs.discussion.freshness,\n      () => {\n        const time = app.session.user && app.session.user.markedAllAsReadAt();\n        return time && time.getTime();\n      },\n      () => this.active()\n    );\n  }\n\n  elementAttrs() {\n    return {\n      className: classList([\n        'DiscussionListItem',\n        this.active() ? 'active' : '',\n        this.attrs.discussion.isHidden() ? 'DiscussionListItem--hidden' : '',\n        'ontouchstart' in window ? 'Slidable' : '',\n      ]),\n    };\n  }\n\n  view() {\n    const discussion = this.attrs.discussion;\n    const user = discussion.user();\n    const isUnread = discussion.isUnread();\n    const isRead = discussion.isRead();\n    const showUnread = !this.showRepliesCount() && isUnread;\n    let jumpTo = 0;\n    const controls = new DiscussionControls().controls(discussion, this).toArray();\n    const attrs = this.elementAttrs();\n\n    if (this.attrs.params.q) {\n      const post = discussion.mostRelevantPost();\n      if (post) {\n        jumpTo = post.number();\n      }\n\n      const phrase = escapeRegExp(this.attrs.params.q);\n      this.highlightRegExp = new RegExp(phrase + '|' + phrase.trim().replace(/\\s+/g, '|'), 'gi');\n    } else {\n      jumpTo = Math.min(discussion.lastPostNumber(), (discussion.lastReadPostNumber() || 0) + 1);\n    }\n\n    return (\n      <div {...attrs}>\n        {controls.length\n          ? Dropdown.component(\n              {\n                icon: 'fas fa-ellipsis-v',\n                className: 'DiscussionListItem-controls',\n                buttonClassName: 'Button Button--icon Button--flat Slidable-underneath Slidable-underneath--right',\n                accessibleToggleLabel: app.translator.trans('core.forum.discussion_controls.toggle_dropdown_accessible_label'),\n              },\n              controls\n            )\n          : ''}\n\n        <span\n          className={'Slidable-underneath Slidable-underneath--left Slidable-underneath--elastic' + (isUnread ? '' : ' disabled')}\n          onclick={this.markAsRead.bind(this)}\n        >\n          {icon('fas fa-check')}\n        </span>\n\n        <div className={'DiscussionListItem-content Slidable-content' + (isUnread ? ' unread' : '') + (isRead ? ' read' : '')}>\n          <Link\n            href={user ? app.route.user(user) : '#'}\n            className=\"DiscussionListItem-author\"\n            title={extractText(\n              app.translator.trans('core.forum.discussion_list.started_text', { user: user, ago: humanTime(discussion.createdAt()) })\n            )}\n            oncreate={function (vnode) {\n              $(vnode.dom).tooltip({ placement: 'right' });\n            }}\n          >\n            {avatar(user, { title: '' })}\n          </Link>\n\n          <ul className=\"DiscussionListItem-badges badges\">{listItems(discussion.badges().toArray())}</ul>\n\n          <Link href={app.route.discussion(discussion, jumpTo)} className=\"DiscussionListItem-main\">\n            <h3 className=\"DiscussionListItem-title\">{highlight(discussion.title(), this.highlightRegExp)}</h3>\n            <ul className=\"DiscussionListItem-info\">{listItems(this.infoItems().toArray())}</ul>\n          </Link>\n\n          <span\n            tabindex=\"0\"\n            role=\"button\"\n            className=\"DiscussionListItem-count\"\n            onclick={this.markAsRead.bind(this)}\n            title={showUnread ? app.translator.trans('core.forum.discussion_list.mark_as_read_tooltip') : ''}\n          >\n            {abbreviateNumber(discussion[showUnread ? 'unreadCount' : 'replyCount']())}\n          </span>\n        </div>\n      </div>\n    );\n  }\n\n  oncreate(vnode) {\n    super.oncreate(vnode);\n\n    // If we're on a touch device, set up the discussion row to be slidable.\n    // This allows the user to drag the row to either side of the screen to\n    // reveal controls.\n    if ('ontouchstart' in window) {\n      const slidableInstance = slidable(this.$());\n\n      this.$('.DiscussionListItem-controls').on('hidden.bs.dropdown', () => slidableInstance.reset());\n    }\n  }\n\n  onbeforeupdate(vnode, old) {\n    super.onbeforeupdate(vnode, old);\n\n    return this.subtree.needsRebuild();\n  }\n\n  /**\n   * Determine whether or not the discussion is currently being viewed.\n   *\n   * @return {Boolean}\n   */\n  active() {\n    return app.current.matches(DiscussionPage, { discussion: this.attrs.discussion });\n  }\n\n  /**\n   * Determine whether or not information about who started the discussion\n   * should be displayed instead of information about the most recent reply to\n   * the discussion.\n   *\n   * @return {Boolean}\n   */\n  showFirstPost() {\n    return ['newest', 'oldest'].indexOf(this.attrs.params.sort) !== -1;\n  }\n\n  /**\n   * Determine whether or not the number of replies should be shown instead of\n   * the number of unread posts.\n   *\n   * @return {Boolean}\n   */\n  showRepliesCount() {\n    return this.attrs.params.sort === 'replies';\n  }\n\n  /**\n   * Mark the discussion as read.\n   */\n  markAsRead() {\n    const discussion = this.attrs.discussion;\n\n    if (discussion.isUnread()) {\n      discussion.save({ lastReadPostNumber: discussion.lastPostNumber() });\n      m.redraw();\n    }\n  }\n\n  /**\n   * Build an item list of info for a discussion listing. By default this is\n   * just the first/last post indicator.\n   *\n   * @return {ItemList}\n   */\n  infoItems() {\n    const items = new ItemList();\n\n    if (this.attrs.params.q) {\n      const post = this.attrs.discussion.mostRelevantPost() || this.attrs.discussion.firstPost();\n\n      if (post && post.contentType() === 'comment') {\n        const excerpt = highlight(post.contentPlain(), this.highlightRegExp, 175);\n        items.add('excerpt', excerpt, -100);\n      }\n    } else {\n      items.add(\n        'terminalPost',\n        TerminalPost.component({\n          discussion: this.attrs.discussion,\n          lastPost: !this.showFirstPost(),\n        })\n      );\n    }\n\n    return items;\n  }\n}\n\nwindow.flreg.add('components/DiscussionListItem', DiscussionListItem)","import Component from '../../common/Component';\nimport DiscussionListItem from './DiscussionListItem';\nimport Button from '../../common/components/Button';\nimport LoadingIndicator from '../../common/components/LoadingIndicator';\nimport Placeholder from '../../common/components/Placeholder';\n\n/**\n * The `DiscussionList` component displays a list of discussions.\n *\n * ### Attrs\n *\n * - `state` A DiscussionListState object that represents the discussion lists's state.\n */\nexport default class DiscussionList extends Component {\n  view() {\n    const state = this.attrs.state;\n\n    const params = state.getParams();\n    let loading;\n\n    if (state.isLoading()) {\n      loading = LoadingIndicator.component();\n    } else if (state.moreResults) {\n      loading = Button.component(\n        {\n          className: 'Button',\n          onclick: state.loadMore.bind(state),\n        },\n        app.translator.trans('core.forum.discussion_list.load_more_button')\n      );\n    }\n\n    if (state.empty()) {\n      const text = app.translator.trans('core.forum.discussion_list.empty_text');\n      return <div className=\"DiscussionList\">{Placeholder.component({ text })}</div>;\n    }\n\n    return (\n      <div className={'DiscussionList' + (state.isSearchResults() ? ' DiscussionList--searchResults' : '')}>\n        <ul className=\"DiscussionList-discussions\">\n          {state.discussions.map((discussion) => {\n            return (\n              <li key={discussion.id()} data-id={discussion.id()}>\n                {DiscussionListItem.component({ discussion, params })}\n              </li>\n            );\n          })}\n        </ul>\n        <div className=\"DiscussionList-loadMore\">{loading}</div>\n      </div>\n    );\n  }\n}\n\nwindow.flreg.add('components/DiscussionList', DiscussionList)","import Component from '../../common/Component';\nimport ItemList from '../../common/utils/ItemList';\nimport listItems from '../../common/helpers/listItems';\n\n/**\n * The `DiscussionHero` component displays the hero on a discussion page.\n *\n * ### attrs\n *\n * - `discussion`\n */\nexport default class DiscussionHero extends Component {\n  view() {\n    return (\n      <header className=\"Hero DiscussionHero\">\n        <div className=\"container\">\n          <ul className=\"DiscussionHero-items\">{listItems(this.items().toArray())}</ul>\n        </div>\n      </header>\n    );\n  }\n\n  /**\n   * Build an item list for the contents of the discussion hero.\n   *\n   * @return {ItemList}\n   */\n  items() {\n    const items = new ItemList();\n    const discussion = this.attrs.discussion;\n    const badges = discussion.badges().toArray();\n\n    if (badges.length) {\n      items.add('badges', <ul className=\"DiscussionHero-badges badges\">{listItems(badges)}</ul>, 10);\n    }\n\n    items.add('title', <h2 className=\"DiscussionHero-title\">{discussion.title()}</h2>);\n\n    return items;\n  }\n}\n\nwindow.flreg.add('components/DiscussionHero', DiscussionHero)","import DiscussionList from './DiscussionList';\nimport Component from '../../common/Component';\nimport DiscussionPage from './DiscussionPage';\n\nconst hotEdge = (e) => {\n  if (e.pageX < 10) app.pane.show();\n};\n\n/**\n * The `DiscussionListPane` component displays the list of previously viewed\n * discussions in a panel that can be displayed by moving the mouse to the left\n * edge of the screen, where it can also be pinned in place.\n *\n * ### Attrs\n *\n * - `state` A DiscussionListState object that represents the discussion lists's state.\n */\nexport default class DiscussionListPane extends Component {\n  view() {\n    if (!this.attrs.state.hasDiscussions()) {\n      return;\n    }\n\n    return <div className=\"DiscussionPage-list\">{this.enoughSpace() && <DiscussionList state={this.attrs.state} />}</div>;\n  }\n\n  oncreate(vnode) {\n    super.oncreate(vnode);\n\n    const $list = $(vnode.dom);\n\n    // When the mouse enters and leaves the discussions pane, we want to show\n    // and hide the pane respectively. We also create a 10px 'hot edge' on the\n    // left of the screen to activate the pane.\n    const pane = app.pane;\n    $list.hover(pane.show.bind(pane), pane.onmouseleave.bind(pane));\n\n    $(document).on('mousemove', hotEdge);\n\n    // When coming from another discussion, scroll to the previous postition\n    // to prevent the discussion list jumping around.\n    if (app.previous.matches(DiscussionPage)) {\n      const top = app.cache.discussionListPaneScrollTop || 0;\n      $list.scrollTop(top);\n    } else {\n      // If the discussion we are viewing is listed in the discussion list, then\n      // we will make sure it is visible in the viewport – if it is not we will\n      // scroll the list down to it.\n      const $discussion = $list.find('.DiscussionListItem.active');\n      if ($discussion.length) {\n        const listTop = $list.offset().top;\n        const listBottom = listTop + $list.outerHeight();\n        const discussionTop = $discussion.offset().top;\n        const discussionBottom = discussionTop + $discussion.outerHeight();\n\n        if (discussionTop < listTop || discussionBottom > listBottom) {\n          $list.scrollTop($list.scrollTop() - listTop + discussionTop);\n        }\n      }\n    }\n  }\n\n  onremove(vnode) {\n    app.cache.discussionListPaneScrollTop = $(vnode.dom).scrollTop();\n    $(document).off('mousemove', hotEdge);\n  }\n\n  /**\n   * Are we on a device that's larger than we consider \"mobile\"?\n   *\n   * @returns {boolean}\n   */\n  enoughSpace() {\n    return !$('.App-navigation').is(':visible');\n  }\n}\n\nwindow.flreg.add('components/DiscussionListPane', DiscussionListPane)","/**\n * The `formatNumber` utility localizes a number into a string with the\n * appropriate punctuation.\n *\n * @example\n * formatNumber(1234);\n * // 1,234\n */\nexport default function formatNumber(number: number): string {\n  return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n}\n\nwindow.flreg.add('utils/formatNumber', formatNumber)","import Component from '../../common/Component';\nimport icon from '../../common/helpers/icon';\nimport formatNumber from '../../common/utils/formatNumber';\nimport ScrollListener from '../../common/utils/ScrollListener';\n\n/**\n * The `PostStreamScrubber` component displays a scrubber which can be used to\n * navigate/scrub through a post stream.\n *\n * ### Attrs\n *\n * - `stream`\n * - `className`\n */\nexport default class PostStreamScrubber extends Component {\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    this.stream = this.attrs.stream;\n    this.handlers = {};\n\n    this.scrollListener = new ScrollListener(this.updateScrubberValues.bind(this, { fromScroll: true, forceHeightChange: true }));\n  }\n\n  view() {\n    const count = this.stream.count();\n\n    // Index is left blank for performance reasons, it is filled in in updateScubberValues\n    const viewing = app.translator.transChoice('core.forum.post_scrubber.viewing_text', count, {\n      index: <span className=\"Scrubber-index\"></span>,\n      count: <span className=\"Scrubber-count\">{formatNumber(count)}</span>,\n    });\n\n    const unreadCount = this.stream.discussion.unreadCount();\n    const unreadPercent = count ? Math.min(count - this.stream.index, unreadCount) / count : 0;\n\n    function styleUnread(vnode) {\n      const $element = $(vnode.dom);\n      const newStyle = {\n        top: 100 - unreadPercent * 100 + '%',\n        height: unreadPercent * 100 + '%',\n      };\n\n      if (vnode.state.oldStyle) {\n        $element.stop(true).css(vnode.state.oldStyle).animate(newStyle);\n      } else {\n        $element.css(newStyle);\n      }\n\n      vnode.state.oldStyle = newStyle;\n    }\n    const classNames = ['PostStreamScrubber', 'Dropdown'];\n    if (this.attrs.className) classNames.push(this.attrs.className);\n\n    return (\n      <div className={classNames.join(' ')}>\n        <button className=\"Button Dropdown-toggle\" data-toggle=\"dropdown\">\n          {viewing} {icon('fas fa-sort')}\n        </button>\n\n        <div className=\"Dropdown-menu dropdown-menu\">\n          <div className=\"Scrubber\">\n            <a className=\"Scrubber-first\" onclick={this.goToFirst.bind(this)}>\n              {icon('fas fa-angle-double-up')} {app.translator.trans('core.forum.post_scrubber.original_post_link')}\n            </a>\n\n            <div className=\"Scrubber-scrollbar\">\n              <div className=\"Scrubber-before\" />\n              <div className=\"Scrubber-handle\">\n                <div className=\"Scrubber-bar\" />\n                <div className=\"Scrubber-info\">\n                  <strong>{viewing}</strong>\n                  <span className=\"Scrubber-description\"></span>\n                </div>\n              </div>\n              <div className=\"Scrubber-after\" />\n\n              <div className=\"Scrubber-unread\" oncreate={styleUnread} onupdate={styleUnread}>\n                {app.translator.trans('core.forum.post_scrubber.unread_text', { count: unreadCount })}\n              </div>\n            </div>\n\n            <a className=\"Scrubber-last\" onclick={this.goToLast.bind(this)}>\n              {icon('fas fa-angle-double-down')} {app.translator.trans('core.forum.post_scrubber.now_link')}\n            </a>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  onupdate() {\n    if (this.stream.forceUpdateScrubber) {\n      this.stream.forceUpdateScrubber = false;\n      this.stream.loadPromise.then(() => this.updateScrubberValues({ animate: true, forceHeightChange: true }));\n    }\n  }\n\n  oncreate(vnode) {\n    super.oncreate(vnode);\n\n    // Whenever the window is resized, adjust the height of the scrollbar\n    // so that it fills the height of the sidebar.\n    $(window)\n      .on('resize', (this.handlers.onresize = this.onresize.bind(this)))\n      .resize();\n\n    // When any part of the whole scrollbar is clicked, we want to jump to\n    // that position.\n    this.$('.Scrubber-scrollbar')\n      .bind('click', this.onclick.bind(this))\n\n      // Now we want to make the scrollbar handle draggable. Let's start by\n      // preventing default browser events from messing things up.\n      .bind('dragstart mousedown touchstart', (e) => e.preventDefault());\n\n    // When the mouse is pressed on the scrollbar handle, we capture some\n    // information about its current position. We will store this\n    // information in an object and pass it on to the document's\n    // mousemove/mouseup events later.\n    this.dragging = false;\n    this.mouseStart = 0;\n    this.indexStart = 0;\n\n    this.$('.Scrubber-handle')\n      .on('mousedown touchstart', this.onmousedown.bind(this))\n\n      // Exempt the scrollbar handle from the 'jump to' click event.\n      .on('click', e => e.stopPropagation());\n\n    // When the mouse moves and when it is released, we pass the\n    // information that we captured when the mouse was first pressed onto\n    // some event handlers. These handlers will move the scrollbar/stream-\n    // content as appropriate.\n    $(document)\n      .on('mousemove touchmove', (this.handlers.onmousemove = this.onmousemove.bind(this)))\n      .on('mouseup touchend', (this.handlers.onmouseup = this.onmouseup.bind(this)));\n\n    setTimeout(() => this.scrollListener.start());\n\n    this.stream.loadPromise.then(() => this.updateScrubberValues({ animate: false, forceHeightChange: true }));\n  }\n\n  onremove() {\n    this.scrollListener.stop();\n    $(window).off('resize', this.handlers.onresize);\n\n    $(document).off('mousemove touchmove', this.handlers.onmousemove).off('mouseup touchend', this.handlers.onmouseup);\n  }\n\n  /**\n   * Update the scrollbar's position to reflect the current values of the\n   * index/visible properties.\n   *\n   * @param {Boolean} animate\n   */\n  updateScrubberValues(options = {}) {\n    const index = this.stream.index;\n    const count = this.stream.count();\n    const visible = this.stream.visible || 1;\n    const percentPerPost = this.percentPerPost();\n\n    const $scrubber = this.$();\n    $scrubber.find('.Scrubber-index').text(formatNumber(this.stream.sanitizeIndex(Math.max(1, index))));\n    $scrubber.find('.Scrubber-description').text(this.stream.description);\n    $scrubber.toggleClass('disabled', this.stream.disabled());\n\n    const heights = {};\n    heights.before = Math.max(0, percentPerPost.index * Math.min(index - 1, count - visible));\n    heights.handle = Math.min(100 - heights.before, percentPerPost.visible * visible);\n    heights.after = 100 - heights.before - heights.handle;\n\n    // If the stream is paused, don't change height on scroll, as the viewport is being scrolled by the JS\n    // If a height change animation is already in progress, don't adjust height unless overriden\n    if ((options.fromScroll && this.stream.paused) || (this.adjustingHeight && !options.forceHeightChange)) return;\n\n    const func = options.animate ? 'animate' : 'css';\n    this.adjustingHeight = true;\n    const animationPromises = [];\n    for (const part in heights) {\n      const $part = $scrubber.find(`.Scrubber-${part}`);\n      animationPromises.push(\n        $part\n          .stop(true, true)\n          [func]({ height: heights[part] + '%' }, 'fast')\n          .promise()\n      );\n\n      // jQuery likes to put overflow:hidden, but because the scrollbar handle\n      // has a negative margin-left, we need to override.\n      if (func === 'animate') $part.css('overflow', 'visible');\n    }\n    Promise.all(animationPromises).then(() => (this.adjustingHeight = false));\n  }\n\n  /**\n   * Go to the first post in the discussion.\n   */\n  goToFirst() {\n    this.stream.goToFirst();\n    this.updateScrubberValues({ animate: true, forceHeightChange: true });\n  }\n\n  /**\n   * Go to the last post in the discussion.\n   */\n  goToLast() {\n    this.stream.goToLast();\n    this.updateScrubberValues({ animate: true, forceHeightChange: true });\n  }\n\n  onresize() {\n    // Adjust the height of the scrollbar so that it fills the height of\n    // the sidebar and doesn't overlap the footer.\n    const scrubber = this.$();\n    const scrollbar = this.$('.Scrubber-scrollbar');\n\n    scrollbar.css(\n      'max-height',\n      $(window).height() -\n        scrubber.offset().top +\n        $(window).scrollTop() -\n        parseInt($('#app').css('padding-bottom'), 10) -\n        (scrubber.outerHeight() - scrollbar.outerHeight())\n    );\n  }\n\n  onmousedown(e) {\n    e.redraw = false;\n    this.mouseStart = e.clientY || e.originalEvent.touches[0].clientY;\n    this.indexStart = this.stream.index;\n    this.dragging = true;\n    $('body').css('cursor', 'move');\n    this.$().toggleClass('dragging', this.dragging);\n  }\n\n  onmousemove(e) {\n    if (!this.dragging) return;\n\n    // Work out how much the mouse has moved by - first in pixels, then\n    // convert it to a percentage of the scrollbar's height, and then\n    // finally convert it into an index. Add this delta index onto\n    // the index at which the drag was started, and then scroll there.\n    const deltaPixels = (e.clientY || e.originalEvent.touches[0].clientY) - this.mouseStart;\n    const deltaPercent = (deltaPixels / this.$('.Scrubber-scrollbar').outerHeight()) * 100;\n    const deltaIndex = deltaPercent / this.percentPerPost().index || 0;\n    const newIndex = Math.min(this.indexStart + deltaIndex, this.stream.count() - 1);\n\n    this.stream.index = Math.max(0, newIndex);\n    this.updateScrubberValues();\n  }\n\n  onmouseup() {\n    this.$().toggleClass('dragging', this.dragging);\n    if (!this.dragging) return;\n\n    this.mouseStart = 0;\n    this.indexStart = 0;\n    this.dragging = false;\n    $('body').css('cursor', '');\n\n    this.$().removeClass('open');\n\n    // If the index we've landed on is in a gap, then tell the stream-\n    // content that we want to load those posts.\n    const intIndex = Math.floor(this.stream.index);\n    this.stream.goToIndex(intIndex);\n  }\n\n  onclick(e) {\n    // Calculate the index which we want to jump to based on the click position.\n\n    // 1. Get the offset of the click from the top of the scrollbar, as a\n    //    percentage of the scrollbar's height.\n    const $scrollbar = this.$('.Scrubber-scrollbar');\n    const offsetPixels = (e.pageY || e.originalEvent.touches[0].pageY) - $scrollbar.offset().top + $('body').scrollTop();\n    let offsetPercent = (offsetPixels / $scrollbar.outerHeight()) * 100;\n\n    // 2. We want the handle of the scrollbar to end up centered on the click\n    //    position. Thus, we calculate the height of the handle in percent and\n    //    use that to find a new offset percentage.\n    offsetPercent = offsetPercent - parseFloat($scrollbar.find('.Scrubber-handle')[0].style.height) / 2;\n\n    // 3. Now we can convert the percentage into an index, and tell the stream-\n    //    content component to jump to that index.\n    let offsetIndex = offsetPercent / this.percentPerPost().index;\n    offsetIndex = Math.max(0, Math.min(this.stream.count() - 1, offsetIndex));\n    this.stream.goToIndex(Math.floor(offsetIndex));\n    this.updateScrubberValues({ animate: true, forceHeightChange: true });\n\n    this.$().removeClass('open');\n  }\n\n  /**\n   * Get the percentage of the height of the scrubber that should be allocated\n   * to each post.\n   *\n   * @return {Object}\n   * @property {Number} index The percent per post for posts on either side of\n   *     the visible part of the scrubber.\n   * @property {Number} visible The percent per post for the visible part of the\n   *     scrubber.\n   */\n  percentPerPost() {\n    const count = this.stream.count() || 1;\n    const visible = this.stream.visible || 1;\n\n    // To stop the handle of the scrollbar from getting too small when there\n    // are many posts, we define a minimum percentage height for the handle\n    // calculated from a 50 pixel limit. From this, we can calculate the\n    // minimum percentage per visible post. If this is greater than the actual\n    // percentage per post, then we need to adjust the 'before' percentage to\n    // account for it.\n    const minPercentVisible = (50 / this.$('.Scrubber-scrollbar').outerHeight()) * 100;\n    const percentPerVisiblePost = Math.max(100 / count, minPercentVisible / visible);\n    const percentPerPost = count === visible ? 0 : (100 - percentPerVisiblePost * visible) / (count - visible);\n\n    return {\n      index: percentPerPost,\n      visible: percentPerVisiblePost,\n    };\n  }\n}\n\nwindow.flreg.add('components/PostStreamScrubber', PostStreamScrubber)","import Dropdown from './Dropdown';\nimport Button from './Button';\nimport icon from '../helpers/icon';\n\n/**\n * The `SplitDropdown` component is similar to `Dropdown`, but the first child\n * is displayed as its own button prior to the toggle button.\n */\nexport default class SplitDropdown extends Dropdown {\n  static initAttrs(attrs) {\n    super.initAttrs(attrs);\n\n    attrs.className += ' Dropdown--split';\n    attrs.menuClassName += ' Dropdown-menu--right';\n  }\n\n  getButton(children) {\n    // Make a copy of the attrs of the first child component. We will assign\n    // these attrs to a new button, so that it has exactly the same behaviour as\n    // the first child.\n    const firstChild = this.getFirstChild(children);\n    const buttonAttrs = Object.assign({}, firstChild.attrs);\n    buttonAttrs.className = (buttonAttrs.className || '') + ' SplitDropdown-button Button ' + this.attrs.buttonClassName;\n\n    return [\n      Button.component(buttonAttrs, firstChild.children),\n      <button\n        className={'Dropdown-toggle Button Button--icon ' + this.attrs.buttonClassName}\n        aria-haspopup=\"menu\"\n        aria-label={this.attrs.accessibleToggleLabel}\n        data-toggle=\"dropdown\"\n      >\n        {icon(this.attrs.icon, { className: 'Button-icon' })}\n        {icon('fas fa-caret-down', { className: 'Button-caret' })}\n      </button>,\n    ];\n  }\n\n  /**\n   * Get the first child. If the first child is an array, the first item in that\n   * array will be returned.\n   *\n   * @return {*}\n   * @protected\n   */\n  getFirstChild(children) {\n    let firstChild = children;\n\n    while (firstChild instanceof Array) firstChild = firstChild[0];\n\n    return firstChild;\n  }\n}\n\nwindow.flreg.add('components/SplitDropdown', SplitDropdown)","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nexport default isObject;\n","import root from './_root.js';\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\nexport default now;\n","/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nexport default trimmedEndIndex;\n","import trimmedEndIndex from './_trimmedEndIndex.js';\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nexport default baseTrim;\n","import baseTrim from './_baseTrim.js';\nimport isObject from './isObject.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nexport default toNumber;\n","import isObject from './isObject.js';\nimport now from './now.js';\nimport toNumber from './toNumber.js';\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        timeWaiting = wait - timeSinceLastCall;\n\n    return maxing\n      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n      : timeWaiting;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        clearTimeout(timerId);\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\nexport default debounce;\n","import debounce from './debounce.js';\nimport isObject from './isObject.js';\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a throttled function that only invokes `func` at most once per\n * every `wait` milliseconds. The throttled function comes with a `cancel`\n * method to cancel delayed `func` invocations and a `flush` method to\n * immediately invoke them. Provide `options` to indicate whether `func`\n * should be invoked on the leading and/or trailing edge of the `wait`\n * timeout. The `func` is invoked with the last arguments provided to the\n * throttled function. Subsequent calls to the throttled function return the\n * result of the last `func` invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the throttled function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.throttle` and `_.debounce`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to throttle.\n * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=true]\n *  Specify invoking on the leading edge of the timeout.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new throttled function.\n * @example\n *\n * // Avoid excessively updating the position while scrolling.\n * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n *\n * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n * jQuery(element).on('click', throttled);\n *\n * // Cancel the trailing throttled invocation.\n * jQuery(window).on('popstate', throttled.cancel);\n */\nfunction throttle(func, wait, options) {\n  var leading = true,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  if (isObject(options)) {\n    leading = 'leading' in options ? !!options.leading : leading;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n  return debounce(func, wait, {\n    'leading': leading,\n    'maxWait': wait,\n    'trailing': trailing\n  });\n}\n\nexport default throttle;\n","/**\n * The `anchorScroll` utility saves the scroll position relative to an element,\n * and then restores it after a callback has been run.\n *\n * This is useful if a redraw will change the page's content above the viewport.\n * Normally doing this will result in the content in the viewport being pushed\n * down or pulled up. By wrapping the redraw with this utility, the scroll\n * position can be anchor to an element that is in or below the viewport, so\n * the content in the viewport will stay the same.\n *\n * @param {DOMElement} element The element to anchor the scroll position to.\n * @param {Function} callback The callback to run that will change page content.\n */\nexport default function anchorScroll(element, callback) {\n  const $window = $(window);\n  const relativeScroll = $(element).offset().top - $window.scrollTop();\n\n  callback();\n\n  $window.scrollTop($(element).offset().top - relativeScroll);\n}\n\nwindow.flreg.add('utils/anchorScroll', anchorScroll)","import { throttle } from 'lodash-es';\nimport anchorScroll from '../../common/utils/anchorScroll';\n\nclass PostStreamState {\n  constructor(discussion, includedPosts = []) {\n    /**\n     * The discussion to display the post stream for.\n     *\n     * @type {Discussion}\n     */\n    this.discussion = discussion;\n\n    /**\n     * Whether or not the infinite-scrolling auto-load functionality is\n     * disabled.\n     *\n     * @type {Boolean}\n     */\n    this.paused = false;\n\n    this.loadPageTimeouts = {};\n    this.pagesLoading = 0;\n\n    this.index = 0;\n    this.number = 1;\n\n    /**\n     * The number of posts that are currently visible in the viewport.\n     *\n     * @type {Number}\n     */\n    this.visible = 1;\n\n    /**\n     * The description to render on the scrubber.\n     *\n     * @type {String}\n     */\n    this.description = '';\n\n    /**\n     * When the page is scrolled, goToIndex is called, or the page is loaded,\n     * various listeners result in the scrubber being updated with a new\n     * position and values. However, if goToNumber is called, the scrubber\n     * will not be updated. Accordingly, we add logic to the scrubber's\n     * onupdate to update itself, but only when needed, as indicated by this\n     * property.\n     *\n     * @type {Boolean}\n     */\n    this.forceUpdateScrubber = false;\n\n    this.loadNext = throttle(this._loadNext, 300);\n    this.loadPrevious = throttle(this._loadPrevious, 300);\n\n    this.show(includedPosts);\n  }\n\n  /**\n   * Update the stream so that it loads and includes the latest posts in the\n   * discussion, if the end is being viewed.\n   *\n   * @public\n   */\n  update() {\n    if (!this.viewingEnd()) return Promise.resolve();\n\n    this.visibleEnd = this.count();\n\n    return this.loadRange(this.visibleStart, this.visibleEnd);\n  }\n\n  /**\n   * Load and scroll up to the first post in the discussion.\n   *\n   * @return {Promise}\n   */\n  goToFirst() {\n    return this.goToIndex(0);\n  }\n\n  /**\n   * Load and scroll down to the last post in the discussion.\n   *\n   * @return {Promise}\n   */\n  goToLast() {\n    return this.goToIndex(this.count() - 1, true);\n  }\n\n  /**\n   * Load and scroll to a post with a certain number.\n   *\n   * @param {number|String} number The post number to go to. If 'reply', go to\n   *     the last post and scroll the reply preview into view.\n   * @param {Boolean} noAnimation\n   * @return {Promise}\n   */\n  goToNumber(number, noAnimation = false) {\n    // If we want to go to the reply preview, then we will go to the end of the\n    // discussion and then scroll to the very bottom of the page.\n    if (number === 'reply') {\n      const resultPromise = this.goToLast();\n      this.targetPost.reply = true;\n      return resultPromise;\n    }\n\n    this.paused = true;\n\n    this.loadPromise = this.loadNearNumber(number);\n\n    this.needsScroll = true;\n    this.targetPost = { number };\n    this.animateScroll = !noAnimation;\n    this.number = number;\n\n    // In this case, the redraw is only called after the response has been loaded\n    // because we need to know the indices of the post range before we can\n    // start scrolling to items. Calling redraw early causes issues.\n    // Since this is only used for external navigation to the post stream, the delay\n    // before the stream is moved is not an issue.\n    return this.loadPromise.then(() => m.redraw());\n  }\n\n  /**\n   * Load and scroll to a certain index within the discussion.\n   *\n   * @param {number} index\n   * @param {Boolean} noAnimation\n   * @return {Promise}\n   */\n  goToIndex(index, noAnimation = false) {\n    this.paused = true;\n\n    this.loadPromise = this.loadNearIndex(index);\n\n    this.needsScroll = true;\n    this.targetPost = { index };\n    this.animateScroll = !noAnimation;\n    this.index = index;\n\n    m.redraw();\n\n    return this.loadPromise;\n  }\n\n  /**\n   * Clear the stream and load posts near a certain number. Returns a promise.\n   * If the post with the given number is already loaded, the promise will be\n   * resolved immediately.\n   *\n   * @param {number} number\n   * @return {Promise}\n   */\n  loadNearNumber(number) {\n    if (this.posts().some((post) => post && Number(post.number()) === Number(number))) {\n      return Promise.resolve();\n    }\n\n    this.reset();\n\n    return app.store\n      .find('posts', {\n        filter: { discussion: this.discussion.id() },\n        page: { near: number },\n      })\n      .then(this.show.bind(this));\n  }\n\n  /**\n   * Clear the stream and load posts near a certain index. A page of posts\n   * surrounding the given index will be loaded. Returns a promise. If the given\n   * index is already loaded, the promise will be resolved immediately.\n   *\n   * @param {number} index\n   * @return {Promise}\n   */\n  loadNearIndex(index) {\n    if (index >= this.visibleStart && index < this.visibleEnd) {\n      return Promise.resolve();\n    }\n\n    const start = this.sanitizeIndex(index - this.constructor.loadCount / 2);\n    const end = start + this.constructor.loadCount;\n\n    this.reset(start, end);\n\n    return this.loadRange(start, end).then(this.show.bind(this));\n  }\n\n  /**\n   * Load the next page of posts.\n   */\n  _loadNext() {\n    const start = this.visibleEnd;\n    const end = (this.visibleEnd = this.sanitizeIndex(this.visibleEnd + this.constructor.loadCount));\n\n    // Unload the posts which are two pages back from the page we're currently\n    // loading.\n    const twoPagesAway = start - this.constructor.loadCount * 2;\n    if (twoPagesAway > this.visibleStart && twoPagesAway >= 0) {\n      this.visibleStart = twoPagesAway + this.constructor.loadCount + 1;\n\n      if (this.loadPageTimeouts[twoPagesAway]) {\n        clearTimeout(this.loadPageTimeouts[twoPagesAway]);\n        this.loadPageTimeouts[twoPagesAway] = null;\n        this.pagesLoading--;\n      }\n    }\n\n    this.loadPage(start, end);\n  }\n\n  /**\n   * Load the previous page of posts.\n   */\n  _loadPrevious() {\n    const end = this.visibleStart;\n    const start = (this.visibleStart = this.sanitizeIndex(this.visibleStart - this.constructor.loadCount));\n\n    // Unload the posts which are two pages back from the page we're currently\n    // loading.\n    const twoPagesAway = start + this.constructor.loadCount * 2;\n    if (twoPagesAway < this.visibleEnd && twoPagesAway <= this.count()) {\n      this.visibleEnd = twoPagesAway;\n\n      if (this.loadPageTimeouts[twoPagesAway]) {\n        clearTimeout(this.loadPageTimeouts[twoPagesAway]);\n        this.loadPageTimeouts[twoPagesAway] = null;\n        this.pagesLoading--;\n      }\n    }\n\n    this.loadPage(start, end, true);\n  }\n\n  /**\n   * Load a page of posts into the stream and redraw.\n   *\n   * @param {number} start\n   * @param {number} end\n   * @param {Boolean} backwards\n   */\n  loadPage(start, end, backwards = false) {\n    this.pagesLoading++;\n\n    const redraw = () => {\n      if (start < this.visibleStart || end > this.visibleEnd) return;\n\n      const anchorIndex = backwards ? this.visibleEnd - 1 : this.visibleStart;\n      anchorScroll(`.PostStream-item[data-index=\"${anchorIndex}\"]`, m.redraw.sync);\n    };\n    redraw();\n\n    this.loadPageTimeouts[start] = setTimeout(\n      () => {\n        this.loadRange(start, end).then(() => {\n          redraw();\n          this.pagesLoading--;\n        });\n        this.loadPageTimeouts[start] = null;\n      },\n      this.pagesLoading - 1 ? 1000 : 0\n    );\n  }\n\n  /**\n   * Load and inject the specified range of posts into the stream, without\n   * clearing it.\n   *\n   * @param {number} start\n   * @param {number} end\n   * @return {Promise}\n   */\n  loadRange(start, end) {\n    const loadIds = [];\n    const loaded = [];\n\n    this.discussion\n      .postIds()\n      .slice(start, end)\n      .forEach((id) => {\n        const post = app.store.getById('posts', id);\n\n        if (post && post.discussion() && typeof post.canEdit() !== 'undefined') {\n          loaded.push(post);\n        } else {\n          loadIds.push(id);\n        }\n      });\n\n    if (loadIds.length) {\n      return app.store.find('posts', loadIds).then((newPosts) => {\n        return loaded.concat(newPosts).sort((a, b) => a.createdAt() - b.createdAt());\n      });\n    }\n\n    return Promise.resolve(loaded);\n  }\n\n  /**\n   * Set up the stream with the given array of posts.\n   *\n   * @param {Post[]} posts\n   */\n  show(posts) {\n    this.visibleStart = posts.length ? this.discussion.postIds().indexOf(posts[0].id()) : 0;\n    this.visibleEnd = this.sanitizeIndex(this.visibleStart + posts.length);\n  }\n\n  /**\n   * Reset the stream so that a specific range of posts is displayed. If a range\n   * is not specified, the first page of posts will be displayed.\n   *\n   * @param {number} [start]\n   * @param {number} [end]\n   */\n  reset(start, end) {\n    this.visibleStart = start || 0;\n    this.visibleEnd = this.sanitizeIndex(end || this.constructor.loadCount);\n  }\n\n  /**\n   * Get the visible page of posts.\n   *\n   * @return {Post[]}\n   */\n  posts() {\n    return this.discussion\n      .postIds()\n      .slice(this.visibleStart, this.visibleEnd)\n      .map((id) => {\n        const post = app.store.getById('posts', id);\n\n        return post && post.discussion() && typeof post.canEdit() !== 'undefined' ? post : null;\n      });\n  }\n\n  /**\n   * Get the total number of posts in the discussion.\n   *\n   * @return {number}\n   */\n  count() {\n    return this.discussion.postIds().length;\n  }\n\n  /**\n   * Check whether or not the scrubber should be disabled, i.e. if all of the\n   * posts are visible in the viewport.\n   *\n   * @return {Boolean}\n   */\n  disabled() {\n    return this.visible >= this.count();\n  }\n\n  /**\n   * Are we currently viewing the end of the discussion?\n   *\n   * @return {boolean}\n   */\n  viewingEnd() {\n    // In some cases, such as if we've stickied a post, an event post\n    // may have been added / removed. This means that `this.visibleEnd`\n    // and`this.count()` will be out of sync by 1 post, but we are still\n    // \"viewing the end\" of the post stream, so we should still reload\n    // all posts up until the last one.\n    return Math.abs(this.count() - this.visibleEnd) <= 1;\n  }\n\n  /**\n   * Make sure that the given index is not outside of the possible range of\n   * indexes in the discussion.\n   *\n   * @param {number} index\n   */\n  sanitizeIndex(index) {\n    return Math.max(0, Math.min(this.count(), Math.floor(index)));\n  }\n}\n\n/**\n * The number of posts to load per page.\n *\n * @type {number}\n */\nPostStreamState.loadCount = 20;\n\nexport default PostStreamState;\n\nwindow.flreg.add('states/PostStreamState', PostStreamState)","import Page from '../../common/components/Page';\nimport ItemList from '../../common/utils/ItemList';\nimport DiscussionHero from './DiscussionHero';\nimport DiscussionListPane from './DiscussionListPane';\nimport PostStreamScrubber from './PostStreamScrubber';\nimport LoadingIndicator from '../../common/components/LoadingIndicator';\nimport SplitDropdown from '../../common/components/SplitDropdown';\nimport listItems from '../../common/helpers/listItems';\nimport DiscussionControls from '../utils/DiscussionControls';\nimport PostStreamState from '../states/PostStreamState';\n\n/**\n * The `DiscussionPage` component displays a whole discussion page, including\n * the discussion list pane, the hero, the posts, and the sidebar.\n */\nexport default class DiscussionPage extends Page {\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    this.useBrowserScrollRestoration = false;\n\n    /**\n     * The discussion that is being viewed.\n     *\n     * @type {Discussion}\n     */\n    this.discussion = null;\n\n    /**\n     * The number of the first post that is currently visible in the viewport.\n     *\n     * @type {number}\n     */\n    this.near = m.route.param('near') || 0;\n\n    this.load();\n\n    // If the discussion list has been loaded, then we'll enable the pane (and\n    // hide it by default). Also, if we've just come from another discussion\n    // page, then we don't want Mithril to redraw the whole page – if it did,\n    // then the pane would redraw which would be slow and would cause problems with\n    // event handlers.\n    if (app.discussions.hasDiscussions()) {\n      app.pane.enable();\n      app.pane.hide();\n    }\n\n    app.history.push('discussion');\n\n    this.bodyClass = 'App--discussion';\n  }\n\n  onremove() {\n    super.onremove();\n    // If we are indeed navigating away from this discussion, then disable the\n    // discussion list pane. Also, if we're composing a reply to this\n    // discussion, minimize the composer – unless it's empty, in which case\n    // we'll just close it.\n    app.pane.disable();\n\n    if (app.composer.composingReplyTo(this.discussion) && !app.composer.fields.content()) {\n      app.composer.hide();\n    } else {\n      app.composer.minimize();\n    }\n  }\n\n  view() {\n    const discussion = this.discussion;\n\n    const PostStream = this.PostStream;\n\n    return (\n      <div className=\"DiscussionPage\">\n        <DiscussionListPane state={app.discussions} />\n        <div className=\"DiscussionPage-discussion\">\n          {discussion\n            ? [\n                DiscussionHero.component({ discussion }),\n                <div className=\"container\">\n                  <nav className=\"DiscussionPage-nav\">\n                    <ul>{listItems(this.sidebarItems().toArray())}</ul>\n                  </nav>\n                  <div className=\"DiscussionPage-stream\">\n                    {PostStream ? (\n                      <PostStream discussion={discussion} stream={this.stream} onPositionChange={this.positionChanged.bind(this)} />\n                    ) : (\n                      LoadingIndicator.component({ className: 'LoadingIndicator--block' })\n                    )}\n                  </div>\n                </div>,\n              ]\n            : LoadingIndicator.component({ className: 'LoadingIndicator--block' })}\n        </div>\n      </div>\n    );\n  }\n\n  /**\n   * Load the discussion from the API or use the preloaded one.\n   */\n  load() {\n    import(/* webpackChunkName: \"forum/components/PostStream\" */ './PostStream').then((PostStream) => {\n      this.PostStream = PostStream.default;\n      m.redraw();\n    });\n\n    const preloadedDiscussion = app.preloadedApiDocument();\n    if (preloadedDiscussion) {\n      // We must wrap this in a setTimeout because if we are mounting this\n      // component for the first time on page load, then any calls to m.redraw\n      // will be ineffective and thus any configs (scroll code) will be run\n      // before stuff is drawn to the page.\n      setTimeout(this.show.bind(this, preloadedDiscussion), 0);\n    } else {\n      const params = this.requestParams();\n\n      app.store.find('discussions', m.route.param('id'), params).then(this.show.bind(this));\n    }\n\n    m.redraw();\n  }\n\n  /**\n   * Get the parameters that should be passed in the API request to get the\n   * discussion.\n   *\n   * @return {Object}\n   */\n  requestParams() {\n    return {\n      bySlug: true,\n      page: { near: this.near },\n    };\n  }\n\n  /**\n   * Initialize the component to display the given discussion.\n   *\n   * @param {Discussion} discussion\n   */\n  show(discussion) {\n    app.history.push('discussion', discussion.title());\n    app.setTitle(discussion.title());\n    app.setTitleCount(0);\n\n    // When the API responds with a discussion, it will also include a number of\n    // posts. Some of these posts are included because they are on the first\n    // page of posts we want to display (determined by the `near` parameter) –\n    // others may be included because due to other relationships introduced by\n    // extensions. We need to distinguish the two so we don't end up displaying\n    // the wrong posts. We do so by filtering out the posts that don't have\n    // the 'discussion' relationship linked, then sorting and splicing.\n    let includedPosts = [];\n    if (discussion.payload && discussion.payload.included) {\n      const discussionId = discussion.id();\n\n      includedPosts = discussion.payload.included\n        .filter(\n          (record) =>\n            record.type === 'posts' &&\n            record.relationships &&\n            record.relationships.discussion &&\n            record.relationships.discussion.data.id === discussionId\n        )\n        .map((record) => app.store.getById('posts', record.id))\n        .sort((a, b) => a.createdAt() - b.createdAt())\n        .slice(0, 20);\n    }\n\n    // Set up the post stream for this discussion, along with the first page of\n    // posts we want to display. Tell the stream to scroll down and highlight\n    // the specific post that was routed to.\n    this.stream = new PostStreamState(discussion, includedPosts);\n    this.stream.goToNumber(m.route.param('near') || (includedPosts[0] && includedPosts[0].number()), true).then(() => {\n      this.discussion = discussion;\n\n      app.current.set('discussion', discussion);\n      app.current.set('stream', this.stream);\n    });\n  }\n\n  /**\n   * Build an item list for the contents of the sidebar.\n   *\n   * @return {ItemList}\n   */\n  sidebarItems() {\n    const items = new ItemList();\n\n    items.add(\n      'controls',\n      SplitDropdown.component(\n        {\n          icon: 'fas fa-ellipsis-v',\n          className: 'App-primaryControl',\n          buttonClassName: 'Button--primary',\n          accessibleToggleLabel: app.translator.trans('core.forum.discussion_controls.toggle_dropdown_accessible_label'),\n        },\n        new DiscussionControls().controls(this.discussion, this).toArray()\n      )\n    );\n\n    items.add(\n      'scrubber',\n      PostStreamScrubber.component({\n        stream: this.stream,\n        className: 'App-titleControl',\n      }),\n      -100\n    );\n\n    return items;\n  }\n\n  /**\n   * When the posts that are visible in the post stream change (i.e. the user\n   * scrolls up or down), then we update the URL and mark the posts as read.\n   *\n   * @param {Integer} startNumber\n   * @param {Integer} endNumber\n   */\n  positionChanged(startNumber, endNumber) {\n    const discussion = this.discussion;\n\n    // Construct a URL to this discussion with the updated position, then\n    // replace it into the window's history and our own history stack.\n    const url = app.route.discussion(discussion, (this.near = startNumber));\n\n    window.history.replaceState(null, document.title, url);\n    app.history.push('discussion', discussion.title());\n\n    // If the user hasn't read past here before, then we'll update their read\n    // state and redraw.\n    if (app.session.user && endNumber > (discussion.lastReadPostNumber() || 0)) {\n      discussion.save({ lastReadPostNumber: endNumber });\n      m.redraw();\n    }\n  }\n}\n\nwindow.flreg.add('components/DiscussionPage', DiscussionPage)","import ComposerBody from './ComposerBody';\nimport Button from '../../common/components/Button';\nimport Link from '../../common/components/Link';\nimport icon from '../../common/helpers/icon';\nimport extractText from '../../common/utils/extractText';\n\nfunction minimizeComposerIfFullScreen(e) {\n  if (app.composer.isFullScreen()) {\n    app.composer.minimize();\n    e.stopPropagation();\n  }\n}\n\n/**\n * The `ReplyComposer` component displays the composer content for replying to a\n * discussion.\n *\n * ### Attrs\n *\n * - All of the attrs of ComposerBody\n * - `discussion`\n */\nexport default class ReplyComposer extends ComposerBody {\n  static initAttrs(attrs) {\n    super.initAttrs(attrs);\n\n    attrs.placeholder = attrs.placeholder || extractText(app.translator.trans('core.forum.composer_reply.body_placeholder'));\n    attrs.submitLabel = attrs.submitLabel || app.translator.trans('core.forum.composer_reply.submit_button');\n    attrs.confirmExit = attrs.confirmExit || extractText(app.translator.trans('core.forum.composer_reply.discard_confirmation'));\n  }\n\n  headerItems() {\n    const items = super.headerItems();\n    const discussion = this.attrs.discussion;\n\n    items.add(\n      'title',\n      <h3>\n        {icon('fas fa-reply')}{' '}\n        <Link href={app.route.discussion(discussion)} onclick={minimizeComposerIfFullScreen}>\n          {discussion.title()}\n        </Link>\n      </h3>\n    );\n\n    return items;\n  }\n\n  /**\n   * Jump to the preview when triggered by the text editor.\n   */\n  jumpToPreview(e) {\n    minimizeComposerIfFullScreen(e);\n\n    m.route.set(app.route.discussion(this.attrs.discussion, 'reply'));\n  }\n\n  /**\n   * Get the data to submit to the server when the reply is saved.\n   *\n   * @return {Object}\n   */\n  data() {\n    return {\n      content: this.composer.fields.content(),\n      relationships: { discussion: this.attrs.discussion },\n    };\n  }\n\n  onsubmit() {\n    const discussion = this.attrs.discussion;\n\n    this.loading = true;\n    m.redraw();\n\n    const data = this.data();\n\n    app.store\n      .createRecord('posts')\n      .save(data)\n      .then((post) => {\n        // If we're currently viewing the discussion which this reply was made\n        // in, then we can update the post stream and scroll to the post.\n        if (app.viewingDiscussion(discussion)) {\n          const stream = app.current.get('stream');\n          stream.update().then(() => stream.goToNumber(post.number()));\n        } else {\n          // Otherwise, we'll create an alert message to inform the user that\n          // their reply has been posted, containing a button which will\n          // transition to their new post when clicked.\n          let alert;\n          const viewButton = Button.component(\n            {\n              className: 'Button Button--link',\n              onclick: () => {\n                m.route.set(app.route.post(post));\n                app.alerts.dismiss(alert);\n              },\n            },\n            app.translator.trans('core.forum.composer_reply.view_button')\n          );\n          alert = app.alerts.show(\n            {\n              type: 'success',\n              controls: [viewButton],\n            },\n            app.translator.trans('core.forum.composer_reply.posted_message')\n          );\n        }\n\n        this.composer.hide();\n      }, this.loaded.bind(this));\n  }\n}\n\nwindow.flreg.add('components/ReplyComposer', ReplyComposer)","export default class DiscussionListState {\n  constructor(params = {}, app = window.app) {\n    this.params = params;\n\n    this.app = app;\n\n    this.discussions = [];\n\n    this.moreResults = false;\n\n    this.loading = false;\n  }\n\n  /**\n   * Get the parameters that should be passed in the API request to get\n   * discussion results.\n   *\n   * @api\n   */\n  requestParams() {\n    const params = { include: ['user', 'lastPostedUser'], filter: {} };\n\n    params.sort = this.sortMap()[this.params.sort];\n\n    if (this.params.q) {\n      params.filter.q = this.params.q;\n\n      params.include.push('mostRelevantPost', 'mostRelevantPost.user');\n    }\n\n    return params;\n  }\n\n  /**\n   * Get a map of sort keys (which appear in the URL, and are used for\n   * translation) to the API sort value that they represent.\n   */\n  sortMap() {\n    const map = {};\n\n    if (this.params.q) {\n      map.relevance = '';\n    }\n    map.latest = '-lastPostedAt';\n    map.top = '-commentCount';\n    map.newest = '-createdAt';\n    map.oldest = 'createdAt';\n\n    return map;\n  }\n\n  /**\n   * Get the search parameters.\n   */\n  getParams() {\n    return this.params;\n  }\n\n  /**\n   * Clear cached discussions.\n   */\n  clear() {\n    this.discussions = [];\n    m.redraw();\n  }\n\n  /**\n   * If there are no cached discussions or the new params differ from the\n   * old ones, update params and refresh the discussion list from the database.\n   */\n  refreshParams(newParams) {\n    if (!this.hasDiscussions() || Object.keys(newParams).some((key) => this.getParams()[key] !== newParams[key])) {\n      this.params = newParams;\n\n      this.refresh();\n    }\n  }\n\n  /**\n   * Clear and reload the discussion list. Passing the option `deferClear: true`\n   * will clear discussions only after new data has been received.\n   * This can be used to refresh discussions without loading animations.\n   */\n  refresh({ deferClear = false } = {}) {\n    this.loading = true;\n\n    if (!deferClear) {\n      this.clear();\n    }\n\n    return this.loadResults().then(\n      (results) => {\n        // This ensures that any changes made while waiting on this request\n        // are ignored. Otherwise, we could get duplicate discussions.\n        // We don't use `this.clear()` to avoid an unnecessary redraw.\n        this.discussions = [];\n        this.parseResults(results);\n      },\n      () => {\n        this.loading = false;\n        m.redraw();\n      }\n    );\n  }\n\n  /**\n   * Load a new page of discussion results.\n   *\n   * @param offset The index to start the page at.\n   */\n  loadResults(offset) {\n    const preloadedDiscussions = this.app.preloadedApiDocument();\n\n    if (preloadedDiscussions) {\n      return Promise.resolve(preloadedDiscussions);\n    }\n\n    const params = this.requestParams();\n    params.page = { offset };\n    params.include = params.include.join(',');\n\n    return this.app.store.find('discussions', params);\n  }\n\n  /**\n   * Load the next page of discussion results.\n   */\n  loadMore() {\n    this.loading = true;\n\n    this.loadResults(this.discussions.length).then(this.parseResults.bind(this));\n  }\n\n  /**\n   * Parse results and append them to the discussion list.\n   */\n  parseResults(results) {\n    this.discussions.push(...results);\n\n    this.loading = false;\n    this.moreResults = !!results.payload.links && !!results.payload.links.next;\n\n    m.redraw();\n\n    return results;\n  }\n\n  /**\n   * Remove a discussion from the list if it is present.\n   */\n  removeDiscussion(discussion) {\n    const index = this.discussions.indexOf(discussion);\n\n    if (index !== -1) {\n      this.discussions.splice(index, 1);\n    }\n\n    m.redraw();\n  }\n\n  /**\n   * Add a discussion to the top of the list.\n   */\n  addDiscussion(discussion) {\n    this.discussions.unshift(discussion);\n    m.redraw();\n  }\n\n  /**\n   * Are there discussions stored in the discussion list state?\n   */\n  hasDiscussions() {\n    return this.discussions.length > 0;\n  }\n\n  /**\n   * Are discussions currently being loaded?\n   */\n  isLoading() {\n    return this.loading;\n  }\n\n  /**\n   * In the last request, has the user searched for a discussion?\n   */\n  isSearchResults() {\n    return !!this.params.q;\n  }\n\n  /**\n   * Have the search results come up empty?\n   */\n  empty() {\n    return !this.hasDiscussions() && !this.isLoading();\n  }\n}\n\nwindow.flreg.add('states/DiscussionListState', DiscussionListState)","import DiscussionPage from '../components/DiscussionPage';\nimport Button from '../../common/components/Button';\nimport Separator from '../../common/components/Separator';\nimport ItemList from '../../common/utils/ItemList';\nimport extractText from '../../common/utils/extractText';\n\n/**\n * The `DiscussionControls` utility constructs a list of buttons for a\n * discussion which perform actions on it.\n */\nexport default class DiscussionControls {\n  /**\n   * Get a list of controls for a discussion.\n   *\n   * @param {Discussion} discussion\n   * @param {*} context The parent component under which the controls menu will\n   *     be displayed.\n   * @return {ItemList}\n   * @public\n   */\n  controls(discussion, context) {\n    const items = new ItemList();\n\n    ['user', 'moderation', 'destructive'].forEach((section) => {\n      const controls = this[section + 'Controls'](discussion, context).toArray();\n      if (controls.length) {\n        controls.forEach((item) => items.add(item.itemName, item));\n        items.add(section + 'Separator', Separator.component());\n      }\n    });\n\n    return items;\n  }\n\n  /**\n   * Get controls for a discussion pertaining to the current user (e.g. reply,\n   * follow).\n   *\n   * @param {Discussion} discussion\n   * @param {*} context The parent component under which the controls menu will\n   *     be displayed.\n   * @return {ItemList}\n   * @protected\n   */\n  userControls(discussion, context) {\n    const items = new ItemList();\n\n    // Only add a reply control if this is the discussion's controls dropdown\n    // for the discussion page itself. We don't want it to show up for\n    // discussions in the discussion list, etc.\n    if (context instanceof DiscussionPage) {\n      items.add(\n        'reply',\n        !app.session.user || discussion.canReply()\n          ? Button.component(\n              {\n                icon: 'fas fa-reply',\n                onclick: () => {\n                  // If the user is not logged in, the promise rejects, and a login modal shows up.\n                  // Since that's already handled, we dont need to show an error message in the console.\n                  return this.replyAction\n                    .bind(discussion)(true, false)\n                    .catch(() => {});\n                },\n              },\n              app.translator.trans(\n                app.session.user ? 'core.forum.discussion_controls.reply_button' : 'core.forum.discussion_controls.log_in_to_reply_button'\n              )\n            )\n          : Button.component(\n              {\n                icon: 'fas fa-reply',\n                className: 'disabled',\n                title: app.translator.trans('core.forum.discussion_controls.cannot_reply_text'),\n              },\n              app.translator.trans('core.forum.discussion_controls.cannot_reply_button')\n            )\n      );\n    }\n\n    return items;\n  }\n\n  /**\n   * Get controls for a discussion pertaining to moderation (e.g. rename, lock).\n   *\n   * @param {Discussion} discussion\n   * @param {*} context The parent component under which the controls menu will\n   *     be displayed.\n   * @return {ItemList}\n   * @protected\n   */\n  moderationControls(discussion) {\n    const items = new ItemList();\n\n    if (discussion.canRename()) {\n      items.add(\n        'rename',\n        Button.component(\n          {\n            icon: 'fas fa-pencil-alt',\n            onclick: this.renameAction.bind(discussion),\n          },\n          app.translator.trans('core.forum.discussion_controls.rename_button')\n        )\n      );\n    }\n\n    return items;\n  }\n\n  /**\n   * Get controls for a discussion which are destructive (e.g. delete).\n   *\n   * @param {Discussion} discussion\n   * @param {*} context The parent component under which the controls menu will\n   *     be displayed.\n   * @return {ItemList}\n   * @protected\n   */\n  destructiveControls(discussion) {\n    const items = new ItemList();\n\n    if (!discussion.isHidden()) {\n      if (discussion.canHide()) {\n        items.add(\n          'hide',\n          Button.component(\n            {\n              icon: 'far fa-trash-alt',\n              onclick: this.hideAction.bind(discussion),\n            },\n            app.translator.trans('core.forum.discussion_controls.delete_button')\n          )\n        );\n      }\n    } else {\n      if (discussion.canHide()) {\n        items.add(\n          'restore',\n          Button.component(\n            {\n              icon: 'fas fa-reply',\n              onclick: this.restoreAction.bind(discussion),\n            },\n            app.translator.trans('core.forum.discussion_controls.restore_button')\n          )\n        );\n      }\n\n      if (discussion.canDelete()) {\n        items.add(\n          'delete',\n          Button.component(\n            {\n              icon: 'fas fa-times',\n              onclick: this.deleteAction.bind(discussion),\n            },\n            app.translator.trans('core.forum.discussion_controls.delete_forever_button')\n          )\n        );\n      }\n    }\n\n    return items;\n  }\n\n  /**\n   * Open the reply composer for the discussion. A promise will be returned,\n   * which resolves when the composer opens successfully. If the user is not\n   * logged in, they will be prompted. If they don't have permission to\n   * reply, the promise will be rejected.\n   *\n   * @param {Boolean} goToLast Whether or not to scroll down to the last post if\n   *     the discussion is being viewed.\n   * @param {Boolean} forceRefresh Whether or not to force a reload of the\n   *     composer component, even if it is already open for this discussion.\n   * @return {Promise}\n   */\n  replyAction(goToLast, forceRefresh) {\n    const LogInModal = () => import(/* webpackChunkName: \"forum/components/LogInModal\" */ '../components/LogInModal');\n    const ReplyComposer = () => import(/* webpackChunkName: \"forum/components/ReplyComposer\" */ '../components/ReplyComposer');\n\n    return new Promise(async (resolve, reject) => {\n      if (app.session.user) {\n        if (this.canReply()) {\n          if (!app.composer.composingReplyTo(this) || forceRefresh) {\n            await app.composer.load(ReplyComposer, {\n              user: app.session.user,\n              discussion: this,\n            });\n          }\n          console.log('hi');\n          app.composer.show();\n\n          if (goToLast && app.viewingDiscussion(this) && !app.composer.isFullScreen()) {\n            app.current.get('stream').goToNumber('reply');\n          }\n\n          return resolve(app.composer);\n        } else {\n          return reject();\n        }\n      }\n\n      app.modal.show(LogInModal);\n\n      return reject();\n    });\n  }\n\n  /**\n   * Hide a discussion.\n   *\n   * @return {Promise}\n   */\n  hideAction() {\n    this.pushAttributes({ hiddenAt: new Date(), hiddenUser: app.session.user });\n\n    return this.save({ isHidden: true });\n  }\n\n  /**\n   * Restore a discussion.\n   *\n   * @return {Promise}\n   */\n  restoreAction() {\n    this.pushAttributes({ hiddenAt: null, hiddenUser: null });\n\n    return this.save({ isHidden: false });\n  }\n\n  /**\n   * Delete the discussion after confirming with the user.\n   *\n   * @return {Promise}\n   */\n  deleteAction() {\n    if (confirm(extractText(app.translator.trans('core.forum.discussion_controls.delete_confirmation')))) {\n      // If we're currently viewing the discussion that was deleted, go back\n      // to the previous page.\n      if (app.viewingDiscussion(this)) {\n        app.history.back();\n      }\n\n      return this.delete().then(() => app.discussions.removeDiscussion(this));\n    }\n  }\n\n  /**\n   * Rename the discussion.\n   *\n   * @return {Promise}\n   */\n  renameAction() {\n    const RenameDiscussionModal = () => import(/* webpackChunkName: \"forum/components/RenameDiscussionModal\" */ '../components/RenameDiscussionModal');\n\n    return app.modal.show(RenameDiscussionModal, {\n      currentTitle: this.title(),\n      discussion: this,\n    });\n  }\n}\n\nwindow.flreg.add('utils/DiscussionControls', DiscussionControls)","/*!\r\n * Color Thief v2.0\r\n * by Lokesh Dhakar - http://www.lokeshdhakar.com\r\n *\r\n * Thanks\r\n * ------\r\n * Nick Rabinowitz - For creating quantize.js.\r\n * John Schulz - For clean up and optimization. @JFSIII\r\n * Nathan Spady - For adding drag and drop support to the demo page.\r\n *\r\n * License\r\n * -------\r\n * Copyright 2011, 2015 Lokesh Dhakar\r\n * Released under the MIT license\r\n * https://raw.githubusercontent.com/lokesh/color-thief/master/LICENSE\r\n *\r\n */\r\nvar CanvasImage=function(a){this.canvas=document.createElement(\"canvas\"),this.context=this.canvas.getContext(\"2d\"),document.body.appendChild(this.canvas),this.width=this.canvas.width=a.width,this.height=this.canvas.height=a.height,this.context.drawImage(a,0,0,this.width,this.height)};CanvasImage.prototype.clear=function(){this.context.clearRect(0,0,this.width,this.height)},CanvasImage.prototype.update=function(a){this.context.putImageData(a,0,0)},CanvasImage.prototype.getPixelCount=function(){return this.width*this.height},CanvasImage.prototype.getImageData=function(){return this.context.getImageData(0,0,this.width,this.height)},CanvasImage.prototype.removeCanvas=function(){this.canvas.parentNode.removeChild(this.canvas)};var ColorThief=function(){};/*!\r\n * quantize.js Copyright 2008 Nick Rabinowitz.\r\n * Licensed under the MIT license: http://www.opensource.org/licenses/mit-license.php\r\n */\r\n/*!\r\n * Block below copied from Protovis: http://mbostock.github.com/protovis/\r\n * Copyright 2010 Stanford Visualization Group\r\n * Licensed under the BSD License: http://www.opensource.org/licenses/bsd-license.php\r\n */\r\nif(ColorThief.prototype.getColor=function(a,b){var c=this.getPalette(a,5,b),d=c[0];return d},ColorThief.prototype.getPalette=function(a,b,c){\"undefined\"==typeof b&&(b=10),(\"undefined\"==typeof c||1>c)&&(c=10);for(var d,e,f,g,h,i=new CanvasImage(a),j=i.getImageData(),k=j.data,l=i.getPixelCount(),m=[],n=0;l>n;n+=c)d=4*n,e=k[d+0],f=k[d+1],g=k[d+2],h=k[d+3],h>=125&&(e>250&&f>250&&g>250||m.push([e,f,g]));var o=MMCQ.quantize(m,b),p=o?o.palette():null;return i.removeCanvas(),p},!pv)var pv={map:function(a,b){var c={};return b?a.map(function(a,d){return c.index=d,b.call(c,a)}):a.slice()},naturalOrder:function(a,b){return b>a?-1:a>b?1:0},sum:function(a,b){var c={};return a.reduce(b?function(a,d,e){return c.index=e,a+b.call(c,d)}:function(a,b){return a+b},0)},max:function(a,b){return Math.max.apply(null,b?pv.map(a,b):a)}};var MMCQ=function(){function a(a,b,c){return(a<<2*i)+(b<<i)+c}function b(a){function b(){c.sort(a),d=!0}var c=[],d=!1;return{push:function(a){c.push(a),d=!1},peek:function(a){return d||b(),void 0===a&&(a=c.length-1),c[a]},pop:function(){return d||b(),c.pop()},size:function(){return c.length},map:function(a){return c.map(a)},debug:function(){return d||b(),c}}}function c(a,b,c,d,e,f,g){var h=this;h.r1=a,h.r2=b,h.g1=c,h.g2=d,h.b1=e,h.b2=f,h.histo=g}function d(){this.vboxes=new b(function(a,b){return pv.naturalOrder(a.vbox.count()*a.vbox.volume(),b.vbox.count()*b.vbox.volume())})}function e(b){var c,d,e,f,g=1<<3*i,h=new Array(g);return b.forEach(function(b){d=b[0]>>j,e=b[1]>>j,f=b[2]>>j,c=a(d,e,f),h[c]=(h[c]||0)+1}),h}function f(a,b){var d,e,f,g=1e6,h=0,i=1e6,k=0,l=1e6,m=0;return a.forEach(function(a){d=a[0]>>j,e=a[1]>>j,f=a[2]>>j,g>d?g=d:d>h&&(h=d),i>e?i=e:e>k&&(k=e),l>f?l=f:f>m&&(m=f)}),new c(g,h,i,k,l,m,b)}function g(b,c){function d(a){var b,d,e,f,g,h=a+\"1\",j=a+\"2\",k=0;for(i=c[h];i<=c[j];i++)if(o[i]>n/2){for(e=c.copy(),f=c.copy(),b=i-c[h],d=c[j]-i,g=d>=b?Math.min(c[j]-1,~~(i+d/2)):Math.max(c[h],~~(i-1-b/2));!o[g];)g++;for(k=p[g];!k&&o[g-1];)k=p[--g];return e[j]=g,f[h]=e[j]+1,[e,f]}}if(c.count()){var e=c.r2-c.r1+1,f=c.g2-c.g1+1,g=c.b2-c.b1+1,h=pv.max([e,f,g]);if(1==c.count())return[c.copy()];var i,j,k,l,m,n=0,o=[],p=[];if(h==e)for(i=c.r1;i<=c.r2;i++){for(l=0,j=c.g1;j<=c.g2;j++)for(k=c.b1;k<=c.b2;k++)m=a(i,j,k),l+=b[m]||0;n+=l,o[i]=n}else if(h==f)for(i=c.g1;i<=c.g2;i++){for(l=0,j=c.r1;j<=c.r2;j++)for(k=c.b1;k<=c.b2;k++)m=a(j,i,k),l+=b[m]||0;n+=l,o[i]=n}else for(i=c.b1;i<=c.b2;i++){for(l=0,j=c.r1;j<=c.r2;j++)for(k=c.g1;k<=c.g2;k++)m=a(j,k,i),l+=b[m]||0;n+=l,o[i]=n}return o.forEach(function(a,b){p[b]=n-a}),d(h==e?\"r\":h==f?\"g\":\"b\")}}function h(a,c){function h(a,b){for(var c,d=1,e=0;k>e;)if(c=a.pop(),c.count()){var f=g(i,c),h=f[0],j=f[1];if(!h)return;if(a.push(h),j&&(a.push(j),d++),d>=b)return;if(e++>k)return}else a.push(c),e++}if(!a.length||2>c||c>256)return!1;var i=e(a),j=0;i.forEach(function(){j++});var m=f(a,i),n=new b(function(a,b){return pv.naturalOrder(a.count(),b.count())});n.push(m),h(n,l*c);for(var o=new b(function(a,b){return pv.naturalOrder(a.count()*a.volume(),b.count()*b.volume())});n.size();)o.push(n.pop());h(o,c-o.size());for(var p=new d;o.size();)p.push(o.pop());return p}var i=5,j=8-i,k=1e3,l=.75;return c.prototype={volume:function(a){var b=this;return(!b._volume||a)&&(b._volume=(b.r2-b.r1+1)*(b.g2-b.g1+1)*(b.b2-b.b1+1)),b._volume},count:function(b){var c=this,d=c.histo;if(!c._count_set||b){var e,f,g,h=0;for(e=c.r1;e<=c.r2;e++)for(f=c.g1;f<=c.g2;f++)for(g=c.b1;g<=c.b2;g++)index=a(e,f,g),h+=d[index]||0;c._count=h,c._count_set=!0}return c._count},copy:function(){var a=this;return new c(a.r1,a.r2,a.g1,a.g2,a.b1,a.b2,a.histo)},avg:function(b){var c=this,d=c.histo;if(!c._avg||b){var e,f,g,h,j,k=0,l=1<<8-i,m=0,n=0,o=0;for(f=c.r1;f<=c.r2;f++)for(g=c.g1;g<=c.g2;g++)for(h=c.b1;h<=c.b2;h++)j=a(f,g,h),e=d[j]||0,k+=e,m+=e*(f+.5)*l,n+=e*(g+.5)*l,o+=e*(h+.5)*l;k?c._avg=[~~(m/k),~~(n/k),~~(o/k)]:c._avg=[~~(l*(c.r1+c.r2+1)/2),~~(l*(c.g1+c.g2+1)/2),~~(l*(c.b1+c.b2+1)/2)]}return c._avg},contains:function(a){var b=this,c=a[0]>>j;return gval=a[1]>>j,bval=a[2]>>j,c>=b.r1&&c<=b.r2&&gval>=b.g1&&gval<=b.g2&&bval>=b.b1&&bval<=b.b2}},d.prototype={push:function(a){this.vboxes.push({vbox:a,color:a.avg()})},palette:function(){return this.vboxes.map(function(a){return a.color})},size:function(){return this.vboxes.size()},map:function(a){for(var b=this.vboxes,c=0;c<b.size();c++)if(b.peek(c).vbox.contains(a))return b.peek(c).color;return this.nearest(a)},nearest:function(a){for(var b,c,d,e=this.vboxes,f=0;f<e.size();f++)c=Math.sqrt(Math.pow(a[0]-e.peek(f).color[0],2)+Math.pow(a[1]-e.peek(f).color[1],2)+Math.pow(a[2]-e.peek(f).color[2],2)),(b>c||void 0===b)&&(b=c,d=e.peek(f).color);return d},forcebw:function(){var a=this.vboxes;a.sort(function(a,b){return pv.naturalOrder(pv.sum(a.color),pv.sum(b.color))});var b=a[0].color;b[0]<5&&b[1]<5&&b[2]<5&&(a[0].color=[0,0,0]);var c=a.length-1,d=a[c].color;d[0]>251&&d[1]>251&&d[2]>251&&(a[c].color=[255,255,255])}},{quantize:h}}();\r\nmodule.exports = ColorThief;\r\n","var ___EXPOSE_LOADER_IMPORT___ = require(\"-!./color-thief.min.js\");\nvar ___EXPOSE_LOADER_GET_GLOBAL_THIS___ = require(\"../../expose-loader/dist/runtime/getGlobalThis.js\");\nvar ___EXPOSE_LOADER_GLOBAL_THIS___ = ___EXPOSE_LOADER_GET_GLOBAL_THIS___;\nif (typeof ___EXPOSE_LOADER_GLOBAL_THIS___[\"ColorThief\"] === 'undefined') ___EXPOSE_LOADER_GLOBAL_THIS___[\"ColorThief\"] = ___EXPOSE_LOADER_IMPORT___;\nmodule.exports = ___EXPOSE_LOADER_IMPORT___;\n","var ___EXPOSE_LOADER_IMPORT___ = require(\"-!./punycode.es6.js\");\nvar ___EXPOSE_LOADER_GET_GLOBAL_THIS___ = require(\"../expose-loader/dist/runtime/getGlobalThis.js\");\nvar ___EXPOSE_LOADER_GLOBAL_THIS___ = ___EXPOSE_LOADER_GET_GLOBAL_THIS___;\nif (typeof ___EXPOSE_LOADER_GLOBAL_THIS___[\"punycode\"] === 'undefined') ___EXPOSE_LOADER_GLOBAL_THIS___[\"punycode\"] = ___EXPOSE_LOADER_IMPORT___;\nmodule.exports = ___EXPOSE_LOADER_IMPORT___;\n","import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nexport default isSymbol;\n","'use strict';\n\n/** Highest positive signed 32-bit float value */\nconst maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1\n\n/** Bootstring parameters */\nconst base = 36;\nconst tMin = 1;\nconst tMax = 26;\nconst skew = 38;\nconst damp = 700;\nconst initialBias = 72;\nconst initialN = 128; // 0x80\nconst delimiter = '-'; // '\\x2D'\n\n/** Regular expressions */\nconst regexPunycode = /^xn--/;\nconst regexNonASCII = /[^\\0-\\x7E]/; // non-ASCII chars\nconst regexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g; // RFC 3490 separators\n\n/** Error messages */\nconst errors = {\n\t'overflow': 'Overflow: input needs wider integers to process',\n\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t'invalid-input': 'Invalid input'\n};\n\n/** Convenience shortcuts */\nconst baseMinusTMin = base - tMin;\nconst floor = Math.floor;\nconst stringFromCharCode = String.fromCharCode;\n\n/*--------------------------------------------------------------------------*/\n\n/**\n * A generic error utility function.\n * @private\n * @param {String} type The error type.\n * @returns {Error} Throws a `RangeError` with the applicable error message.\n */\nfunction error(type) {\n\tthrow new RangeError(errors[type]);\n}\n\n/**\n * A generic `Array#map` utility function.\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} callback The function that gets called for every array\n * item.\n * @returns {Array} A new array of values returned by the callback function.\n */\nfunction map(array, fn) {\n\tconst result = [];\n\tlet length = array.length;\n\twhile (length--) {\n\t\tresult[length] = fn(array[length]);\n\t}\n\treturn result;\n}\n\n/**\n * A simple `Array#map`-like wrapper to work with domain name strings or email\n * addresses.\n * @private\n * @param {String} domain The domain name or email address.\n * @param {Function} callback The function that gets called for every\n * character.\n * @returns {Array} A new string of characters returned by the callback\n * function.\n */\nfunction mapDomain(string, fn) {\n\tconst parts = string.split('@');\n\tlet result = '';\n\tif (parts.length > 1) {\n\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t// the local part (i.e. everything up to `@`) intact.\n\t\tresult = parts[0] + '@';\n\t\tstring = parts[1];\n\t}\n\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\tstring = string.replace(regexSeparators, '\\x2E');\n\tconst labels = string.split('.');\n\tconst encoded = map(labels, fn).join('.');\n\treturn result + encoded;\n}\n\n/**\n * Creates an array containing the numeric code points of each Unicode\n * character in the string. While JavaScript uses UCS-2 internally,\n * this function will convert a pair of surrogate halves (each of which\n * UCS-2 exposes as separate characters) into a single code point,\n * matching UTF-16.\n * @see `punycode.ucs2.encode`\n * @see <https://mathiasbynens.be/notes/javascript-encoding>\n * @memberOf punycode.ucs2\n * @name decode\n * @param {String} string The Unicode input string (UCS-2).\n * @returns {Array} The new array of code points.\n */\nfunction ucs2decode(string) {\n\tconst output = [];\n\tlet counter = 0;\n\tconst length = string.length;\n\twhile (counter < length) {\n\t\tconst value = string.charCodeAt(counter++);\n\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t// It's a high surrogate, and there is a next character.\n\t\t\tconst extra = string.charCodeAt(counter++);\n\t\t\tif ((extra & 0xFC00) == 0xDC00) { // Low surrogate.\n\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t} else {\n\t\t\t\t// It's an unmatched surrogate; only append this code unit, in case the\n\t\t\t\t// next code unit is the high surrogate of a surrogate pair.\n\t\t\t\toutput.push(value);\n\t\t\t\tcounter--;\n\t\t\t}\n\t\t} else {\n\t\t\toutput.push(value);\n\t\t}\n\t}\n\treturn output;\n}\n\n/**\n * Creates a string based on an array of numeric code points.\n * @see `punycode.ucs2.decode`\n * @memberOf punycode.ucs2\n * @name encode\n * @param {Array} codePoints The array of numeric code points.\n * @returns {String} The new Unicode string (UCS-2).\n */\nconst ucs2encode = array => String.fromCodePoint(...array);\n\n/**\n * Converts a basic code point into a digit/integer.\n * @see `digitToBasic()`\n * @private\n * @param {Number} codePoint The basic numeric code point value.\n * @returns {Number} The numeric value of a basic code point (for use in\n * representing integers) in the range `0` to `base - 1`, or `base` if\n * the code point does not represent a value.\n */\nconst basicToDigit = function(codePoint) {\n\tif (codePoint - 0x30 < 0x0A) {\n\t\treturn codePoint - 0x16;\n\t}\n\tif (codePoint - 0x41 < 0x1A) {\n\t\treturn codePoint - 0x41;\n\t}\n\tif (codePoint - 0x61 < 0x1A) {\n\t\treturn codePoint - 0x61;\n\t}\n\treturn base;\n};\n\n/**\n * Converts a digit/integer into a basic code point.\n * @see `basicToDigit()`\n * @private\n * @param {Number} digit The numeric value of a basic code point.\n * @returns {Number} The basic code point whose value (when used for\n * representing integers) is `digit`, which needs to be in the range\n * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n * used; else, the lowercase form is used. The behavior is undefined\n * if `flag` is non-zero and `digit` has no uppercase form.\n */\nconst digitToBasic = function(digit, flag) {\n\t//  0..25 map to ASCII a..z or A..Z\n\t// 26..35 map to ASCII 0..9\n\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n};\n\n/**\n * Bias adaptation function as per section 3.4 of RFC 3492.\n * https://tools.ietf.org/html/rfc3492#section-3.4\n * @private\n */\nconst adapt = function(delta, numPoints, firstTime) {\n\tlet k = 0;\n\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\tdelta += floor(delta / numPoints);\n\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\tdelta = floor(delta / baseMinusTMin);\n\t}\n\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n};\n\n/**\n * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n * symbols.\n * @memberOf punycode\n * @param {String} input The Punycode string of ASCII-only symbols.\n * @returns {String} The resulting string of Unicode symbols.\n */\nconst decode = function(input) {\n\t// Don't use UCS-2.\n\tconst output = [];\n\tconst inputLength = input.length;\n\tlet i = 0;\n\tlet n = initialN;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points: let `basic` be the number of input code\n\t// points before the last delimiter, or `0` if there is none, then copy\n\t// the first basic code points to the output.\n\n\tlet basic = input.lastIndexOf(delimiter);\n\tif (basic < 0) {\n\t\tbasic = 0;\n\t}\n\n\tfor (let j = 0; j < basic; ++j) {\n\t\t// if it's not a basic code point\n\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\terror('not-basic');\n\t\t}\n\t\toutput.push(input.charCodeAt(j));\n\t}\n\n\t// Main decoding loop: start just after the last delimiter if any basic code\n\t// points were copied; start at the beginning otherwise.\n\n\tfor (let index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t// `index` is the index of the next character to be consumed.\n\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t// which gets added to `i`. The overflow checking is easier\n\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t// value at the end to obtain `delta`.\n\t\tlet oldi = i;\n\t\tfor (let w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\tif (index >= inputLength) {\n\t\t\t\terror('invalid-input');\n\t\t\t}\n\n\t\t\tconst digit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\ti += digit * w;\n\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\tif (digit < t) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tconst baseMinusT = base - t;\n\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tw *= baseMinusT;\n\n\t\t}\n\n\t\tconst out = output.length + 1;\n\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t// incrementing `n` each time, so we'll fix that now:\n\t\tif (floor(i / out) > maxInt - n) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tn += floor(i / out);\n\t\ti %= out;\n\n\t\t// Insert `n` at position `i` of the output.\n\t\toutput.splice(i++, 0, n);\n\n\t}\n\n\treturn String.fromCodePoint(...output);\n};\n\n/**\n * Converts a string of Unicode symbols (e.g. a domain name label) to a\n * Punycode string of ASCII-only symbols.\n * @memberOf punycode\n * @param {String} input The string of Unicode symbols.\n * @returns {String} The resulting Punycode string of ASCII-only symbols.\n */\nconst encode = function(input) {\n\tconst output = [];\n\n\t// Convert the input in UCS-2 to an array of Unicode code points.\n\tinput = ucs2decode(input);\n\n\t// Cache the length.\n\tlet inputLength = input.length;\n\n\t// Initialize the state.\n\tlet n = initialN;\n\tlet delta = 0;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points.\n\tfor (const currentValue of input) {\n\t\tif (currentValue < 0x80) {\n\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t}\n\t}\n\n\tlet basicLength = output.length;\n\tlet handledCPCount = basicLength;\n\n\t// `handledCPCount` is the number of code points that have been handled;\n\t// `basicLength` is the number of basic code points.\n\n\t// Finish the basic string with a delimiter unless it's empty.\n\tif (basicLength) {\n\t\toutput.push(delimiter);\n\t}\n\n\t// Main encoding loop:\n\twhile (handledCPCount < inputLength) {\n\n\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t// larger one:\n\t\tlet m = maxInt;\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\tm = currentValue;\n\t\t\t}\n\t\t}\n\n\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t// but guard against overflow.\n\t\tconst handledCPCountPlusOne = handledCPCount + 1;\n\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\tn = m;\n\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\t\t\tif (currentValue == n) {\n\t\t\t\t// Represent delta as a generalized variable-length integer.\n\t\t\t\tlet q = delta;\n\t\t\t\tfor (let k = base; /* no condition */; k += base) {\n\t\t\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tconst qMinusT = q - t;\n\t\t\t\t\tconst baseMinusT = base - t;\n\t\t\t\t\toutput.push(\n\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t);\n\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t}\n\n\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\tdelta = 0;\n\t\t\t\t++handledCPCount;\n\t\t\t}\n\t\t}\n\n\t\t++delta;\n\t\t++n;\n\n\t}\n\treturn output.join('');\n};\n\n/**\n * Converts a Punycode string representing a domain name or an email address\n * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n * it doesn't matter if you call it on a string that has already been\n * converted to Unicode.\n * @memberOf punycode\n * @param {String} input The Punycoded domain name or email address to\n * convert to Unicode.\n * @returns {String} The Unicode representation of the given Punycode\n * string.\n */\nconst toUnicode = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexPunycode.test(string)\n\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t: string;\n\t});\n};\n\n/**\n * Converts a Unicode string representing a domain name or an email address to\n * Punycode. Only the non-ASCII parts of the domain name will be converted,\n * i.e. it doesn't matter if you call it with a domain that's already in\n * ASCII.\n * @memberOf punycode\n * @param {String} input The domain name or email address to convert, as a\n * Unicode string.\n * @returns {String} The Punycode representation of the given domain name or\n * email address.\n */\nconst toASCII = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexNonASCII.test(string)\n\t\t\t? 'xn--' + encode(string)\n\t\t\t: string;\n\t});\n};\n\n/*--------------------------------------------------------------------------*/\n\n/** Define the public API */\nconst punycode = {\n\t/**\n\t * A string representing the current Punycode.js version number.\n\t * @memberOf punycode\n\t * @type String\n\t */\n\t'version': '2.1.0',\n\t/**\n\t * An object of methods to convert from JavaScript's internal character\n\t * representation (UCS-2) to Unicode code points, and back.\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode\n\t * @type Object\n\t */\n\t'ucs2': {\n\t\t'decode': ucs2decode,\n\t\t'encode': ucs2encode\n\t},\n\t'decode': decode,\n\t'encode': encode,\n\t'toASCII': toASCII,\n\t'toUnicode': toUnicode\n};\n\nexport { ucs2decode, ucs2encode, decode, encode, toASCII, toUnicode };\nexport default punycode;\n"],"sourceRoot":""}