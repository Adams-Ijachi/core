{"version":3,"sources":["webpack://@flarum/core/./src/common/helpers/userOnline.tsx","webpack://@flarum/core/./src/forum/components/PostUser.js","webpack://@flarum/core/./src/forum/utils/UserControls.js","webpack://@flarum/core/./src/forum/components/AvatarEditor.js","webpack://@flarum/core/./src/forum/components/UserCard.js","webpack://@flarum/core/./src/forum/components/AffixedSidebar.js","webpack://@flarum/core/./src/forum/components/UserPage.js"],"names":["userOnline","user","lastSeenAt","isOnline","className","icon","window","flreg","add","PostUser","view","post","this","attrs","avatar","username","card","isHidden","cardVisible","UserCard","controlsButtonClassName","Link","href","app","route","listItems","badges","toArray","oncreate","vnode","timeout","$","on","clearTimeout","setTimeout","showCard","bind","hideCard","oncardshow","addClass","removeClass","one","oncardhide","Component","UserControls","controls","context","items","ItemList","forEach","section","length","item","itemName","Separator","userControls","moderationControls","canEdit","canEditCredentials","canEditGroups","Button","onclick","editAction","translator","trans","destructiveControls","id","canDelete","deleteAction","confirm","then","showDeletionAlert","current","matches","UserPage","history","back","location","reload","type","data","attributes","email","message","success","error","alerts","show","modal","AvatarEditor","oninit","loading","isDraggedOver","classList","avatarUrl","title","data-toggle","quickUpload","ondragover","enableDragover","ondragenter","ondragleave","disableDragover","ondragend","ondrop","dropUpload","LoadingIndicator","controlItems","openPicker","remove","e","preventDefault","stopPropagation","upload","dataTransfer","files","appendTo","hide","trigger","target","file","FormData","append","m","redraw","request","method","url","forum","attribute","serialize","raw","body","failure","response","store","pushPayload","avatarColor","color","style","backgroundColor","Dropdown","menuClassName","buttonClassName","label","accessibleToggleLabel","editable","component","infoItems","online","humanTime","ago","joinTime","AffixedSidebar","children","boundOnresize","onresize","resize","onremove","off","$sidebar","$header","$footer","$affixElement","find","removeData","outerHeight","height","affix","offset","top","parseInt","css","bottom","bodyClass","session","sidebarItems","content","set","setTitle","displayName","loadUser","lowercaseUsername","toLowerCase","preloadedApiDocument","all","some","bySlug","SelectDropdown","navItems","LinkButton","commentCount","discussionCount","Page"],"mappings":"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","file":"forum/components/PostUser.js","sourcesContent":["import * as Mithril from 'mithril';\nimport User from '../models/User';\nimport icon from './icon';\n\n/**\n * The `useronline` helper displays a green circle if the user is online\n */\nexport default function userOnline(user: User): Mithril.Vnode {\n  if (user.lastSeenAt() && user.isOnline()) {\n    return <span className=\"UserOnline\">{icon('fas fa-circle')}</span>;\n  }\n}\n\nwindow.flreg.add('helpers/userOnline', userOnline)","import Component from '../../common/Component';\nimport Link from '../../common/components/Link';\nimport UserCard from './UserCard';\nimport avatar from '../../common/helpers/avatar';\nimport username from '../../common/helpers/username';\nimport userOnline from '../../common/helpers/userOnline';\nimport listItems from '../../common/helpers/listItems';\n\n/**\n * The `PostUser` component shows the avatar and username of a post's author.\n *\n * ### Attrs\n *\n * - `post`\n */\nexport default class PostUser extends Component {\n  view() {\n    const post = this.attrs.post;\n    const user = post.user();\n\n    if (!user) {\n      return (\n        <div className=\"PostUser\">\n          <h3>\n            {avatar(user, { className: 'PostUser-avatar' })} {username(user)}\n          </h3>\n        </div>\n      );\n    }\n\n    let card = '';\n\n    if (!post.isHidden() && this.attrs.cardVisible) {\n      card = UserCard.component({\n        user,\n        className: 'UserCard--popover',\n        controlsButtonClassName: 'Button Button--icon Button--flat',\n      });\n    }\n\n    return (\n      <div className=\"PostUser\">\n        <h3>\n          <Link href={app.route.user(user)}>\n            {avatar(user, { className: 'PostUser-avatar' })}\n            {userOnline(user)}\n            {username(user)}\n          </Link>\n        </h3>\n        <ul className=\"PostUser-badges badges\">{listItems(user.badges().toArray())}</ul>\n        {card}\n      </div>\n    );\n  }\n\n  oncreate(vnode) {\n    super.oncreate(vnode);\n\n    let timeout;\n\n    this.$()\n      .on('mouseover', 'h3 a, .UserCard', () => {\n        clearTimeout(timeout);\n        timeout = setTimeout(this.showCard.bind(this), 500);\n      })\n      .on('mouseout', 'h3 a, .UserCard', () => {\n        clearTimeout(timeout);\n        timeout = setTimeout(this.hideCard.bind(this), 250);\n      });\n  }\n\n  /**\n   * Show the user card.\n   */\n  showCard() {\n    this.attrs.oncardshow();\n\n    setTimeout(() => this.$('.UserCard').addClass('in'));\n  }\n\n  /**\n   * Hide the user card.\n   */\n  hideCard() {\n    this.$('.UserCard')\n      .removeClass('in')\n      .one('transitionend webkitTransitionEnd oTransitionEnd', () => {\n        this.attrs.oncardhide();\n      });\n  }\n}\n\nwindow.flreg.add('components/PostUser', PostUser)","import Button from '../../common/components/Button';\nimport Separator from '../../common/components/Separator';\nimport UserPage from '../components/UserPage';\nimport ItemList from '../../common/utils/ItemList';\n\n/**\n * The `UserControls` utility constructs a list of buttons for a user which\n * perform actions on it.\n */\nexport default class UserControls {\n  /**\n   * Get a list of controls for a user.\n   *\n   * @param {User} user\n   * @param {*} context The parent component under which the controls menu will\n   *     be displayed.\n   * @return {ItemList}\n   * @public\n   */\n  controls(user, context) {\n    const items = new ItemList();\n\n    ['user', 'moderation', 'destructive'].forEach((section) => {\n      const controls = this[section + 'Controls'](user, context).toArray();\n      if (controls.length) {\n        controls.forEach((item) => items.add(item.itemName, item));\n        items.add(section + 'Separator', <Separator />);\n      }\n    });\n\n    return items;\n  }\n\n  /**\n   * Get controls for a user pertaining to the current user (e.g. poke, follow).\n   *\n   * @param {User} user\n   * @param {*} context The parent component under which the controls menu will\n   *     be displayed.\n   * @return {ItemList}\n   * @protected\n   */\n  userControls() {\n    return new ItemList();\n  }\n\n  /**\n   * Get controls for a user pertaining to moderation (e.g. suspend, edit).\n   *\n   * @param {User} user\n   * @param {*} context The parent component under which the controls menu will\n   *     be displayed.\n   * @return {ItemList}\n   * @protected\n   */\n  moderationControls(user) {\n    const items = new ItemList();\n\n    if (user.canEdit() || user.canEditCredentials() || user.canEditGroups()) {\n      items.add(\n        'edit',\n        <Button icon=\"fas fa-pencil-alt\" onclick={this.editAction.bind(this, user)}>\n          {app.translator.trans('core.forum.user_controls.edit_button')}\n        </Button>\n      );\n    }\n\n    return items;\n  }\n\n  /**\n   * Get controls for a user which are destructive (e.g. delete).\n   *\n   * @param {User} user\n   * @param {*} context The parent component under which the controls menu will\n   *     be displayed.\n   * @return {ItemList}\n   * @protected\n   */\n  destructiveControls(user) {\n    const items = new ItemList();\n\n    if (user.id() !== '1' && user.canDelete()) {\n      items.add(\n        'delete',\n        <Button icon=\"fas fa-times\" onclick={this.deleteAction.bind(this, user)}>\n          {app.translator.trans('core.forum.user_controls.delete_button')}\n        </Button>\n      );\n    }\n\n    return items;\n  }\n\n  /**\n   * Delete the user.\n   *\n   * @param {User} user\n   */\n  deleteAction(user) {\n    if (!confirm(app.translator.trans('core.forum.user_controls.delete_confirmation'))) {\n      return;\n    }\n\n    user\n      .delete()\n      .then(() => {\n        this.showDeletionAlert(user, 'success');\n        if (app.current.matches(UserPage, { user })) {\n          app.history.back();\n        } else {\n          window.location.reload();\n        }\n      })\n      .catch(() => this.showDeletionAlert(user, 'error'));\n  }\n\n  /**\n   * Show deletion alert of user.\n   *\n   * @param {User} user\n   * @param {string} type\n   */\n  showDeletionAlert(user, type) {\n    const { username, email } = user.data.attributes;\n    const message = {\n      success: 'core.forum.user_controls.delete_success_message',\n      error: 'core.forum.user_controls.delete_error_message',\n    }[type];\n\n    app.alerts.show({ type }, app.translator.trans(message, { username, email }));\n  }\n\n  /**\n   * Edit the user.\n   *\n   * @param {User} user\n   */\n  editAction(user) {\n    const EditUserModal = () => import(/* webpackChunkName: \"forum/components/EditUserModal\" */ '../components/EditUserModal');\n\n    app.modal.show(EditUserModal, { user });\n  }\n}\n\nwindow.flreg.add('utils/UserControls', UserControls)","import Component from '../../common/Component';\nimport avatar from '../../common/helpers/avatar';\nimport icon from '../../common/helpers/icon';\nimport listItems from '../../common/helpers/listItems';\nimport ItemList from '../../common/utils/ItemList';\nimport classList from '../../common/utils/classList';\nimport Button from '../../common/components/Button';\nimport LoadingIndicator from '../../common/components/LoadingIndicator';\n\n/**\n * The `AvatarEditor` component displays a user's avatar along with a dropdown\n * menu which allows the user to upload/remove the avatar.\n *\n * ### Attrs\n *\n * - `className`\n * - `user`\n */\nexport default class AvatarEditor extends Component {\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    /**\n     * Whether or not an avatar upload is in progress.\n     *\n     * @type {Boolean}\n     */\n    this.loading = false;\n\n    /**\n     * Whether or not an image has been dragged over the dropzone.\n     *\n     * @type {Boolean}\n     */\n    this.isDraggedOver = false;\n  }\n\n  view() {\n    const user = this.attrs.user;\n\n    return (\n      <div className={classList(['AvatarEditor', 'Dropdown', this.attrs.className, this.loading && 'loading', this.isDraggedOver && 'dragover'])}>\n        {avatar(user)}\n        <a\n          className={user.avatarUrl() ? 'Dropdown-toggle' : 'Dropdown-toggle AvatarEditor--noAvatar'}\n          title={app.translator.trans('core.forum.user.avatar_upload_tooltip')}\n          data-toggle=\"dropdown\"\n          onclick={this.quickUpload.bind(this)}\n          ondragover={this.enableDragover.bind(this)}\n          ondragenter={this.enableDragover.bind(this)}\n          ondragleave={this.disableDragover.bind(this)}\n          ondragend={this.disableDragover.bind(this)}\n          ondrop={this.dropUpload.bind(this)}\n        >\n          {this.loading ? <LoadingIndicator /> : user.avatarUrl() ? icon('fas fa-pencil-alt') : icon('fas fa-plus-circle')}\n        </a>\n        <ul className=\"Dropdown-menu Menu\">{listItems(this.controlItems().toArray())}</ul>\n      </div>\n    );\n  }\n\n  /**\n   * Get the items in the edit avatar dropdown menu.\n   *\n   * @return {ItemList}\n   */\n  controlItems() {\n    const items = new ItemList();\n\n    items.add(\n      'upload',\n      <Button icon=\"fas fa-upload\" onclick={this.openPicker.bind(this)}>\n        {app.translator.trans('core.forum.user.avatar_upload_button')}\n      </Button>\n    );\n\n    items.add(\n      'remove',\n      <Button icon=\"fas fa-times\" onclick={this.remove.bind(this)}>\n        {app.translator.trans('core.forum.user.avatar_remove_button')}\n      </Button>\n    );\n\n    return items;\n  }\n\n  /**\n   * Enable dragover style\n   *\n   * @param {Event} e\n   */\n  enableDragover(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.isDraggedOver = true;\n  }\n\n  /**\n   * Disable dragover style\n   *\n   * @param {Event} e\n   */\n  disableDragover(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.isDraggedOver = false;\n  }\n\n  /**\n   * Upload avatar when file is dropped into dropzone.\n   *\n   * @param {Event} e\n   */\n  dropUpload(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.isDraggedOver = false;\n    this.upload(e.dataTransfer.files[0]);\n  }\n\n  /**\n   * If the user doesn't have an avatar, there's no point in showing the\n   * controls dropdown, because only one option would be viable: uploading.\n   * Thus, when the avatar editor's dropdown toggle button is clicked, we prompt\n   * the user to upload an avatar immediately.\n   *\n   * @param {Event} e\n   */\n  quickUpload(e) {\n    if (!this.attrs.user.avatarUrl()) {\n      e.preventDefault();\n      e.stopPropagation();\n      this.openPicker();\n    }\n  }\n\n  /**\n   * Upload avatar using file picker\n   */\n  openPicker() {\n    if (this.loading) return;\n\n    // Create a hidden HTML input element and click on it so the user can select\n    // an avatar file. Once they have, we will upload it via the API.\n    const $input = $('<input type=\"file\">');\n\n    $input\n      .appendTo('body')\n      .hide()\n      .trigger('click')\n      .on('input', (e) => {\n        this.upload($(e.target)[0].files[0]);\n      });\n  }\n\n  /**\n   * Upload avatar\n   *\n   * @param {File} file\n   */\n  upload(file) {\n    if (this.loading) return;\n\n    const user = this.attrs.user;\n    const data = new FormData();\n    data.append('avatar', file);\n\n    this.loading = true;\n    m.redraw();\n\n    app\n      .request({\n        method: 'POST',\n        url: `${app.forum.attribute('apiUrl')}/users/${user.id()}/avatar`,\n        serialize: (raw) => raw,\n        body: data,\n      })\n      .then(this.success.bind(this), this.failure.bind(this));\n  }\n\n  /**\n   * Remove the user's avatar.\n   */\n  remove() {\n    const user = this.attrs.user;\n\n    this.loading = true;\n    m.redraw();\n\n    app\n      .request({\n        method: 'DELETE',\n        url: `${app.forum.attribute('apiUrl')}/users/${user.id()}/avatar`,\n      })\n      .then(this.success.bind(this), this.failure.bind(this));\n  }\n\n  /**\n   * After a successful upload/removal, push the updated user data into the\n   * store, and force a recomputation of the user's avatar color.\n   *\n   * @param {Object} response\n   * @protected\n   */\n  success(response) {\n    app.store.pushPayload(response);\n    delete this.attrs.user.avatarColor;\n\n    this.loading = false;\n    m.redraw();\n  }\n\n  /**\n   * If avatar upload/removal fails, stop loading.\n   *\n   * @param {Object} response\n   * @protected\n   */\n  failure(response) {\n    this.loading = false;\n    m.redraw();\n  }\n}\n\nwindow.flreg.add('components/AvatarEditor', AvatarEditor)","import Component from '../../common/Component';\nimport humanTime from '../../common/utils/humanTime';\nimport ItemList from '../../common/utils/ItemList';\nimport UserControls from '../utils/UserControls';\nimport avatar from '../../common/helpers/avatar';\nimport username from '../../common/helpers/username';\nimport icon from '../../common/helpers/icon';\nimport Dropdown from '../../common/components/Dropdown';\nimport Link from '../../common/components/Link';\nimport AvatarEditor from './AvatarEditor';\nimport listItems from '../../common/helpers/listItems';\n\n/**\n * The `UserCard` component displays a user's profile card. This is used both on\n * the `UserPage` (in the hero) and in discussions, shown when hovering over a\n * post author.\n *\n * ### Attrs\n *\n * - `user`\n * - `className`\n * - `editable`\n * - `controlsButtonClassName`\n */\nexport default class UserCard extends Component {\n  view() {\n    const user = this.attrs.user;\n    const controls = new UserControls().controls(user, this).toArray();\n    const color = user.color();\n    const badges = user.badges().toArray();\n\n    return (\n      <div className={'UserCard ' + (this.attrs.className || '')} style={color ? { backgroundColor: color } : ''}>\n        <div className=\"darkenBackground\">\n          <div className=\"container\">\n            {controls.length\n              ? Dropdown.component(\n                  {\n                    className: 'UserCard-controls App-primaryControl',\n                    menuClassName: 'Dropdown-menu--right',\n                    buttonClassName: this.attrs.controlsButtonClassName,\n                    label: app.translator.trans('core.forum.user_controls.button'),\n                    accessibleToggleLabel: app.translator.trans('core.forum.user_controls.toggle_dropdown_accessible_label'),\n                    icon: 'fas fa-ellipsis-v',\n                  },\n                  controls\n                )\n              : ''}\n\n            <div className=\"UserCard-profile\">\n              <h2 className=\"UserCard-identity\">\n                {this.attrs.editable ? (\n                  [AvatarEditor.component({ user, className: 'UserCard-avatar' }), username(user)]\n                ) : (\n                  <Link href={app.route.user(user)}>\n                    <div className=\"UserCard-avatar\">{avatar(user)}</div>\n                    {username(user)}\n                  </Link>\n                )}\n              </h2>\n\n              {badges.length ? <ul className=\"UserCard-badges badges\">{listItems(badges)}</ul> : ''}\n\n              <ul className=\"UserCard-info\">{listItems(this.infoItems().toArray())}</ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  /**\n   * Build an item list of tidbits of info to show on this user's profile.\n   *\n   * @return {ItemList}\n   */\n  infoItems() {\n    const items = new ItemList();\n    const user = this.attrs.user;\n    const lastSeenAt = user.lastSeenAt();\n\n    if (lastSeenAt) {\n      const online = user.isOnline();\n\n      items.add(\n        'lastSeen',\n        <span className={'UserCard-lastSeen' + (online ? ' online' : '')}>\n          {online\n            ? [icon('fas fa-circle'), ' ', app.translator.trans('core.forum.user.online_text')]\n            : [icon('far fa-clock'), ' ', humanTime(lastSeenAt)]}\n        </span>\n      );\n    }\n\n    items.add(\n      'joined',\n      <span className=\"UserCard-joinedAt\">{app.translator.trans('core.forum.user.joined_date_text', { ago: humanTime(user.joinTime()) })}</span>\n    );\n\n    return items;\n  }\n}\n\nwindow.flreg.add('components/UserCard', UserCard)","import Component from '../../common/Component';\n\n/**\n * The `AffixedSidebar` component uses Bootstrap's \"affix\" plugin to keep a\n * sidebar navigation at the top of the viewport when scrolling.\n *\n * ### Children\n *\n * The component must wrap an element that itself wraps an <ul> element, which\n * will be \"affixed\".\n *\n * @see https://getbootstrap.com/docs/3.4/javascript/#affix\n */\nexport default class AffixedSidebar extends Component {\n  view(vnode) {\n    return vnode.children[0];\n  }\n\n  oncreate(vnode) {\n    super.oncreate(vnode);\n\n    // Register the affix plugin to execute on every window resize (and trigger)\n    this.boundOnresize = this.onresize.bind(this);\n    $(window).on('resize', this.boundOnresize).resize();\n  }\n\n  onremove() {\n    $(window).off('resize', this.boundOnresize);\n  }\n\n  onresize() {\n    const $sidebar = this.$();\n    const $header = $('#header');\n    const $footer = $('#footer');\n    const $affixElement = $sidebar.find('> ul');\n\n    $(window).off('.affix');\n    $affixElement.removeClass('affix affix-top affix-bottom').removeData('bs.affix');\n\n    // Don't affix the sidebar if it is taller than the viewport (otherwise\n    // there would be no way to scroll through its content).\n    if ($sidebar.outerHeight(true) > $(window).height() - $header.outerHeight(true)) return;\n\n    $affixElement.affix({\n      offset: {\n        top: () => $sidebar.offset().top - $header.outerHeight(true) - parseInt($sidebar.css('margin-top'), 10),\n        bottom: () => (this.bottom = $footer.outerHeight(true)),\n      },\n    });\n  }\n}\n\nwindow.flreg.add('components/AffixedSidebar', AffixedSidebar)","import Page from '../../common/components/Page';\nimport ItemList from '../../common/utils/ItemList';\nimport UserCard from './UserCard';\nimport LoadingIndicator from '../../common/components/LoadingIndicator';\nimport SelectDropdown from '../../common/components/SelectDropdown';\nimport LinkButton from '../../common/components/LinkButton';\nimport Separator from '../../common/components/Separator';\nimport listItems from '../../common/helpers/listItems';\nimport AffixedSidebar from './AffixedSidebar';\n\n/**\n * The `UserPage` component shows a user's profile. It can be extended to show\n * content inside of the content area. See `ActivityPage` and `SettingsPage` for\n * examples.\n *\n * @abstract\n */\nexport default class UserPage extends Page {\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    /**\n     * The user this page is for.\n     *\n     * @type {User}\n     */\n    this.user = null;\n\n    this.bodyClass = 'App--user';\n  }\n\n  view() {\n    return (\n      <div className=\"UserPage\">\n        {this.user\n          ? [\n              <UserCard\n                user={this.user}\n                className=\"Hero UserHero\"\n                editable={this.user.canEdit() || this.user === app.session.user}\n                controlsButtonClassName=\"Button\"\n              />,\n              <div className=\"container\">\n                <div className=\"sideNavContainer\">\n                  <AffixedSidebar>\n                    <nav className=\"sideNav UserPage-nav\">\n                      <ul>{listItems(this.sidebarItems().toArray())}</ul>\n                    </nav>\n                  </AffixedSidebar>\n                  <div className=\"sideNavOffset UserPage-content\">{this.content()}</div>\n                </div>\n              </div>,\n            ]\n          : [<LoadingIndicator className=\"LoadingIndicator--block\" />]}\n      </div>\n    );\n  }\n\n  /**\n   * Get the content to display in the user page.\n   *\n   * @return {VirtualElement}\n   */\n  content() {}\n\n  /**\n   * Initialize the component with a user, and trigger the loading of their\n   * activity feed.\n   *\n   * @param {User} user\n   * @protected\n   */\n  show(user) {\n    this.user = user;\n\n    app.current.set('user', user);\n\n    app.setTitle(user.displayName());\n\n    m.redraw();\n  }\n\n  /**\n   * Given a username, load the user's profile from the store, or make a request\n   * if we don't have it yet. Then initialize the profile page with that user.\n   *\n   * @param {String} username\n   */\n  loadUser(username) {\n    const lowercaseUsername = username.toLowerCase();\n\n    // Load the preloaded user object, if any, into the global app store\n    // We don't use the output of the method because it returns raw JSON\n    // instead of the parsed models\n    app.preloadedApiDocument();\n\n    app.store.all('users').some((user) => {\n      if ((user.username().toLowerCase() === lowercaseUsername || user.id() === username) && user.joinTime()) {\n        this.show(user);\n        return true;\n      }\n    });\n\n    if (!this.user) {\n      app.store.find('users', username, { bySlug: true }).then(this.show.bind(this));\n    }\n  }\n\n  /**\n   * Build an item list for the content of the sidebar.\n   *\n   * @return {ItemList}\n   */\n  sidebarItems() {\n    const items = new ItemList();\n\n    items.add(\n      'nav',\n      <SelectDropdown className=\"App-titleControl\" buttonClassName=\"Button\">\n        {this.navItems().toArray()}\n      </SelectDropdown>\n    );\n\n    return items;\n  }\n\n  /**\n   * Build an item list for the navigation in the sidebar.\n   *\n   * @return {ItemList}\n   */\n  navItems() {\n    const items = new ItemList();\n    const user = this.user;\n\n    items.add(\n      'posts',\n      <LinkButton href={app.route('user.posts', { username: user.username() })} icon=\"far fa-comment\">\n        {app.translator.trans('core.forum.user.posts_link')} <span className=\"Button-badge\">{user.commentCount()}</span>\n      </LinkButton>,\n      100\n    );\n\n    items.add(\n      'discussions',\n      <LinkButton href={app.route('user.discussions', { username: user.username() })} icon=\"fas fa-bars\">\n        {app.translator.trans('core.forum.user.discussions_link')} <span className=\"Button-badge\">{user.discussionCount()}</span>\n      </LinkButton>,\n      90\n    );\n\n    if (app.session.user === user) {\n      items.add('separator', <Separator />, -90);\n      items.add(\n        'settings',\n        <LinkButton href={app.route('settings')} icon=\"fas fa-cog\">\n          {app.translator.trans('core.forum.user.settings_link')}\n        </LinkButton>,\n        -100\n      );\n    }\n\n    return items;\n  }\n}\n\nwindow.flreg.add('components/UserPage', UserPage)"],"sourceRoot":""}