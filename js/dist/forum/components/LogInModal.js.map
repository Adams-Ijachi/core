{"version":3,"sources":["webpack://@flarum/core/./src/forum/components/LogInButtons.js","webpack://@flarum/core/./src/forum/components/LogInModal.js"],"names":["LogInButtons","view","className","this","items","toArray","ItemList","Component","window","flreg","add","LogInModal","oninit","vnode","identification","Stream","attrs","password","remember","title","app","translator","trans","content","body","footer","fields","name","type","placeholder","extractText","bidi","disabled","loading","Button","onclick","forgotPassword","bind","forum","attribute","a","signUp","email","indexOf","undefined","modal","show","onready","$","select","onsubmit","e","preventDefault","session","login","errorHandler","onerror","then","location","reload","loaded","error","status","alert","Modal"],"mappings":"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","file":"forum/components/LogInModal.js","sourcesContent":["import Component from '../../common/Component';\nimport ItemList from '../../common/utils/ItemList';\n\n/**\n * The `LogInButtons` component displays a collection of social login buttons.\n */\nexport default class LogInButtons extends Component {\n  view() {\n    return <div className=\"LogInButtons\">{this.items().toArray()}</div>;\n  }\n\n  /**\n   * Build a list of LogInButton components.\n   *\n   * @return {ItemList}\n   * @public\n   */\n  items() {\n    return new ItemList();\n  }\n}\n\nwindow.flreg.add('components/LogInButtons', LogInButtons)","import Modal from '../../common/components/Modal';\nimport Button from '../../common/components/Button';\nimport LogInButtons from './LogInButtons';\nimport extractText from '../../common/utils/extractText';\nimport ItemList from '../../common/utils/ItemList';\nimport Stream from '../../common/utils/Stream';\n\n/**\n * The `LogInModal` component displays a modal dialog with a login form.\n *\n * ### Attrs\n *\n * - `identification`\n * - `password`\n */\nexport default class LogInModal extends Modal {\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    /**\n     * The value of the identification input.\n     *\n     * @type {Function}\n     */\n    this.identification = Stream(this.attrs.identification || '');\n\n    /**\n     * The value of the password input.\n     *\n     * @type {Function}\n     */\n    this.password = Stream(this.attrs.password || '');\n\n    /**\n     * The value of the remember me input.\n     *\n     * @type {Function}\n     */\n    this.remember = Stream(!!this.attrs.remember);\n  }\n\n  className() {\n    return 'LogInModal Modal--small';\n  }\n\n  title() {\n    return app.translator.trans('core.forum.log_in.title');\n  }\n\n  content() {\n    return [<div className=\"Modal-body\">{this.body()}</div>, <div className=\"Modal-footer\">{this.footer()}</div>];\n  }\n\n  body() {\n    return [<LogInButtons />, <div className=\"Form Form--centered\">{this.fields().toArray()}</div>];\n  }\n\n  fields() {\n    const items = new ItemList();\n\n    items.add(\n      'identification',\n      <div className=\"Form-group\">\n        <input\n          className=\"FormControl\"\n          name=\"identification\"\n          type=\"text\"\n          placeholder={extractText(app.translator.trans('core.forum.log_in.username_or_email_placeholder'))}\n          bidi={this.identification}\n          disabled={this.loading}\n        />\n      </div>,\n      30\n    );\n\n    items.add(\n      'password',\n      <div className=\"Form-group\">\n        <input\n          className=\"FormControl\"\n          name=\"password\"\n          type=\"password\"\n          placeholder={extractText(app.translator.trans('core.forum.log_in.password_placeholder'))}\n          bidi={this.password}\n          disabled={this.loading}\n        />\n      </div>,\n      20\n    );\n\n    items.add(\n      'remember',\n      <div className=\"Form-group\">\n        <div>\n          <label className=\"checkbox\">\n            <input type=\"checkbox\" bidi={this.remember} disabled={this.loading} />\n            {app.translator.trans('core.forum.log_in.remember_me_label')}\n          </label>\n        </div>\n      </div>,\n      10\n    );\n\n    items.add(\n      'submit',\n      <div className=\"Form-group\">\n        {Button.component(\n          {\n            className: 'Button Button--primary Button--block',\n            type: 'submit',\n            loading: this.loading,\n          },\n          app.translator.trans('core.forum.log_in.submit_button')\n        )}\n      </div>,\n      -10\n    );\n\n    return items;\n  }\n\n  footer() {\n    return [\n      <p className=\"LogInModal-forgotPassword\">\n        <a onclick={this.forgotPassword.bind(this)}>{app.translator.trans('core.forum.log_in.forgot_password_link')}</a>\n      </p>,\n\n      app.forum.attribute('allowSignUp') ? (\n        <p className=\"LogInModal-signUp\">{app.translator.trans('core.forum.log_in.sign_up_text', { a: <a onclick={this.signUp.bind(this)} /> })}</p>\n      ) : (\n        ''\n      ),\n    ];\n  }\n\n  /**\n   * Open the forgot password modal, prefilling it with an email if the user has\n   * entered one.\n   *\n   * @public\n   */\n  forgotPassword() {\n    const ForgotPasswordModal = () => import(/* webpackChunkName: \"forum/components/ForgotPasswordModal\" */ './ForgotPasswordModal');\n\n    const email = this.identification();\n    const attrs = email.indexOf('@') !== -1 ? { email } : undefined;\n\n    app.modal.show(ForgotPasswordModal, attrs);\n  }\n\n  /**\n   * Open the sign up modal, prefilling it with an email/username/password if\n   * the user has entered one.\n   *\n   * @public\n   */\n  signUp() {\n    const SignUpModal = () => import(/* webpackChunkName: \"forum/components/SignUpModal\" */ './SignUpModal');\n\n    const attrs = { password: this.password() };\n    const identification = this.identification();\n    attrs[identification.indexOf('@') !== -1 ? 'email' : 'username'] = identification;\n\n    app.modal.show(SignUpModal, attrs);\n  }\n\n  onready() {\n    this.$('[name=' + (this.identification() ? 'password' : 'identification') + ']').select();\n  }\n\n  onsubmit(e) {\n    e.preventDefault();\n\n    this.loading = true;\n\n    const identification = this.identification();\n    const password = this.password();\n    const remember = this.remember();\n\n    app.session\n      .login({ identification, password, remember }, { errorHandler: this.onerror.bind(this) })\n      .then(() => window.location.reload(), this.loaded.bind(this));\n  }\n\n  onerror(error) {\n    if (error.status === 401) {\n      error.alert.content = app.translator.trans('core.forum.log_in.invalid_login_message');\n    }\n\n    super.onerror(error);\n  }\n}\n\nwindow.flreg.add('components/LogInModal', LogInModal)"],"sourceRoot":""}