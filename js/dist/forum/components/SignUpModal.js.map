{"version":3,"sources":["webpack://@flarum/core/./src/forum/components/SignUpModal.js"],"names":["SignUpModal","oninit","vnode","this","username","Stream","attrs","email","password","className","title","app","translator","trans","content","body","footer","isProvided","field","provided","indexOf","token","fields","toArray","items","ItemList","add","name","type","placeholder","extractText","bidi","disabled","loading","a","onclick","logIn","bind","identification","modal","show","onready","$","select","onsubmit","e","preventDefault","submitData","request","url","forum","attribute","method","errorHandler","onerror","then","window","location","reload","loaded","data","Modal"],"mappings":"iNAiBqBA,E,sGACnBC,OAAA,SAAOC,GACL,YAAMD,OAAN,UAAaC,GAObC,KAAKC,UAAWC,OAAOF,KAAKG,MAAMF,UAAY,IAO9CD,KAAKI,OAAQF,OAAOF,KAAKG,MAAMC,OAAS,IAOxCJ,KAAKK,UAAWH,OAAOF,KAAKG,MAAME,UAAY,K,EAGhDC,UAAA,WACE,MAAO,4B,EAGTC,MAAA,WACE,OAAOC,IAAIC,WAAWC,MAAM,6B,EAG9BC,QAAA,WACE,MAAO,CAAC,SAAKL,UAAU,cAAcN,KAAKY,QAAe,SAAKN,UAAU,gBAAgBN,KAAKa,Y,EAG/FC,WAAA,SAAWC,GACT,OAAOf,KAAKG,MAAMa,WAAoD,IAAxChB,KAAKG,MAAMa,SAASC,QAAQF,I,EAG5DH,KAAA,WACE,MAAO,CAACZ,KAAKG,MAAMe,MAAQ,GAAK,EAAC,IAAD,MAAkB,SAAKZ,UAAU,uBAAuBN,KAAKmB,SAASC,a,EAGxGD,OAAA,WACE,IAAME,EAAQ,IAAIC,IA2DlB,OAzDAD,EAAME,IACJ,WACA,SAAKjB,UAAU,cACb,WACEA,UAAU,cACVkB,KAAK,WACLC,KAAK,OACLC,aAAaC,OAAYnB,IAAIC,WAAWC,MAAM,4CAC9CkB,KAAM5B,KAAKC,SACX4B,SAAU7B,KAAK8B,SAAW9B,KAAKc,WAAW,eAG9C,IAGFO,EAAME,IACJ,QACA,SAAKjB,UAAU,cACb,WACEA,UAAU,cACVkB,KAAK,QACLC,KAAK,QACLC,aAAaC,OAAYnB,IAAIC,WAAWC,MAAM,yCAC9CkB,KAAM5B,KAAKI,MACXyB,SAAU7B,KAAK8B,SAAW9B,KAAKc,WAAW,YAG9C,IAGGd,KAAKG,MAAMe,OACdG,EAAME,IACJ,WACA,SAAKjB,UAAU,cACb,WACEA,UAAU,cACVkB,KAAK,WACLC,KAAK,WACLC,aAAaC,OAAYnB,IAAIC,WAAWC,MAAM,4CAC9CkB,KAAM5B,KAAKK,SACXwB,SAAU7B,KAAK8B,WAGnB,IAIJT,EAAME,IACJ,SACA,SAAKjB,UAAU,cACb,EAAC,IAAD,CAAQA,UAAU,uCAAuCmB,KAAK,SAASK,QAAS9B,KAAK8B,SAClFtB,IAAIC,WAAWC,MAAM,uCAGzB,IAGIW,G,EAGTR,OAAA,WACE,MAAO,CACL,OAAGP,UAAU,qBAAqBE,IAAIC,WAAWC,MAAM,iCAAkC,CAAEqB,EAAG,OAAGC,QAAShC,KAAKiC,MAAMC,KAAKlC,a,EAU9HiC,MAAA,WACE,IAEM9B,EAAQ,CACZgC,eAAgBnC,KAAKI,SAAWJ,KAAKC,WACrCI,SAAUL,KAAKK,YAGjBG,IAAI4B,MAAMC,MAPS,kBAAM,gCAOElC,I,EAG7BmC,QAAA,WACMtC,KAAKG,MAAMF,WAAaD,KAAKG,MAAMC,MACrCJ,KAAKuC,EAAE,gBAAgBC,SAEvBxC,KAAKuC,EAAE,mBAAmBC,U,EAI9BC,SAAA,SAASC,GACPA,EAAEC,iBAEF3C,KAAK8B,SAAU,EAEf,IAAMlB,EAAOZ,KAAK4C,aAElBpC,IACGqC,QAAQ,CACPC,IAAKtC,IAAIuC,MAAMC,UAAU,WAAa,YACtCC,OAAQ,OACRrC,OACAsC,aAAclD,KAAKmD,QAAQjB,KAAKlC,QAEjCoD,MAAK,kBAAMC,OAAOC,SAASC,WAAUvD,KAAKwD,OAAOtB,KAAKlC,Q,EAS3D4C,WAAA,WACE,IAAMa,EAAO,CACXxD,SAAUD,KAAKC,WACfG,MAAOJ,KAAKI,SASd,OANIJ,KAAKG,MAAMe,MACbuC,EAAKvC,MAAQlB,KAAKG,MAAMe,MAExBuC,EAAKpD,SAAWL,KAAKK,WAGhBoD,G,GA/K8BC","file":"forum/components/SignUpModal.js","sourcesContent":["import Modal from '../../common/components/Modal';\nimport Button from '../../common/components/Button';\nimport LogInButtons from './LogInButtons';\nimport extractText from '../../common/utils/extractText';\nimport ItemList from '../../common/utils/ItemList';\nimport Stream from '../../common/utils/Stream';\n\n/**\n * The `SignUpModal` component displays a modal dialog with a singup form.\n *\n * ### Attrs\n *\n * - `username`\n * - `email`\n * - `password`\n * - `token` An email token to sign up with.\n */\nexport default class SignUpModal extends Modal {\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    /**\n     * The value of the username input.\n     *\n     * @type {Function}\n     */\n    this.username = Stream(this.attrs.username || '');\n\n    /**\n     * The value of the email input.\n     *\n     * @type {Function}\n     */\n    this.email = Stream(this.attrs.email || '');\n\n    /**\n     * The value of the password input.\n     *\n     * @type {Function}\n     */\n    this.password = Stream(this.attrs.password || '');\n  }\n\n  className() {\n    return 'Modal--small SignUpModal';\n  }\n\n  title() {\n    return app.translator.trans('core.forum.sign_up.title');\n  }\n\n  content() {\n    return [<div className=\"Modal-body\">{this.body()}</div>, <div className=\"Modal-footer\">{this.footer()}</div>];\n  }\n\n  isProvided(field) {\n    return this.attrs.provided && this.attrs.provided.indexOf(field) !== -1;\n  }\n\n  body() {\n    return [this.attrs.token ? '' : <LogInButtons />, <div className=\"Form Form--centered\">{this.fields().toArray()}</div>];\n  }\n\n  fields() {\n    const items = new ItemList();\n\n    items.add(\n      'username',\n      <div className=\"Form-group\">\n        <input\n          className=\"FormControl\"\n          name=\"username\"\n          type=\"text\"\n          placeholder={extractText(app.translator.trans('core.forum.sign_up.username_placeholder'))}\n          bidi={this.username}\n          disabled={this.loading || this.isProvided('username')}\n        />\n      </div>,\n      30\n    );\n\n    items.add(\n      'email',\n      <div className=\"Form-group\">\n        <input\n          className=\"FormControl\"\n          name=\"email\"\n          type=\"email\"\n          placeholder={extractText(app.translator.trans('core.forum.sign_up.email_placeholder'))}\n          bidi={this.email}\n          disabled={this.loading || this.isProvided('email')}\n        />\n      </div>,\n      20\n    );\n\n    if (!this.attrs.token) {\n      items.add(\n        'password',\n        <div className=\"Form-group\">\n          <input\n            className=\"FormControl\"\n            name=\"password\"\n            type=\"password\"\n            placeholder={extractText(app.translator.trans('core.forum.sign_up.password_placeholder'))}\n            bidi={this.password}\n            disabled={this.loading}\n          />\n        </div>,\n        10\n      );\n    }\n\n    items.add(\n      'submit',\n      <div className=\"Form-group\">\n        <Button className=\"Button Button--primary Button--block\" type=\"submit\" loading={this.loading}>\n          {app.translator.trans('core.forum.sign_up.submit_button')}\n        </Button>\n      </div>,\n      -10\n    );\n\n    return items;\n  }\n\n  footer() {\n    return [\n      <p className=\"SignUpModal-logIn\">{app.translator.trans('core.forum.sign_up.log_in_text', { a: <a onclick={this.logIn.bind(this)} /> })}</p>,\n    ];\n  }\n\n  /**\n   * Open the log in modal, prefilling it with an email/username/password if\n   * the user has entered one.\n   *\n   * @public\n   */\n  logIn() {\n    const LogInModal = () => import(/* webpackChunkName: \"forum/components/LogInModal\" */ './LogInModal');\n\n    const attrs = {\n      identification: this.email() || this.username(),\n      password: this.password(),\n    };\n\n    app.modal.show(LogInModal, attrs);\n  }\n\n  onready() {\n    if (this.attrs.username && !this.attrs.email) {\n      this.$('[name=email]').select();\n    } else {\n      this.$('[name=username]').select();\n    }\n  }\n\n  onsubmit(e) {\n    e.preventDefault();\n\n    this.loading = true;\n\n    const body = this.submitData();\n\n    app\n      .request({\n        url: app.forum.attribute('baseUrl') + '/register',\n        method: 'POST',\n        body,\n        errorHandler: this.onerror.bind(this),\n      })\n      .then(() => window.location.reload(), this.loaded.bind(this));\n  }\n\n  /**\n   * Get the data that should be submitted in the sign-up request.\n   *\n   * @return {Object}\n   * @protected\n   */\n  submitData() {\n    const data = {\n      username: this.username(),\n      email: this.email(),\n    };\n\n    if (this.attrs.token) {\n      data.token = this.attrs.token;\n    } else {\n      data.password = this.password();\n    }\n\n    return data;\n  }\n}\n"],"sourceRoot":""}